["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/RGB.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$RGB=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");require=require(\"module$node_modules$konva$lib$Validators\");exports.RGB=function(imageData){imageData=imageData.data;var nPixels=imageData.length,red=this.red(),green=this.green(),blue=this.blue(),i;for(i=0;i<nPixels;i+=4){var brightness=(.34*\nimageData[i]+.5*imageData[i+1]+.16*imageData[i+2])/255;imageData[i]=brightness*red;imageData[i+1]=brightness*green;imageData[i+2]=brightness*blue;imageData[i+3]=imageData[i+3]}};global.Factory.addGetterSetter(module.Node,\"red\",0,function(val){this._filterUpToDate=!1;return 255<val?255:0>val?0:Math.round(val)});global.Factory.addGetterSetter(module.Node,\"green\",0,function(val){this._filterUpToDate=!1;return 255<val?255:0>val?0:Math.round(val)});global.Factory.addGetterSetter(module.Node,\"blue\",0,require.RGBComponent,\nglobal.Factory.afterSetFilter)}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$RGB\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","RGB","value","_filterUpToDate"]],"~:compiled-at",1606342205877,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$RGB.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtGC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAYN,OAAA,CAAQ,uCAAR,CACZO,OAAAA,CAASP,OAAA,CAAQ,oCAAR,CACTQ,QAAAA,CAAeR,OAAA,CAAQ,0CAAR,CACnBE,QAAAO,IAAA,CAAcC,QAAS,CAACC,SAAD,CAAY,CAC3BC,SAAAA,CAAOD,SAAAC,KADoB,KACJC,QAAUD,SAAAE,OADN,CACmBC,IAAM,IAAAA,IAAA,EADzB,CACqCC,MAAQ,IAAAA,MAAA,EAD7C,CAC2DC,KAAO,IAAAA,KAAA,EADlE,CAC+EC,CAC9G,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBL,OAAhB,CAAyBK,CAAzB,EAA8B,CAA9B,CAAiC,CAC7B,IAAAC,YACK,GADLA;AACYP,SAAA,CAAKM,CAAL,CADZC,CACsB,EADtBA,CAC4BP,SAAA,CAAKM,CAAL,CAAS,CAAT,CAD5BC,CAC0C,GAD1CA,CACiDP,SAAA,CAAKM,CAAL,CAAS,CAAT,CADjDC,EACgE,GAChEP,UAAA,CAAKM,CAAL,CAAA,CAAUC,UAAV,CAAuBJ,GACvBH,UAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcC,UAAd,CAA2BH,KAC3BJ,UAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcC,UAAd,CAA2BF,IAC3BL,UAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcN,SAAA,CAAKM,CAAL,CAAS,CAAT,CANe,CAFF,CAWnCZ,OAAAc,QAAAC,gBAAA,CAAkCd,MAAAe,KAAlC,CAA+C,KAA/C,CAAsD,CAAtD,CAAyD,QAAS,CAACC,GAAD,CAAM,CACpE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,GAAJ,CACW,GADX,CAGe,CAAV,CAAIA,GAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,GAAX,CATyD,CAAxE,CAYAjB,OAAAc,QAAAC,gBAAA,CAAkCd,MAAAe,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,GAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,GAAJ,CACW,GADX,CAGe,CAAV,CAAIA,GAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,GAAX,CAT2D,CAA1E,CAYAjB,OAAAc,QAAAC,gBAAA,CAAkCd,MAAAe,KAAlC,CAA+C,MAA/C,CAAuD,CAAvD,CAA0Dd,OAAAmB,aAA1D;AAAqFrB,MAAAc,QAAAQ,eAArF,CAzCsG;\",\n\"sources\":[\"node_modules/konva/lib/filters/RGB.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$RGB\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.RGB = function (imageData) {\\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\\n    for (i = 0; i < nPixels; i += 4) {\\n        brightness =\\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\\n        data[i] = brightness * red;\\n        data[i + 1] = brightness * green;\\n        data[i + 2] = brightness * blue;\\n        data[i + 3] = data[i + 3];\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"RGB\",\"exports.RGB\",\"imageData\",\"data\",\"nPixels\",\"length\",\"red\",\"green\",\"blue\",\"i\",\"brightness\",\"Factory\",\"addGetterSetter\",\"Node\",\"val\",\"_filterUpToDate\",\"Math\",\"round\",\"RGBComponent\",\"afterSetFilter\"]\n}\n"]