["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/check-word/index.js"],"~:js","shadow$provide.module$node_modules$check_word$index=function(global,require,module,exports){var fs=require(\"shadow$empty\");module.exports=function(language){language=language&&language.toLowerCase()||\"en\";if(-1==[\"de\",\"en\",\"es\",\"fr\"].indexOf(language))throw Error(language+\" is not valid language\");return{check:function(word){var content=fs.readFileSync(\"//words/\"+language+\".txt\");word=new RegExp(\"\\n\"+word+\"\\n\");return content.toString(\"utf-8\").match(word)?!0:!1}}}}","~:source","shadow$provide[\"module$node_modules$check_word$index\"] = function(global,require,module,exports) {\nvar fs = require('fs');\n\nvar words = function(language){\n    var possibleLanguages = ['de', 'en', 'es', 'fr'];\n\n    language = language && language.toLowerCase() || 'en';\n\n    if(possibleLanguages.indexOf(language) == -1) throw new Error(language + \" is not valid language\");\n    return {\n        check : function(word){\n            var content = fs.readFileSync(__dirname + '/words/'+language+'.txt');\n            var regex = new RegExp('\\n' + word +'\\n');\n            if ( content.toString('utf-8').match(regex)) {\n                return true;\n            }\n            return false;\n        }\n    };\n};\n\n\nmodule.exports = words;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow$empty","~$shadow.js"]],"~:properties",["^5",["check"]],"~:compiled-at",1567477111488,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$check_word$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACjG,IAAIC,GAAKH,OAAA,CAAQ,cAAR,CAqBTC,OAAAC,QAAA,CAnBYE,QAAQ,CAACC,QAAD,CAAU,CAG1BA,QAAA,CAAWA,QAAX,EAAuBA,QAAAC,YAAA,EAAvB,EAAiD,IAEjD,IAA2C,EAA3C,EAJwBC,CAAC,IAADA,CAAO,IAAPA,CAAa,IAAbA,CAAmB,IAAnBA,CAIrBC,QAAA,CAA0BH,QAA1B,CAAH,CAA8C,KAAUI,MAAJ,CAAUJ,QAAV,CAAqB,wBAArB,CAAN,CAC9C,MAAO,CACHK,MAAQA,QAAQ,CAACC,IAAD,CAAM,CAClB,IAAIC,QAAUT,EAAAU,aAAA,CAAgB,UAAhB,CAAsCR,QAAtC,CAA+C,MAA/C,CACVS,KAAAA,CAAQ,IAAIC,MAAJ,CAAW,IAAX,CAAkBJ,IAAlB,CAAwB,IAAxB,CACZ,OAAKC,QAAAI,SAAA,CAAiB,OAAjB,CAAAC,MAAA,CAAgCH,IAAhC,CAAL,CACW,CAAA,CADX,CAGO,CAAA,CANW,CADnB,CANmB,CAHmE;\",\n\"sources\":[\"node_modules/check-word/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$check_word$index\\\"] = function(global,require,module,exports) {\\nvar fs = require('fs');\\n\\nvar words = function(language){\\n    var possibleLanguages = ['de', 'en', 'es', 'fr'];\\n\\n    language = language && language.toLowerCase() || 'en';\\n\\n    if(possibleLanguages.indexOf(language) == -1) throw new Error(language + \\\" is not valid language\\\");\\n    return {\\n        check : function(word){\\n            var content = fs.readFileSync(__dirname + '/words/'+language+'.txt');\\n            var regex = new RegExp('\\\\n' + word +'\\\\n');\\n            if ( content.toString('utf-8').match(regex)) {\\n                return true;\\n            }\\n            return false;\\n        }\\n    };\\n};\\n\\n\\nmodule.exports = words;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"fs\",\"words\",\"language\",\"toLowerCase\",\"possibleLanguages\",\"indexOf\",\"Error\",\"check\",\"word\",\"content\",\"readFileSync\",\"regex\",\"RegExp\",\"toString\",\"match\"]\n}\n"]