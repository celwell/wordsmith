["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Contrast.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$Contrast=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");require=require(\"module$node_modules$konva$lib$Validators\");exports.Contrast=function(imageData){var adjust=Math.pow((this.contrast()+100)/100,2);imageData=imageData.data;var nPixels=imageData.length,i;for(i=0;i<nPixels;i+=4){var red=imageData[i];\nvar green=imageData[i+1];var blue=imageData[i+2];red/=255;red-=.5;red*=adjust;red+=.5;red*=255;green/=255;green-=.5;green*=adjust;green+=.5;green*=255;blue/=255;blue-=.5;blue*=adjust;blue+=.5;blue*=255;red=0>red?0:255<red?255:red;green=0>green?0:255<green?255:green;blue=0>blue?0:255<blue?255:blue;imageData[i]=red;imageData[i+1]=green;imageData[i+2]=blue}};global.Factory.addGetterSetter(module.Node,\"contrast\",0,require.getNumberValidator(),global.Factory.afterSetFilter)}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$Contrast\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.Contrast = function (imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","Contrast","value"]],"~:compiled-at",1589754192569,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Contrast.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3GC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAYN,OAAA,CAAQ,uCAAR,CACZO,OAAAA,CAASP,OAAA,CAAQ,oCAAR,CACTQ,QAAAA,CAAeR,OAAA,CAAQ,0CAAR,CACnBE,QAAAO,SAAA,CAAmBC,QAAS,CAACC,SAAD,CAAY,CACpC,IAAIC,OAASC,IAAAC,IAAA,EAAU,IAAAC,SAAA,EAAV,CAA4B,GAA5B,EAAmC,GAAnC,CAAwC,CAAxC,CACTC,UAAAA,CAAOL,SAAAK,KAFyB,KAETC,QAAUD,SAAAE,OAFD,CAEkDC,CACtF,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,OAAhB,CAAyBE,CAAzB,EAA8B,CAA9B,CAAiC,CAC7B,IAAAC,IAAMJ,SAAA,CAAKG,CAAL,CACN;IAAAE,MAAQL,SAAA,CAAKG,CAAL,CAAS,CAAT,CACR,KAAAG,KAAON,SAAA,CAAKG,CAAL,CAAS,CAAT,CACPC,IAAA,EAAO,GACPA,IAAA,EAAO,EACPA,IAAA,EAAOR,MACPQ,IAAA,EAAO,EACPA,IAAA,EAAO,GACPC,MAAA,EAAS,GACTA,MAAA,EAAS,EACTA,MAAA,EAAST,MACTS,MAAA,EAAS,EACTA,MAAA,EAAS,GACTC,KAAA,EAAQ,GACRA,KAAA,EAAQ,EACRA,KAAA,EAAQV,MACRU,KAAA,EAAQ,EACRA,KAAA,EAAQ,GACRF,IAAA,CAAY,CAAN,CAAAA,GAAA,CAAU,CAAV,CAAoB,GAAN,CAAAA,GAAA,CAAY,GAAZ,CAAkBA,GACtCC,MAAA,CAAgB,CAAR,CAAAA,KAAA,CAAY,CAAZ,CAAwB,GAAR,CAAAA,KAAA,CAAc,GAAd,CAAoBA,KAC5CC,KAAA,CAAc,CAAP,CAAAA,IAAA,CAAW,CAAX,CAAsB,GAAP,CAAAA,IAAA,CAAa,GAAb,CAAmBA,IACzCN,UAAA,CAAKG,CAAL,CAAA,CAAUC,GACVJ,UAAA,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAcE,KACdL,UAAA,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAcG,IAxBe,CAHG,CA8BxChB,OAAAiB,QAAAC,gBAAA,CAAkCjB,MAAAkB,KAAlC,CAA+C,UAA/C,CAA2D,CAA3D,CAA8DjB,OAAAkB,mBAAA,EAA9D,CAAiGpB,MAAAiB,QAAAI,eAAjG,CApC2G;\",\n\"sources\":[\"node_modules/konva/lib/filters/Contrast.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$Contrast\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.Contrast = function (imageData) {\\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\\n    for (i = 0; i < nPixels; i += 4) {\\n        red = data[i];\\n        green = data[i + 1];\\n        blue = data[i + 2];\\n        red /= 255;\\n        red -= 0.5;\\n        red *= adjust;\\n        red += 0.5;\\n        red *= 255;\\n        green /= 255;\\n        green -= 0.5;\\n        green *= adjust;\\n        green += 0.5;\\n        green *= 255;\\n        blue /= 255;\\n        blue -= 0.5;\\n        blue *= adjust;\\n        blue += 0.5;\\n        blue *= 255;\\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\\n        data[i] = red;\\n        data[i + 1] = green;\\n        data[i + 2] = blue;\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"Contrast\",\"exports.Contrast\",\"imageData\",\"adjust\",\"Math\",\"pow\",\"contrast\",\"data\",\"nPixels\",\"length\",\"i\",\"red\",\"green\",\"blue\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]