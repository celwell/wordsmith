["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/Stage.js"],"~:js","shadow$provide.module$node_modules$konva$lib$Stage=function(global,require,module,exports){function addEvent(ctx,eventName){ctx.content.addEventListener(eventName,function(evt){ctx[\"_\"+eventName](evt)},!1)}function checkNoClip(attrs){void 0===attrs&&(attrs={});(attrs.clipFunc||attrs.clipWidth||attrs.clipHeight)&&Util_1.Util.warn(\"Stage does not support clipping. Please use clip for Layers or Groups.\");return attrs}var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,\nb$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,\"__esModule\",{value:!0});var Util_1=require(\"module$node_modules$konva$lib$Util\");global=require(\"module$node_modules$konva$lib$Factory\");\nvar Container_1=require(\"module$node_modules$konva$lib$Container\"),Global_1=require(\"module$node_modules$konva$lib$Global\"),Canvas_1=require(\"module$node_modules$konva$lib$Canvas\"),DragAndDrop_1=require(\"module$node_modules$konva$lib$DragAndDrop\");module=require(\"module$node_modules$konva$lib$Global\");var PointerEvents=require(\"module$node_modules$konva$lib$PointerEvents\"),EVENTS=\"mouseenter mousedown mousemove mouseup mouseout touchstart touchmove touchend mouseover wheel contextmenu pointerdown pointermove pointerup pointercancel lostpointercapture\".split(\" \"),\neventsLength=EVENTS.length;exports.stages=[];require=function(_super){function Stage(config){var _this=_super.call(this,checkNoClip(config))||this;_this._pointerPositions=[];_this._changedPointerPositions=[];_this._buildDOM();_this._bindContentEvents();exports.stages.push(_this);_this.on(\"widthChange.konva heightChange.konva\",_this._resizeDOM);_this.on(\"visibleChange.konva\",_this._checkVisibility);_this.on(\"clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva\",function(){checkNoClip(_this.attrs)});\n_this._checkVisibility();return _this}__extends(Stage,_super);Stage.prototype._validateAdd=function(child){var isLayer=\"Layer\"===child.getType();child=\"FastLayer\"===child.getType();isLayer||child||Util_1.Util.throw(\"You may only add layers to the stage.\")};Stage.prototype._checkVisibility=function(){var style=this.visible()?\"\":\"none\";this.content.style.display=style};Stage.prototype.setContainer=function(container){if(\"string\"===typeof container){if(\".\"===container.charAt(0))container=container.slice(1),\ncontainer=document.getElementsByClassName(container)[0];else{var id=\"#\"!==container.charAt(0)?container:container.slice(1);container=document.getElementById(id)}if(!container)throw\"Can not find container in document with id \"+id;}this._setAttr(\"container\",container);this.content&&(this.content.parentElement&&this.content.parentElement.removeChild(this.content),container.appendChild(this.content));return this};Stage.prototype.shouldDrawHit=function(){return!0};Stage.prototype.clear=function(){var layers=\nthis.children,len=layers.length,n;for(n=0;n<len;n++)layers[n].clear();return this};Stage.prototype.clone=function(obj){obj||(obj={});obj.container=document.createElement(\"div\");return Container_1.Container.prototype.clone.call(this,obj)};Stage.prototype.destroy=function(){_super.prototype.destroy.call(this);var content=this.content;content&&Util_1.Util._isInDocument(content)&&this.container().removeChild(content);content=exports.stages.indexOf(this);-1<content&&exports.stages.splice(content,1);return this};\nStage.prototype.getPointerPosition=function(){var pos=this._pointerPositions[0]||this._changedPointerPositions[0];return pos?{x:pos.x,y:pos.y}:(Util_1.Util.warn(\"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\"),null)};Stage.prototype._getPointerById=function(id){return this._pointerPositions.find(function(p){return p.id===id})};Stage.prototype.getPointersPositions=\nfunction(){return this._pointerPositions};Stage.prototype.getStage=function(){return this};Stage.prototype.getContent=function(){return this.content};Stage.prototype._toKonvaCanvas=function(config){config=config||{};var x=config.x||0,y=config.y||0,canvas=new Canvas_1.SceneCanvas({width:config.width||this.width(),height:config.height||this.height(),pixelRatio:config.pixelRatio||1}),_context=canvas.getContext()._context,layers=this.children;(x||y)&&_context.translate(-1*x,-1*y);layers.each(function(layer){layer.isVisible()&&\n(layer=layer._toKonvaCanvas(config),_context.drawImage(layer._canvas,x,y,layer.getWidth()/layer.getPixelRatio(),layer.getHeight()/layer.getPixelRatio()))});return canvas};Stage.prototype.getIntersection=function(pos,selector){if(!pos)return null;var layers=this.children,n,shape;for(n=layers.length-1;0<=n;n--)if(shape=layers[n].getIntersection(pos,selector))return shape;return null};Stage.prototype._resizeDOM=function(){if(this.content){var width=this.width(),height=this.height(),layers=this.getChildren(),\nlen=layers.length,n;this.content.style.width=width+\"px\";this.content.style.height=height+\"px\";this.bufferCanvas.setSize(width,height);this.bufferHitCanvas.setSize(width,height);for(n=0;n<len;n++){var layer=layers[n];layer.setSize({width:width,height:height});layer.draw()}}};Stage.prototype.add=function(layer){if(1<arguments.length){for(var i=0;i<arguments.length;i++)this.add(arguments[i]);return this}_super.prototype.add.call(this,layer);i=this.children.length;5<i&&Util_1.Util.warn(\"The stage has \"+\ni+\" layers. Recommended maximin number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.\");layer._setCanvasSize(this.width(),this.height());layer.draw();Global_1.Konva.isBrowser&&this.content.appendChild(layer.canvas._canvas);return this};Stage.prototype.getParent=function(){return null};Stage.prototype.getLayer=function(){return null};Stage.prototype.hasPointerCapture=function(pointerId){return PointerEvents.hasPointerCapture(pointerId,\nthis)};Stage.prototype.setPointerCapture=function(pointerId){PointerEvents.setPointerCapture(pointerId,this)};Stage.prototype.releaseCapture=function(pointerId){PointerEvents.releaseCapture(pointerId,this)};Stage.prototype.getLayers=function(){return this.getChildren()};Stage.prototype._bindContentEvents=function(){if(Global_1.Konva.isBrowser)for(var n=0;n<eventsLength;n++)addEvent(this,EVENTS[n])};Stage.prototype._mouseenter=function(evt){this.setPointersPositions(evt);this._fire(\"mouseenter\",{evt:evt,\ntarget:this,currentTarget:this})};Stage.prototype._mouseover=function(evt){this.setPointersPositions(evt);this._fire(\"contentMouseover\",{evt:evt});this._fire(\"mouseover\",{evt:evt,target:this,currentTarget:this})};Stage.prototype._mouseout=function(evt){this.setPointersPositions(evt);var targetShape=this.targetShape,eventsEnabled=!DragAndDrop_1.DD.isDragging||Global_1.Konva.hitOnDragEnabled;targetShape&&eventsEnabled?(targetShape._fireAndBubble(\"mouseout\",{evt:evt}),targetShape._fireAndBubble(\"mouseleave\",\n{evt:evt}),this.targetShape=null):eventsEnabled&&(this._fire(\"mouseleave\",{evt:evt,target:this,currentTarget:this}),this._fire(\"mouseout\",{evt:evt,target:this,currentTarget:this}));this.pointerPos=void 0;this._pointerPositions=[];this._fire(\"contentMouseout\",{evt:evt})};Stage.prototype._mousemove=function(evt){if(Global_1.Konva.UA.ieMobile)return this._touchmove(evt);this.setPointersPositions(evt);var pointerId=Util_1.Util._getFirstPointerId(evt),shape,eventsEnabled=!DragAndDrop_1.DD.isDragging||\nGlobal_1.Konva.hitOnDragEnabled;if(eventsEnabled){if((shape=this.getIntersection(this.getPointerPosition()))&&shape.isListening()){var differentTarget=!this.targetShape||this.targetShape!==shape;eventsEnabled&&differentTarget?(this.targetShape&&(this.targetShape._fireAndBubble(\"mouseout\",{evt:evt,pointerId:pointerId},shape),this.targetShape._fireAndBubble(\"mouseleave\",{evt:evt,pointerId:pointerId},shape)),shape._fireAndBubble(\"mouseover\",{evt:evt,pointerId:pointerId},this.targetShape),shape._fireAndBubble(\"mouseenter\",\n{evt:evt,pointerId:pointerId},this.targetShape),shape._fireAndBubble(\"mousemove\",{evt:evt,pointerId:pointerId}),this.targetShape=shape):shape._fireAndBubble(\"mousemove\",{evt:evt,pointerId:pointerId})}else this.targetShape&&eventsEnabled&&(this.targetShape._fireAndBubble(\"mouseout\",{evt:evt,pointerId:pointerId}),this.targetShape._fireAndBubble(\"mouseleave\",{evt:evt,pointerId:pointerId}),this._fire(\"mouseover\",{evt:evt,target:this,currentTarget:this,pointerId:pointerId}),this.targetShape=null),this._fire(\"mousemove\",\n{evt:evt,target:this,currentTarget:this,pointerId:pointerId});this._fire(\"contentMousemove\",{evt:evt})}evt.cancelable&&evt.preventDefault()};Stage.prototype._mousedown=function(evt){if(Global_1.Konva.UA.ieMobile)return this._touchstart(evt);this.setPointersPositions(evt);var pointerId=Util_1.Util._getFirstPointerId(evt),shape=this.getIntersection(this.getPointerPosition());Global_1.Konva.listenClickTap=!0;shape&&shape.isListening()?(this.clickStartShape=shape,shape._fireAndBubble(\"mousedown\",{evt:evt,\npointerId:pointerId})):this._fire(\"mousedown\",{evt:evt,target:this,currentTarget:this,pointerId:pointerId});this._fire(\"contentMousedown\",{evt:evt})};Stage.prototype._mouseup=function(evt){if(Global_1.Konva.UA.ieMobile)return this._touchend(evt);this.setPointersPositions(evt);var pointerId=Util_1.Util._getFirstPointerId(evt),shape=this.getIntersection(this.getPointerPosition()),clickStartShape=this.clickStartShape,clickEndShape=this.clickEndShape,fireDblClick=!1;Global_1.Konva.inDblClickWindow?(fireDblClick=\n!0,clearTimeout(this.dblTimeout)):DragAndDrop_1.DD.justDragged?DragAndDrop_1.DD&&(DragAndDrop_1.DD.justDragged=!1):(Global_1.Konva.inDblClickWindow=!0,clearTimeout(this.dblTimeout));this.dblTimeout=setTimeout(function(){Global_1.Konva.inDblClickWindow=!1},Global_1.Konva.dblClickWindow);shape&&shape.isListening()?(this.clickEndShape=shape,shape._fireAndBubble(\"mouseup\",{evt:evt,pointerId:pointerId}),Global_1.Konva.listenClickTap&&clickStartShape&&clickStartShape._id===shape._id&&(shape._fireAndBubble(\"click\",\n{evt:evt,pointerId:pointerId}),fireDblClick&&clickEndShape&&clickEndShape===shape&&shape._fireAndBubble(\"dblclick\",{evt:evt,pointerId:pointerId}))):(this._fire(\"mouseup\",{evt:evt,target:this,currentTarget:this,pointerId:pointerId}),Global_1.Konva.listenClickTap&&this._fire(\"click\",{evt:evt,target:this,currentTarget:this,pointerId:pointerId}),fireDblClick&&this._fire(\"dblclick\",{evt:evt,target:this,currentTarget:this,pointerId:pointerId}));this._fire(\"contentMouseup\",{evt:evt});Global_1.Konva.listenClickTap&&\n(this._fire(\"contentClick\",{evt:evt}),fireDblClick&&this._fire(\"contentDblclick\",{evt:evt}));Global_1.Konva.listenClickTap=!1;evt.cancelable&&evt.preventDefault()};Stage.prototype._contextmenu=function(evt){this.setPointersPositions(evt);var shape=this.getIntersection(this.getPointerPosition());shape&&shape.isListening()?shape._fireAndBubble(\"contextmenu\",{evt:evt}):this._fire(\"contextmenu\",{evt:evt,target:this,currentTarget:this});this._fire(\"contentContextmenu\",{evt:evt})};Stage.prototype._touchstart=\nfunction(evt){var _this=this;this.setPointersPositions(evt);var triggeredOnShape=!1;this._changedPointerPositions.forEach(function(pos){var shape=_this.getIntersection(pos);Global_1.Konva.listenClickTap=!0;shape&&shape.isListening()&&(Global_1.Konva.captureTouchEventsEnabled&&shape.setPointerCapture(pos.id),_this.tapStartShape=shape,shape._fireAndBubble(\"touchstart\",{evt:evt,pointerId:pos.id},_this),triggeredOnShape=!0,shape.isListening()&&shape.preventDefault()&&evt.cancelable&&evt.preventDefault())});\ntriggeredOnShape||this._fire(\"touchstart\",{evt:evt,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id});this._fire(\"contentTouchstart\",{evt:evt})};Stage.prototype._touchmove=function(evt){var _this=this;this.setPointersPositions(evt);if(!DragAndDrop_1.DD.isDragging||Global_1.Konva.hitOnDragEnabled){var triggeredOnShape=!1,processedShapesIds={};this._changedPointerPositions.forEach(function(pos){var shape=PointerEvents.getCapturedShape(pos.id)||_this.getIntersection(pos);\nshape&&shape.isListening()&&!processedShapesIds[shape._id]&&(processedShapesIds[shape._id]=!0,shape._fireAndBubble(\"touchmove\",{evt:evt,pointerId:pos.id}),triggeredOnShape=!0,shape.isListening()&&shape.preventDefault()&&evt.cancelable&&evt.preventDefault())});triggeredOnShape||this._fire(\"touchmove\",{evt:evt,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id});this._fire(\"contentTouchmove\",{evt:evt})}DragAndDrop_1.DD.isDragging&&DragAndDrop_1.DD.node.preventDefault()&&evt.cancelable&&\nevt.preventDefault()};Stage.prototype._touchend=function(evt){var _this=this;this.setPointersPositions(evt);var clickEndShape=this.clickEndShape,fireDblClick=!1;Global_1.Konva.inDblClickWindow?(fireDblClick=!0,clearTimeout(this.dblTimeout)):DragAndDrop_1.DD.justDragged||(Global_1.Konva.inDblClickWindow=!0,clearTimeout(this.dblTimeout));this.dblTimeout=setTimeout(function(){Global_1.Konva.inDblClickWindow=!1},Global_1.Konva.dblClickWindow);var triggeredOnShape=!1,processedShapesIds={},tapTriggered=\n!1,dblTapTriggered=!1;this._changedPointerPositions.forEach(function(pos){var shape=PointerEvents.getCapturedShape(pos.id)||_this.getIntersection(pos);shape&&shape.releaseCapture(pos.id);shape&&shape.isListening()&&!processedShapesIds[shape._id]&&(processedShapesIds[shape._id]=!0,_this.clickEndShape=shape,shape._fireAndBubble(\"touchend\",{evt:evt,pointerId:pos.id}),triggeredOnShape=!0,Global_1.Konva.listenClickTap&&shape===_this.tapStartShape&&(tapTriggered=!0,shape._fireAndBubble(\"tap\",{evt:evt,pointerId:pos.id}),\nfireDblClick&&clickEndShape&&clickEndShape===shape&&(dblTapTriggered=!0,shape._fireAndBubble(\"dbltap\",{evt:evt,pointerId:pos.id}))),shape.isListening()&&shape.preventDefault()&&evt.cancelable&&evt.preventDefault())});triggeredOnShape||this._fire(\"touchend\",{evt:evt,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id});Global_1.Konva.listenClickTap&&!tapTriggered&&this._fire(\"tap\",{evt:evt,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id});fireDblClick&&\n!dblTapTriggered&&this._fire(\"dbltap\",{evt:evt,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id});this._fire(\"contentTouchend\",{evt:evt});Global_1.Konva.listenClickTap&&(this._fire(\"contentTap\",{evt:evt}),fireDblClick&&this._fire(\"contentDbltap\",{evt:evt}));Global_1.Konva.listenClickTap=!1};Stage.prototype._wheel=function(evt){this.setPointersPositions(evt);var shape=this.getIntersection(this.getPointerPosition());shape&&shape.isListening()?shape._fireAndBubble(\"wheel\",\n{evt:evt}):this._fire(\"wheel\",{evt:evt,target:this,currentTarget:this});this._fire(\"contentWheel\",{evt:evt})};Stage.prototype._pointerdown=function(evt){if(Global_1.Konva._pointerEventsEnabled){this.setPointersPositions(evt);var shape=PointerEvents.getCapturedShape(evt.pointerId)||this.getIntersection(this.getPointerPosition());shape&&shape._fireAndBubble(\"pointerdown\",PointerEvents.createEvent(evt))}};Stage.prototype._pointermove=function(evt){if(Global_1.Konva._pointerEventsEnabled){this.setPointersPositions(evt);\nvar shape=PointerEvents.getCapturedShape(evt.pointerId)||this.getIntersection(this.getPointerPosition());shape&&shape._fireAndBubble(\"pointermove\",PointerEvents.createEvent(evt))}};Stage.prototype._pointerup=function(evt){if(Global_1.Konva._pointerEventsEnabled){this.setPointersPositions(evt);var shape=PointerEvents.getCapturedShape(evt.pointerId)||this.getIntersection(this.getPointerPosition());shape&&shape._fireAndBubble(\"pointerup\",PointerEvents.createEvent(evt));PointerEvents.releaseCapture(evt.pointerId)}};\nStage.prototype._pointercancel=function(evt){if(Global_1.Konva._pointerEventsEnabled){this.setPointersPositions(evt);var shape=PointerEvents.getCapturedShape(evt.pointerId)||this.getIntersection(this.getPointerPosition());shape&&shape._fireAndBubble(\"pointerup\",PointerEvents.createEvent(evt));PointerEvents.releaseCapture(evt.pointerId)}};Stage.prototype._lostpointercapture=function(evt){PointerEvents.releaseCapture(evt.pointerId)};Stage.prototype.setPointersPositions=function(evt){var _this=this,\ncontentPosition=this._getContentPosition(),x=null,y=null;evt=evt?evt:window.event;void 0!==evt.touches?(this._pointerPositions=[],this._changedPointerPositions=[],Util_1.Collection.prototype.each.call(evt.touches,function(touch){_this._pointerPositions.push({id:touch.identifier,x:touch.clientX-contentPosition.left,y:touch.clientY-contentPosition.top})}),Util_1.Collection.prototype.each.call(evt.changedTouches||evt.touches,function(touch){_this._changedPointerPositions.push({id:touch.identifier,x:touch.clientX-\ncontentPosition.left,y:touch.clientY-contentPosition.top})}),0<evt.touches.length&&(evt=evt.touches[0],x=evt.clientX-contentPosition.left,y=evt.clientY-contentPosition.top)):(x=evt.clientX-contentPosition.left,y=evt.clientY-contentPosition.top,this.pointerPos={x:x,y:y},this._pointerPositions=[{x:x,y:y,id:Util_1.Util._getFirstPointerId(evt)}],this._changedPointerPositions=[{x:x,y:y,id:Util_1.Util._getFirstPointerId(evt)}])};Stage.prototype._setPointerPosition=function(evt){Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\nthis.setPointersPositions(evt)};Stage.prototype._getContentPosition=function(){var rect=this.content.getBoundingClientRect?this.content.getBoundingClientRect():{top:0,left:0};return{top:rect.top,left:rect.left}};Stage.prototype._buildDOM=function(){this.bufferCanvas=new Canvas_1.SceneCanvas;this.bufferHitCanvas=new Canvas_1.HitCanvas({pixelRatio:1});if(Global_1.Konva.isBrowser){var container=this.container();if(!container)throw\"Stage has no container. A container is required.\";container.innerHTML=\n\"\";this.content=document.createElement(\"div\");this.content.style.position=\"relative\";this.content.style.userSelect=\"none\";this.content.className=\"konvajs-content\";this.content.setAttribute(\"role\",\"presentation\");container.appendChild(this.content);this._resizeDOM()}};Stage.prototype.cache=function(){Util_1.Util.warn(\"Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.\");return this};Stage.prototype.clearCache=function(){return this};Stage.prototype.batchDraw=\nfunction(){this.children.each(function(layer){layer.batchDraw()});return this};return Stage}(Container_1.Container);exports.Stage=require;require.prototype.nodeType=\"Stage\";module._registerNode(require);global.Factory.addGetterSetter(require,\"container\")}","~:source","shadow$provide[\"module$node_modules$konva$lib$Stage\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"./Util\");\nvar Factory_1 = require(\"./Factory\");\nvar Container_1 = require(\"./Container\");\nvar Global_1 = require(\"./Global\");\nvar Canvas_1 = require(\"./Canvas\");\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\nvar Global_2 = require(\"./Global\");\nvar PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', CONTEXTMENU = 'contextmenu', CLICK = 'click', DBL_CLICK = 'dblclick', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TAP = 'tap', DBL_TAP = 'dbltap', TOUCHMOVE = 'touchmove', WHEEL = 'wheel', CONTENT_MOUSEOUT = 'contentMouseout', CONTENT_MOUSEOVER = 'contentMouseover', CONTENT_MOUSEMOVE = 'contentMousemove', CONTENT_MOUSEDOWN = 'contentMousedown', CONTENT_MOUSEUP = 'contentMouseup', CONTENT_CONTEXTMENU = 'contentContextmenu', CONTENT_CLICK = 'contentClick', CONTENT_DBL_CLICK = 'contentDblclick', CONTENT_TOUCHSTART = 'contentTouchstart', CONTENT_TOUCHEND = 'contentTouchend', CONTENT_DBL_TAP = 'contentDbltap', CONTENT_TAP = 'contentTap', CONTENT_TOUCHMOVE = 'contentTouchmove', CONTENT_POINTERMOVE = 'contentPointermove', CONTENT_POINTERDOWN = 'contentPointerdown', CONTENT_POINTERUP = 'contentPointerup', CONTENT_WHEEL = 'contentWheel', RELATIVE = 'relative', KONVA_CONTENT = 'konvajs-content', SPACE = ' ', UNDERSCORE = '_', CONTAINER = 'container', MAX_LAYERS_NUMBER = 5, EMPTY_STRING = '', EVENTS = [\n    MOUSEENTER,\n    MOUSEDOWN,\n    MOUSEMOVE,\n    MOUSEUP,\n    MOUSEOUT,\n    TOUCHSTART,\n    TOUCHMOVE,\n    TOUCHEND,\n    MOUSEOVER,\n    WHEEL,\n    CONTEXTMENU,\n    POINTERDOWN,\n    POINTERMOVE,\n    POINTERUP,\n    POINTERCANCEL,\n    LOSTPOINTERCAPTURE\n], eventsLength = EVENTS.length;\nfunction addEvent(ctx, eventName) {\n    ctx.content.addEventListener(eventName, function (evt) {\n        ctx[UNDERSCORE + eventName](evt);\n    }, false);\n}\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\nexports.stages = [];\nfunction checkNoClip(attrs) {\n    if (attrs === void 0) { attrs = {}; }\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nvar Stage = (function (_super) {\n    __extends(Stage, _super);\n    function Stage(config) {\n        var _this = _super.call(this, checkNoClip(config)) || this;\n        _this._pointerPositions = [];\n        _this._changedPointerPositions = [];\n        _this._buildDOM();\n        _this._bindContentEvents();\n        exports.stages.push(_this);\n        _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\n        _this.on('visibleChange.konva', _this._checkVisibility);\n        _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\n            checkNoClip(_this.attrs);\n        });\n        _this._checkVisibility();\n        return _this;\n    }\n    Stage.prototype._validateAdd = function (child) {\n        var isLayer = child.getType() === 'Layer';\n        var isFastLayer = child.getType() === 'FastLayer';\n        var valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_1.Util.throw('You may only add layers to the stage.');\n        }\n    };\n    Stage.prototype._checkVisibility = function () {\n        var style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    };\n    Stage.prototype.setContainer = function (container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr(CONTAINER, container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    };\n    Stage.prototype.shouldDrawHit = function () {\n        return true;\n    };\n    Stage.prototype.clear = function () {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    };\n    Stage.prototype.clone = function (obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container = document.createElement('div');\n        return Container_1.Container.prototype.clone.call(this, obj);\n    };\n    Stage.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        var content = this.content;\n        if (content && Util_1.Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = exports.stages.indexOf(this);\n        if (index > -1) {\n            exports.stages.splice(index, 1);\n        }\n        return this;\n    };\n    Stage.prototype.getPointerPosition = function () {\n        var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y\n        };\n    };\n    Stage.prototype._getPointerById = function (id) {\n        return this._pointerPositions.find(function (p) { return p.id === id; });\n    };\n    Stage.prototype.getPointersPositions = function () {\n        return this._pointerPositions;\n    };\n    Stage.prototype.getStage = function () {\n        return this;\n    };\n    Stage.prototype.getContent = function () {\n        return this.content;\n    };\n    Stage.prototype._toKonvaCanvas = function (config) {\n        config = config || {};\n        var x = config.x || 0, y = config.y || 0, canvas = new Canvas_1.SceneCanvas({\n            width: config.width || this.width(),\n            height: config.height || this.height(),\n            pixelRatio: config.pixelRatio || 1\n        }), _context = canvas.getContext()._context, layers = this.children;\n        if (x || y) {\n            _context.translate(-1 * x, -1 * y);\n        }\n        layers.each(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, x, y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    };\n    Stage.prototype.getIntersection = function (pos, selector) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n, shape;\n        for (n = end; n >= 0; n--) {\n            shape = layers[n].getIntersection(pos, selector);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    };\n    Stage.prototype._resizeDOM = function () {\n        if (this.content) {\n            var width = this.width(), height = this.height(), layers = this.getChildren(), len = layers.length, n, layer;\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n            this.bufferCanvas.setSize(width, height);\n            this.bufferHitCanvas.setSize(width, height);\n            for (n = 0; n < len; n++) {\n                layer = layers[n];\n                layer.setSize({ width: width, height: height });\n                layer.draw();\n            }\n        }\n    };\n    Stage.prototype.add = function (layer) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        _super.prototype.add.call(this, layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_1.Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximin number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer._setCanvasSize(this.width(), this.height());\n        layer.draw();\n        if (Global_1.Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    };\n    Stage.prototype.getParent = function () {\n        return null;\n    };\n    Stage.prototype.getLayer = function () {\n        return null;\n    };\n    Stage.prototype.hasPointerCapture = function (pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    };\n    Stage.prototype.setPointerCapture = function (pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    };\n    Stage.prototype.releaseCapture = function (pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    };\n    Stage.prototype.getLayers = function () {\n        return this.getChildren();\n    };\n    Stage.prototype._bindContentEvents = function () {\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        for (var n = 0; n < eventsLength; n++) {\n            addEvent(this, EVENTS[n]);\n        }\n    };\n    Stage.prototype._mouseenter = function (evt) {\n        this.setPointersPositions(evt);\n        this._fire(MOUSEENTER, { evt: evt, target: this, currentTarget: this });\n    };\n    Stage.prototype._mouseover = function (evt) {\n        this.setPointersPositions(evt);\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n        this._fire(MOUSEOVER, { evt: evt, target: this, currentTarget: this });\n    };\n    Stage.prototype._mouseout = function (evt) {\n        this.setPointersPositions(evt);\n        var targetShape = this.targetShape;\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n            targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n            this.targetShape = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(MOUSELEAVE, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n            this._fire(MOUSEOUT, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n    };\n    Stage.prototype._mousemove = function (evt) {\n        if (Global_1.Konva.UA.ieMobile) {\n            return this._touchmove(evt);\n        }\n        this.setPointersPositions(evt);\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\n        var shape;\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (eventsEnabled) {\n            shape = this.getIntersection(this.getPointerPosition());\n            if (shape && shape.isListening()) {\n                var differentTarget = !this.targetShape || this.targetShape !== shape;\n                if (eventsEnabled && differentTarget) {\n                    if (this.targetShape) {\n                        this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId }, shape);\n                        this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId }, shape);\n                    }\n                    shape._fireAndBubble(MOUSEOVER, { evt: evt, pointerId: pointerId }, this.targetShape);\n                    shape._fireAndBubble(MOUSEENTER, { evt: evt, pointerId: pointerId }, this.targetShape);\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\n                    this.targetShape = shape;\n                }\n                else {\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\n                }\n            }\n            else {\n                if (this.targetShape && eventsEnabled) {\n                    this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId });\n                    this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId });\n                    this._fire(MOUSEOVER, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId: pointerId\n                    });\n                    this.targetShape = null;\n                }\n                this._fire(MOUSEMOVE, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n            }\n            this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n        }\n        if (evt.cancelable) {\n            evt.preventDefault();\n        }\n    };\n    Stage.prototype._mousedown = function (evt) {\n        if (Global_1.Konva.UA.ieMobile) {\n            return this._touchstart(evt);\n        }\n        this.setPointersPositions(evt);\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        Global_1.Konva.listenClickTap = true;\n        if (shape && shape.isListening()) {\n            this.clickStartShape = shape;\n            shape._fireAndBubble(MOUSEDOWN, { evt: evt, pointerId: pointerId });\n        }\n        else {\n            this._fire(MOUSEDOWN, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: pointerId\n            });\n        }\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n    };\n    Stage.prototype._mouseup = function (evt) {\n        if (Global_1.Konva.UA.ieMobile) {\n            return this._touchend(evt);\n        }\n        this.setPointersPositions(evt);\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\n        var shape = this.getIntersection(this.getPointerPosition()), clickStartShape = this.clickStartShape, clickEndShape = this.clickEndShape, fireDblClick = false;\n        if (Global_1.Konva.inDblClickWindow) {\n            fireDblClick = true;\n            clearTimeout(this.dblTimeout);\n        }\n        else if (!DragAndDrop_1.DD.justDragged) {\n            Global_1.Konva.inDblClickWindow = true;\n            clearTimeout(this.dblTimeout);\n        }\n        else if (DragAndDrop_1.DD) {\n            DragAndDrop_1.DD.justDragged = false;\n        }\n        this.dblTimeout = setTimeout(function () {\n            Global_1.Konva.inDblClickWindow = false;\n        }, Global_1.Konva.dblClickWindow);\n        if (shape && shape.isListening()) {\n            this.clickEndShape = shape;\n            shape._fireAndBubble(MOUSEUP, { evt: evt, pointerId: pointerId });\n            if (Global_1.Konva.listenClickTap &&\n                clickStartShape &&\n                clickStartShape._id === shape._id) {\n                shape._fireAndBubble(CLICK, { evt: evt, pointerId: pointerId });\n                if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                    shape._fireAndBubble(DBL_CLICK, { evt: evt, pointerId: pointerId });\n                }\n            }\n        }\n        else {\n            this._fire(MOUSEUP, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: pointerId\n            });\n            if (Global_1.Konva.listenClickTap) {\n                this._fire(CLICK, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n            }\n            if (fireDblClick) {\n                this._fire(DBL_CLICK, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n            }\n        }\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\n        if (Global_1.Konva.listenClickTap) {\n            this._fire(CONTENT_CLICK, { evt: evt });\n            if (fireDblClick) {\n                this._fire(CONTENT_DBL_CLICK, { evt: evt });\n            }\n        }\n        Global_1.Konva.listenClickTap = false;\n        if (evt.cancelable) {\n            evt.preventDefault();\n        }\n    };\n    Stage.prototype._contextmenu = function (evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n        }\n        this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n    };\n    Stage.prototype._touchstart = function (evt) {\n        var _this = this;\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach(function (pos) {\n            var shape = _this.getIntersection(pos);\n            Global_1.Konva.listenClickTap = true;\n            var hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Global_1.Konva.captureTouchEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            _this.tapStartShape = shape;\n            shape._fireAndBubble(TOUCHSTART, { evt: evt, pointerId: pos.id }, _this);\n            triggeredOnShape = true;\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(TOUCHSTART, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id\n            });\n        }\n        this._fire(CONTENT_TOUCHSTART, { evt: evt });\n    };\n    Stage.prototype._touchmove = function (evt) {\n        var _this = this;\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (eventsEnabled) {\n            var triggeredOnShape = false;\n            var processedShapesIds = {};\n            this._changedPointerPositions.forEach(function (pos) {\n                var shape = PointerEvents.getCapturedShape(pos.id) || _this.getIntersection(pos);\n                var hasShape = shape && shape.isListening();\n                if (!hasShape) {\n                    return;\n                }\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n                shape._fireAndBubble(TOUCHMOVE, { evt: evt, pointerId: pos.id });\n                triggeredOnShape = true;\n                if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n                    evt.preventDefault();\n                }\n            });\n            if (!triggeredOnShape) {\n                this._fire(TOUCHMOVE, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: this._changedPointerPositions[0].id\n                });\n            }\n            this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n        }\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n    };\n    Stage.prototype._touchend = function (evt) {\n        var _this = this;\n        this.setPointersPositions(evt);\n        var clickEndShape = this.clickEndShape, fireDblClick = false;\n        if (Global_1.Konva.inDblClickWindow) {\n            fireDblClick = true;\n            clearTimeout(this.dblTimeout);\n        }\n        else if (!DragAndDrop_1.DD.justDragged) {\n            Global_1.Konva.inDblClickWindow = true;\n            clearTimeout(this.dblTimeout);\n        }\n        this.dblTimeout = setTimeout(function () {\n            Global_1.Konva.inDblClickWindow = false;\n        }, Global_1.Konva.dblClickWindow);\n        var triggeredOnShape = false;\n        var processedShapesIds = {};\n        var tapTriggered = false;\n        var dblTapTriggered = false;\n        this._changedPointerPositions.forEach(function (pos) {\n            var shape = PointerEvents.getCapturedShape(pos.id) ||\n                _this.getIntersection(pos);\n            if (shape) {\n                shape.releaseCapture(pos.id);\n            }\n            var hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (processedShapesIds[shape._id]) {\n                return;\n            }\n            processedShapesIds[shape._id] = true;\n            _this.clickEndShape = shape;\n            shape._fireAndBubble(TOUCHEND, { evt: evt, pointerId: pos.id });\n            triggeredOnShape = true;\n            if (Global_1.Konva.listenClickTap && shape === _this.tapStartShape) {\n                tapTriggered = true;\n                shape._fireAndBubble(TAP, { evt: evt, pointerId: pos.id });\n                if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                    dblTapTriggered = true;\n                    shape._fireAndBubble(DBL_TAP, { evt: evt, pointerId: pos.id });\n                }\n            }\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(TOUCHEND, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id\n            });\n        }\n        if (Global_1.Konva.listenClickTap && !tapTriggered) {\n            this._fire(TAP, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id\n            });\n        }\n        if (fireDblClick && !dblTapTriggered) {\n            this._fire(DBL_TAP, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id\n            });\n        }\n        this._fire(CONTENT_TOUCHEND, { evt: evt });\n        if (Global_1.Konva.listenClickTap) {\n            this._fire(CONTENT_TAP, { evt: evt });\n            if (fireDblClick) {\n                this._fire(CONTENT_DBL_TAP, { evt: evt });\n            }\n        }\n        Global_1.Konva.listenClickTap = false;\n    };\n    Stage.prototype._wheel = function (evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n        }\n        this._fire(CONTENT_WHEEL, { evt: evt });\n    };\n    Stage.prototype._pointerdown = function (evt) {\n        if (!Global_1.Konva._pointerEventsEnabled) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERDOWN, PointerEvents.createEvent(evt));\n        }\n    };\n    Stage.prototype._pointermove = function (evt) {\n        if (!Global_1.Konva._pointerEventsEnabled) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERMOVE, PointerEvents.createEvent(evt));\n        }\n    };\n    Stage.prototype._pointerup = function (evt) {\n        if (!Global_1.Konva._pointerEventsEnabled) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    };\n    Stage.prototype._pointercancel = function (evt) {\n        if (!Global_1.Konva._pointerEventsEnabled) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    };\n    Stage.prototype._lostpointercapture = function (evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    };\n    Stage.prototype.setPointersPositions = function (evt) {\n        var _this = this;\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Util_1.Collection.prototype.each.call(evt.touches, function (touch) {\n                _this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: touch.clientX - contentPosition.left,\n                    y: touch.clientY - contentPosition.top\n                });\n            });\n            Util_1.Collection.prototype.each.call(evt.changedTouches || evt.touches, function (touch) {\n                _this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: touch.clientX - contentPosition.left,\n                    y: touch.clientY - contentPosition.top\n                });\n            });\n            if (evt.touches.length > 0) {\n                var touch = evt.touches[0];\n                x = touch.clientX - contentPosition.left;\n                y = touch.clientY - contentPosition.top;\n            }\n        }\n        else {\n            x = evt.clientX - contentPosition.left;\n            y = evt.clientY - contentPosition.top;\n            this.pointerPos = {\n                x: x,\n                y: y\n            };\n            this._pointerPositions = [{ x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) }\n            ];\n        }\n    };\n    Stage.prototype._setPointerPosition = function (evt) {\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    };\n    Stage.prototype._getContentPosition = function () {\n        var rect = this.content.getBoundingClientRect\n            ? this.content.getBoundingClientRect()\n            : { top: 0, left: 0 };\n        return {\n            top: rect.top,\n            left: rect.left\n        };\n    };\n    Stage.prototype._buildDOM = function () {\n        this.bufferCanvas = new Canvas_1.SceneCanvas();\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({ pixelRatio: 1 });\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = EMPTY_STRING;\n        this.content = document.createElement('div');\n        this.content.style.position = RELATIVE;\n        this.content.style.userSelect = 'none';\n        this.content.className = KONVA_CONTENT;\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    };\n    Stage.prototype.cache = function () {\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    };\n    Stage.prototype.clearCache = function () {\n        return this;\n    };\n    Stage.prototype.batchDraw = function () {\n        this.children.each(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    };\n    return Stage;\n}(Container_1.Container));\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\nGlobal_2._registerNode(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$DragAndDrop","~$module$node_modules$konva$lib$PointerEvents","~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Container","~$module$node_modules$konva$lib$Canvas","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["_wheel","_pointerPositions","width","_mouseenter","batchDraw","_pointerdown","top","getPointerPosition","currentTarget","_buildDOM","prototype","height","innerHTML","_changedPointerPositions","className","setPointersPositions","setContainer","_toKonvaCanvas","clickEndShape","bufferCanvas","dblTimeout","_checkVisibility","_mousedown","x","_validateAdd","__esModule","_getContentPosition","_touchmove","userSelect","id","getIntersection","inDblClickWindow","_mouseout","cache","getLayer","position","clearCache","pixelRatio","clickStartShape","nodeType","value","_touchend","listenClickTap","destroy","tapStartShape","pointerId","getParent","releaseCapture","setPointerCapture","_mouseup","hasPointerCapture","_getPointerById","_mousemove","content","_bindContentEvents","pointerPos","evt","getLayers","stages","y","_pointerup","__proto__","bufferHitCanvas","target","clone","_resizeDOM","display","targetShape","add","shouldDrawHit","clear","_contextmenu","justDragged","_mouseover","_lostpointercapture","getPointersPositions","_setPointerPosition","_pointercancel","Stage","getStage","left","container","_touchstart","constructor","getContent","_pointermove"]],"~:compiled-at",1606342205738,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$Stage.js\",\n\"lineCount\":37,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/Stage.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$Stage\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"./Util\\\");\\nvar Factory_1 = require(\\\"./Factory\\\");\\nvar Container_1 = require(\\\"./Container\\\");\\nvar Global_1 = require(\\\"./Global\\\");\\nvar Canvas_1 = require(\\\"./Canvas\\\");\\nvar DragAndDrop_1 = require(\\\"./DragAndDrop\\\");\\nvar Global_2 = require(\\\"./Global\\\");\\nvar PointerEvents = require(\\\"./PointerEvents\\\");\\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', CONTEXTMENU = 'contextmenu', CLICK = 'click', DBL_CLICK = 'dblclick', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TAP = 'tap', DBL_TAP = 'dbltap', TOUCHMOVE = 'touchmove', WHEEL = 'wheel', CONTENT_MOUSEOUT = 'contentMouseout', CONTENT_MOUSEOVER = 'contentMouseover', CONTENT_MOUSEMOVE = 'contentMousemove', CONTENT_MOUSEDOWN = 'contentMousedown', CONTENT_MOUSEUP = 'contentMouseup', CONTENT_CONTEXTMENU = 'contentContextmenu', CONTENT_CLICK = 'contentClick', CONTENT_DBL_CLICK = 'contentDblclick', CONTENT_TOUCHSTART = 'contentTouchstart', CONTENT_TOUCHEND = 'contentTouchend', CONTENT_DBL_TAP = 'contentDbltap', CONTENT_TAP = 'contentTap', CONTENT_TOUCHMOVE = 'contentTouchmove', CONTENT_POINTERMOVE = 'contentPointermove', CONTENT_POINTERDOWN = 'contentPointerdown', CONTENT_POINTERUP = 'contentPointerup', CONTENT_WHEEL = 'contentWheel', RELATIVE = 'relative', KONVA_CONTENT = 'konvajs-content', SPACE = ' ', UNDERSCORE = '_', CONTAINER = 'container', MAX_LAYERS_NUMBER = 5, EMPTY_STRING = '', EVENTS = [\\n    MOUSEENTER,\\n    MOUSEDOWN,\\n    MOUSEMOVE,\\n    MOUSEUP,\\n    MOUSEOUT,\\n    TOUCHSTART,\\n    TOUCHMOVE,\\n    TOUCHEND,\\n    MOUSEOVER,\\n    WHEEL,\\n    CONTEXTMENU,\\n    POINTERDOWN,\\n    POINTERMOVE,\\n    POINTERUP,\\n    POINTERCANCEL,\\n    LOSTPOINTERCAPTURE\\n], eventsLength = EVENTS.length;\\nfunction addEvent(ctx, eventName) {\\n    ctx.content.addEventListener(eventName, function (evt) {\\n        ctx[UNDERSCORE + eventName](evt);\\n    }, false);\\n}\\nvar NO_POINTERS_MESSAGE = \\\"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\\\";\\nexports.stages = [];\\nfunction checkNoClip(attrs) {\\n    if (attrs === void 0) { attrs = {}; }\\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\\n    }\\n    return attrs;\\n}\\nvar Stage = (function (_super) {\\n    __extends(Stage, _super);\\n    function Stage(config) {\\n        var _this = _super.call(this, checkNoClip(config)) || this;\\n        _this._pointerPositions = [];\\n        _this._changedPointerPositions = [];\\n        _this._buildDOM();\\n        _this._bindContentEvents();\\n        exports.stages.push(_this);\\n        _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\\n        _this.on('visibleChange.konva', _this._checkVisibility);\\n        _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\\n            checkNoClip(_this.attrs);\\n        });\\n        _this._checkVisibility();\\n        return _this;\\n    }\\n    Stage.prototype._validateAdd = function (child) {\\n        var isLayer = child.getType() === 'Layer';\\n        var isFastLayer = child.getType() === 'FastLayer';\\n        var valid = isLayer || isFastLayer;\\n        if (!valid) {\\n            Util_1.Util.throw('You may only add layers to the stage.');\\n        }\\n    };\\n    Stage.prototype._checkVisibility = function () {\\n        var style = this.visible() ? '' : 'none';\\n        this.content.style.display = style;\\n    };\\n    Stage.prototype.setContainer = function (container) {\\n        if (typeof container === STRING) {\\n            if (container.charAt(0) === '.') {\\n                var className = container.slice(1);\\n                container = document.getElementsByClassName(className)[0];\\n            }\\n            else {\\n                var id;\\n                if (container.charAt(0) !== '#') {\\n                    id = container;\\n                }\\n                else {\\n                    id = container.slice(1);\\n                }\\n                container = document.getElementById(id);\\n            }\\n            if (!container) {\\n                throw 'Can not find container in document with id ' + id;\\n            }\\n        }\\n        this._setAttr(CONTAINER, container);\\n        if (this.content) {\\n            if (this.content.parentElement) {\\n                this.content.parentElement.removeChild(this.content);\\n            }\\n            container.appendChild(this.content);\\n        }\\n        return this;\\n    };\\n    Stage.prototype.shouldDrawHit = function () {\\n        return true;\\n    };\\n    Stage.prototype.clear = function () {\\n        var layers = this.children, len = layers.length, n;\\n        for (n = 0; n < len; n++) {\\n            layers[n].clear();\\n        }\\n        return this;\\n    };\\n    Stage.prototype.clone = function (obj) {\\n        if (!obj) {\\n            obj = {};\\n        }\\n        obj.container = document.createElement('div');\\n        return Container_1.Container.prototype.clone.call(this, obj);\\n    };\\n    Stage.prototype.destroy = function () {\\n        _super.prototype.destroy.call(this);\\n        var content = this.content;\\n        if (content && Util_1.Util._isInDocument(content)) {\\n            this.container().removeChild(content);\\n        }\\n        var index = exports.stages.indexOf(this);\\n        if (index > -1) {\\n            exports.stages.splice(index, 1);\\n        }\\n        return this;\\n    };\\n    Stage.prototype.getPointerPosition = function () {\\n        var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\\n        if (!pos) {\\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\\n            return null;\\n        }\\n        return {\\n            x: pos.x,\\n            y: pos.y\\n        };\\n    };\\n    Stage.prototype._getPointerById = function (id) {\\n        return this._pointerPositions.find(function (p) { return p.id === id; });\\n    };\\n    Stage.prototype.getPointersPositions = function () {\\n        return this._pointerPositions;\\n    };\\n    Stage.prototype.getStage = function () {\\n        return this;\\n    };\\n    Stage.prototype.getContent = function () {\\n        return this.content;\\n    };\\n    Stage.prototype._toKonvaCanvas = function (config) {\\n        config = config || {};\\n        var x = config.x || 0, y = config.y || 0, canvas = new Canvas_1.SceneCanvas({\\n            width: config.width || this.width(),\\n            height: config.height || this.height(),\\n            pixelRatio: config.pixelRatio || 1\\n        }), _context = canvas.getContext()._context, layers = this.children;\\n        if (x || y) {\\n            _context.translate(-1 * x, -1 * y);\\n        }\\n        layers.each(function (layer) {\\n            if (!layer.isVisible()) {\\n                return;\\n            }\\n            var layerCanvas = layer._toKonvaCanvas(config);\\n            _context.drawImage(layerCanvas._canvas, x, y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\\n        });\\n        return canvas;\\n    };\\n    Stage.prototype.getIntersection = function (pos, selector) {\\n        if (!pos) {\\n            return null;\\n        }\\n        var layers = this.children, len = layers.length, end = len - 1, n, shape;\\n        for (n = end; n >= 0; n--) {\\n            shape = layers[n].getIntersection(pos, selector);\\n            if (shape) {\\n                return shape;\\n            }\\n        }\\n        return null;\\n    };\\n    Stage.prototype._resizeDOM = function () {\\n        if (this.content) {\\n            var width = this.width(), height = this.height(), layers = this.getChildren(), len = layers.length, n, layer;\\n            this.content.style.width = width + PX;\\n            this.content.style.height = height + PX;\\n            this.bufferCanvas.setSize(width, height);\\n            this.bufferHitCanvas.setSize(width, height);\\n            for (n = 0; n < len; n++) {\\n                layer = layers[n];\\n                layer.setSize({ width: width, height: height });\\n                layer.draw();\\n            }\\n        }\\n    };\\n    Stage.prototype.add = function (layer) {\\n        if (arguments.length > 1) {\\n            for (var i = 0; i < arguments.length; i++) {\\n                this.add(arguments[i]);\\n            }\\n            return this;\\n        }\\n        _super.prototype.add.call(this, layer);\\n        var length = this.children.length;\\n        if (length > MAX_LAYERS_NUMBER) {\\n            Util_1.Util.warn('The stage has ' +\\n                length +\\n                ' layers. Recommended maximin number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\\n        }\\n        layer._setCanvasSize(this.width(), this.height());\\n        layer.draw();\\n        if (Global_1.Konva.isBrowser) {\\n            this.content.appendChild(layer.canvas._canvas);\\n        }\\n        return this;\\n    };\\n    Stage.prototype.getParent = function () {\\n        return null;\\n    };\\n    Stage.prototype.getLayer = function () {\\n        return null;\\n    };\\n    Stage.prototype.hasPointerCapture = function (pointerId) {\\n        return PointerEvents.hasPointerCapture(pointerId, this);\\n    };\\n    Stage.prototype.setPointerCapture = function (pointerId) {\\n        PointerEvents.setPointerCapture(pointerId, this);\\n    };\\n    Stage.prototype.releaseCapture = function (pointerId) {\\n        PointerEvents.releaseCapture(pointerId, this);\\n    };\\n    Stage.prototype.getLayers = function () {\\n        return this.getChildren();\\n    };\\n    Stage.prototype._bindContentEvents = function () {\\n        if (!Global_1.Konva.isBrowser) {\\n            return;\\n        }\\n        for (var n = 0; n < eventsLength; n++) {\\n            addEvent(this, EVENTS[n]);\\n        }\\n    };\\n    Stage.prototype._mouseenter = function (evt) {\\n        this.setPointersPositions(evt);\\n        this._fire(MOUSEENTER, { evt: evt, target: this, currentTarget: this });\\n    };\\n    Stage.prototype._mouseover = function (evt) {\\n        this.setPointersPositions(evt);\\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\\n        this._fire(MOUSEOVER, { evt: evt, target: this, currentTarget: this });\\n    };\\n    Stage.prototype._mouseout = function (evt) {\\n        this.setPointersPositions(evt);\\n        var targetShape = this.targetShape;\\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\\n        if (targetShape && eventsEnabled) {\\n            targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\\n            targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\\n            this.targetShape = null;\\n        }\\n        else if (eventsEnabled) {\\n            this._fire(MOUSELEAVE, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this\\n            });\\n            this._fire(MOUSEOUT, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this\\n            });\\n        }\\n        this.pointerPos = undefined;\\n        this._pointerPositions = [];\\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\\n    };\\n    Stage.prototype._mousemove = function (evt) {\\n        if (Global_1.Konva.UA.ieMobile) {\\n            return this._touchmove(evt);\\n        }\\n        this.setPointersPositions(evt);\\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\\n        var shape;\\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\\n        if (eventsEnabled) {\\n            shape = this.getIntersection(this.getPointerPosition());\\n            if (shape && shape.isListening()) {\\n                var differentTarget = !this.targetShape || this.targetShape !== shape;\\n                if (eventsEnabled && differentTarget) {\\n                    if (this.targetShape) {\\n                        this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId }, shape);\\n                        this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId }, shape);\\n                    }\\n                    shape._fireAndBubble(MOUSEOVER, { evt: evt, pointerId: pointerId }, this.targetShape);\\n                    shape._fireAndBubble(MOUSEENTER, { evt: evt, pointerId: pointerId }, this.targetShape);\\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\\n                    this.targetShape = shape;\\n                }\\n                else {\\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\\n                }\\n            }\\n            else {\\n                if (this.targetShape && eventsEnabled) {\\n                    this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId });\\n                    this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId });\\n                    this._fire(MOUSEOVER, {\\n                        evt: evt,\\n                        target: this,\\n                        currentTarget: this,\\n                        pointerId: pointerId\\n                    });\\n                    this.targetShape = null;\\n                }\\n                this._fire(MOUSEMOVE, {\\n                    evt: evt,\\n                    target: this,\\n                    currentTarget: this,\\n                    pointerId: pointerId\\n                });\\n            }\\n            this._fire(CONTENT_MOUSEMOVE, { evt: evt });\\n        }\\n        if (evt.cancelable) {\\n            evt.preventDefault();\\n        }\\n    };\\n    Stage.prototype._mousedown = function (evt) {\\n        if (Global_1.Konva.UA.ieMobile) {\\n            return this._touchstart(evt);\\n        }\\n        this.setPointersPositions(evt);\\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\\n        var shape = this.getIntersection(this.getPointerPosition());\\n        Global_1.Konva.listenClickTap = true;\\n        if (shape && shape.isListening()) {\\n            this.clickStartShape = shape;\\n            shape._fireAndBubble(MOUSEDOWN, { evt: evt, pointerId: pointerId });\\n        }\\n        else {\\n            this._fire(MOUSEDOWN, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: pointerId\\n            });\\n        }\\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\\n    };\\n    Stage.prototype._mouseup = function (evt) {\\n        if (Global_1.Konva.UA.ieMobile) {\\n            return this._touchend(evt);\\n        }\\n        this.setPointersPositions(evt);\\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\\n        var shape = this.getIntersection(this.getPointerPosition()), clickStartShape = this.clickStartShape, clickEndShape = this.clickEndShape, fireDblClick = false;\\n        if (Global_1.Konva.inDblClickWindow) {\\n            fireDblClick = true;\\n            clearTimeout(this.dblTimeout);\\n        }\\n        else if (!DragAndDrop_1.DD.justDragged) {\\n            Global_1.Konva.inDblClickWindow = true;\\n            clearTimeout(this.dblTimeout);\\n        }\\n        else if (DragAndDrop_1.DD) {\\n            DragAndDrop_1.DD.justDragged = false;\\n        }\\n        this.dblTimeout = setTimeout(function () {\\n            Global_1.Konva.inDblClickWindow = false;\\n        }, Global_1.Konva.dblClickWindow);\\n        if (shape && shape.isListening()) {\\n            this.clickEndShape = shape;\\n            shape._fireAndBubble(MOUSEUP, { evt: evt, pointerId: pointerId });\\n            if (Global_1.Konva.listenClickTap &&\\n                clickStartShape &&\\n                clickStartShape._id === shape._id) {\\n                shape._fireAndBubble(CLICK, { evt: evt, pointerId: pointerId });\\n                if (fireDblClick && clickEndShape && clickEndShape === shape) {\\n                    shape._fireAndBubble(DBL_CLICK, { evt: evt, pointerId: pointerId });\\n                }\\n            }\\n        }\\n        else {\\n            this._fire(MOUSEUP, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: pointerId\\n            });\\n            if (Global_1.Konva.listenClickTap) {\\n                this._fire(CLICK, {\\n                    evt: evt,\\n                    target: this,\\n                    currentTarget: this,\\n                    pointerId: pointerId\\n                });\\n            }\\n            if (fireDblClick) {\\n                this._fire(DBL_CLICK, {\\n                    evt: evt,\\n                    target: this,\\n                    currentTarget: this,\\n                    pointerId: pointerId\\n                });\\n            }\\n        }\\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\\n        if (Global_1.Konva.listenClickTap) {\\n            this._fire(CONTENT_CLICK, { evt: evt });\\n            if (fireDblClick) {\\n                this._fire(CONTENT_DBL_CLICK, { evt: evt });\\n            }\\n        }\\n        Global_1.Konva.listenClickTap = false;\\n        if (evt.cancelable) {\\n            evt.preventDefault();\\n        }\\n    };\\n    Stage.prototype._contextmenu = function (evt) {\\n        this.setPointersPositions(evt);\\n        var shape = this.getIntersection(this.getPointerPosition());\\n        if (shape && shape.isListening()) {\\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\\n        }\\n        else {\\n            this._fire(CONTEXTMENU, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this\\n            });\\n        }\\n        this._fire(CONTENT_CONTEXTMENU, { evt: evt });\\n    };\\n    Stage.prototype._touchstart = function (evt) {\\n        var _this = this;\\n        this.setPointersPositions(evt);\\n        var triggeredOnShape = false;\\n        this._changedPointerPositions.forEach(function (pos) {\\n            var shape = _this.getIntersection(pos);\\n            Global_1.Konva.listenClickTap = true;\\n            var hasShape = shape && shape.isListening();\\n            if (!hasShape) {\\n                return;\\n            }\\n            if (Global_1.Konva.captureTouchEventsEnabled) {\\n                shape.setPointerCapture(pos.id);\\n            }\\n            _this.tapStartShape = shape;\\n            shape._fireAndBubble(TOUCHSTART, { evt: evt, pointerId: pos.id }, _this);\\n            triggeredOnShape = true;\\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\\n                evt.preventDefault();\\n            }\\n        });\\n        if (!triggeredOnShape) {\\n            this._fire(TOUCHSTART, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: this._changedPointerPositions[0].id\\n            });\\n        }\\n        this._fire(CONTENT_TOUCHSTART, { evt: evt });\\n    };\\n    Stage.prototype._touchmove = function (evt) {\\n        var _this = this;\\n        this.setPointersPositions(evt);\\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\\n        if (eventsEnabled) {\\n            var triggeredOnShape = false;\\n            var processedShapesIds = {};\\n            this._changedPointerPositions.forEach(function (pos) {\\n                var shape = PointerEvents.getCapturedShape(pos.id) || _this.getIntersection(pos);\\n                var hasShape = shape && shape.isListening();\\n                if (!hasShape) {\\n                    return;\\n                }\\n                if (processedShapesIds[shape._id]) {\\n                    return;\\n                }\\n                processedShapesIds[shape._id] = true;\\n                shape._fireAndBubble(TOUCHMOVE, { evt: evt, pointerId: pos.id });\\n                triggeredOnShape = true;\\n                if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\\n                    evt.preventDefault();\\n                }\\n            });\\n            if (!triggeredOnShape) {\\n                this._fire(TOUCHMOVE, {\\n                    evt: evt,\\n                    target: this,\\n                    currentTarget: this,\\n                    pointerId: this._changedPointerPositions[0].id\\n                });\\n            }\\n            this._fire(CONTENT_TOUCHMOVE, { evt: evt });\\n        }\\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\\n            evt.preventDefault();\\n        }\\n    };\\n    Stage.prototype._touchend = function (evt) {\\n        var _this = this;\\n        this.setPointersPositions(evt);\\n        var clickEndShape = this.clickEndShape, fireDblClick = false;\\n        if (Global_1.Konva.inDblClickWindow) {\\n            fireDblClick = true;\\n            clearTimeout(this.dblTimeout);\\n        }\\n        else if (!DragAndDrop_1.DD.justDragged) {\\n            Global_1.Konva.inDblClickWindow = true;\\n            clearTimeout(this.dblTimeout);\\n        }\\n        this.dblTimeout = setTimeout(function () {\\n            Global_1.Konva.inDblClickWindow = false;\\n        }, Global_1.Konva.dblClickWindow);\\n        var triggeredOnShape = false;\\n        var processedShapesIds = {};\\n        var tapTriggered = false;\\n        var dblTapTriggered = false;\\n        this._changedPointerPositions.forEach(function (pos) {\\n            var shape = PointerEvents.getCapturedShape(pos.id) ||\\n                _this.getIntersection(pos);\\n            if (shape) {\\n                shape.releaseCapture(pos.id);\\n            }\\n            var hasShape = shape && shape.isListening();\\n            if (!hasShape) {\\n                return;\\n            }\\n            if (processedShapesIds[shape._id]) {\\n                return;\\n            }\\n            processedShapesIds[shape._id] = true;\\n            _this.clickEndShape = shape;\\n            shape._fireAndBubble(TOUCHEND, { evt: evt, pointerId: pos.id });\\n            triggeredOnShape = true;\\n            if (Global_1.Konva.listenClickTap && shape === _this.tapStartShape) {\\n                tapTriggered = true;\\n                shape._fireAndBubble(TAP, { evt: evt, pointerId: pos.id });\\n                if (fireDblClick && clickEndShape && clickEndShape === shape) {\\n                    dblTapTriggered = true;\\n                    shape._fireAndBubble(DBL_TAP, { evt: evt, pointerId: pos.id });\\n                }\\n            }\\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\\n                evt.preventDefault();\\n            }\\n        });\\n        if (!triggeredOnShape) {\\n            this._fire(TOUCHEND, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: this._changedPointerPositions[0].id\\n            });\\n        }\\n        if (Global_1.Konva.listenClickTap && !tapTriggered) {\\n            this._fire(TAP, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: this._changedPointerPositions[0].id\\n            });\\n        }\\n        if (fireDblClick && !dblTapTriggered) {\\n            this._fire(DBL_TAP, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this,\\n                pointerId: this._changedPointerPositions[0].id\\n            });\\n        }\\n        this._fire(CONTENT_TOUCHEND, { evt: evt });\\n        if (Global_1.Konva.listenClickTap) {\\n            this._fire(CONTENT_TAP, { evt: evt });\\n            if (fireDblClick) {\\n                this._fire(CONTENT_DBL_TAP, { evt: evt });\\n            }\\n        }\\n        Global_1.Konva.listenClickTap = false;\\n    };\\n    Stage.prototype._wheel = function (evt) {\\n        this.setPointersPositions(evt);\\n        var shape = this.getIntersection(this.getPointerPosition());\\n        if (shape && shape.isListening()) {\\n            shape._fireAndBubble(WHEEL, { evt: evt });\\n        }\\n        else {\\n            this._fire(WHEEL, {\\n                evt: evt,\\n                target: this,\\n                currentTarget: this\\n            });\\n        }\\n        this._fire(CONTENT_WHEEL, { evt: evt });\\n    };\\n    Stage.prototype._pointerdown = function (evt) {\\n        if (!Global_1.Konva._pointerEventsEnabled) {\\n            return;\\n        }\\n        this.setPointersPositions(evt);\\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\\n            this.getIntersection(this.getPointerPosition());\\n        if (shape) {\\n            shape._fireAndBubble(POINTERDOWN, PointerEvents.createEvent(evt));\\n        }\\n    };\\n    Stage.prototype._pointermove = function (evt) {\\n        if (!Global_1.Konva._pointerEventsEnabled) {\\n            return;\\n        }\\n        this.setPointersPositions(evt);\\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\\n            this.getIntersection(this.getPointerPosition());\\n        if (shape) {\\n            shape._fireAndBubble(POINTERMOVE, PointerEvents.createEvent(evt));\\n        }\\n    };\\n    Stage.prototype._pointerup = function (evt) {\\n        if (!Global_1.Konva._pointerEventsEnabled) {\\n            return;\\n        }\\n        this.setPointersPositions(evt);\\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\\n            this.getIntersection(this.getPointerPosition());\\n        if (shape) {\\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\\n        }\\n        PointerEvents.releaseCapture(evt.pointerId);\\n    };\\n    Stage.prototype._pointercancel = function (evt) {\\n        if (!Global_1.Konva._pointerEventsEnabled) {\\n            return;\\n        }\\n        this.setPointersPositions(evt);\\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\\n            this.getIntersection(this.getPointerPosition());\\n        if (shape) {\\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\\n        }\\n        PointerEvents.releaseCapture(evt.pointerId);\\n    };\\n    Stage.prototype._lostpointercapture = function (evt) {\\n        PointerEvents.releaseCapture(evt.pointerId);\\n    };\\n    Stage.prototype.setPointersPositions = function (evt) {\\n        var _this = this;\\n        var contentPosition = this._getContentPosition(), x = null, y = null;\\n        evt = evt ? evt : window.event;\\n        if (evt.touches !== undefined) {\\n            this._pointerPositions = [];\\n            this._changedPointerPositions = [];\\n            Util_1.Collection.prototype.each.call(evt.touches, function (touch) {\\n                _this._pointerPositions.push({\\n                    id: touch.identifier,\\n                    x: touch.clientX - contentPosition.left,\\n                    y: touch.clientY - contentPosition.top\\n                });\\n            });\\n            Util_1.Collection.prototype.each.call(evt.changedTouches || evt.touches, function (touch) {\\n                _this._changedPointerPositions.push({\\n                    id: touch.identifier,\\n                    x: touch.clientX - contentPosition.left,\\n                    y: touch.clientY - contentPosition.top\\n                });\\n            });\\n            if (evt.touches.length > 0) {\\n                var touch = evt.touches[0];\\n                x = touch.clientX - contentPosition.left;\\n                y = touch.clientY - contentPosition.top;\\n            }\\n        }\\n        else {\\n            x = evt.clientX - contentPosition.left;\\n            y = evt.clientY - contentPosition.top;\\n            this.pointerPos = {\\n                x: x,\\n                y: y\\n            };\\n            this._pointerPositions = [{ x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) }];\\n            this._changedPointerPositions = [\\n                { x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) }\\n            ];\\n        }\\n    };\\n    Stage.prototype._setPointerPosition = function (evt) {\\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \\\"stage.setPointersPositions(event)\\\" instead.');\\n        this.setPointersPositions(evt);\\n    };\\n    Stage.prototype._getContentPosition = function () {\\n        var rect = this.content.getBoundingClientRect\\n            ? this.content.getBoundingClientRect()\\n            : { top: 0, left: 0 };\\n        return {\\n            top: rect.top,\\n            left: rect.left\\n        };\\n    };\\n    Stage.prototype._buildDOM = function () {\\n        this.bufferCanvas = new Canvas_1.SceneCanvas();\\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({ pixelRatio: 1 });\\n        if (!Global_1.Konva.isBrowser) {\\n            return;\\n        }\\n        var container = this.container();\\n        if (!container) {\\n            throw 'Stage has no container. A container is required.';\\n        }\\n        container.innerHTML = EMPTY_STRING;\\n        this.content = document.createElement('div');\\n        this.content.style.position = RELATIVE;\\n        this.content.style.userSelect = 'none';\\n        this.content.className = KONVA_CONTENT;\\n        this.content.setAttribute('role', 'presentation');\\n        container.appendChild(this.content);\\n        this._resizeDOM();\\n    };\\n    Stage.prototype.cache = function () {\\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\\n        return this;\\n    };\\n    Stage.prototype.clearCache = function () {\\n        return this;\\n    };\\n    Stage.prototype.batchDraw = function () {\\n        this.children.each(function (layer) {\\n            layer.batchDraw();\\n        });\\n        return this;\\n    };\\n    return Stage;\\n}(Container_1.Container));\\nexports.Stage = Stage;\\nStage.prototype.nodeType = STAGE;\\nGlobal_2._registerNode(Stage);\\nFactory_1.Factory.addGetterSetter(Stage, 'container');\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"addEvent\",\"ctx\",\"eventName\",\"content\",\"addEventListener\",\"evt\",\"UNDERSCORE\",\"checkNoClip\",\"attrs\",\"clipFunc\",\"clipWidth\",\"clipHeight\",\"Util_1\",\"Util\",\"warn\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"defineProperty\",\"value\",\"Factory_1\",\"Container_1\",\"Global_1\",\"Canvas_1\",\"DragAndDrop_1\",\"Global_2\",\"PointerEvents\",\"EVENTS\",\"eventsLength\",\"length\",\"stages\",\"Stage\",\"_super\",\"config\",\"_this\",\"call\",\"_pointerPositions\",\"_changedPointerPositions\",\"_buildDOM\",\"_bindContentEvents\",\"push\",\"on\",\"_resizeDOM\",\"_checkVisibility\",\"_validateAdd\",\"Stage.prototype._validateAdd\",\"child\",\"isLayer\",\"getType\",\"isFastLayer\",\"throw\",\"Stage.prototype._checkVisibility\",\"style\",\"visible\",\"display\",\"setContainer\",\"Stage.prototype.setContainer\",\"container\",\"STRING\",\"charAt\",\"className\",\"slice\",\"document\",\"getElementsByClassName\",\"id\",\"getElementById\",\"_setAttr\",\"CONTAINER\",\"parentElement\",\"removeChild\",\"appendChild\",\"shouldDrawHit\",\"Stage.prototype.shouldDrawHit\",\"clear\",\"Stage.prototype.clear\",\"layers\",\"children\",\"len\",\"n\",\"clone\",\"Stage.prototype.clone\",\"obj\",\"createElement\",\"Container\",\"destroy\",\"Stage.prototype.destroy\",\"_isInDocument\",\"index\",\"indexOf\",\"splice\",\"getPointerPosition\",\"Stage.prototype.getPointerPosition\",\"pos\",\"x\",\"y\",\"NO_POINTERS_MESSAGE\",\"_getPointerById\",\"Stage.prototype._getPointerById\",\"find\",\"getPointersPositions\",\"Stage.prototype.getPointersPositions\",\"getStage\",\"Stage.prototype.getStage\",\"getContent\",\"Stage.prototype.getContent\",\"_toKonvaCanvas\",\"Stage.prototype._toKonvaCanvas\",\"canvas\",\"SceneCanvas\",\"width\",\"height\",\"pixelRatio\",\"_context\",\"getContext\",\"translate\",\"each\",\"layer\",\"isVisible\",\"layerCanvas\",\"drawImage\",\"_canvas\",\"getWidth\",\"getPixelRatio\",\"getHeight\",\"getIntersection\",\"Stage.prototype.getIntersection\",\"selector\",\"shape\",\"Stage.prototype._resizeDOM\",\"getChildren\",\"PX\",\"bufferCanvas\",\"setSize\",\"bufferHitCanvas\",\"draw\",\"add\",\"Stage.prototype.add\",\"arguments\",\"i\",\"MAX_LAYERS_NUMBER\",\"_setCanvasSize\",\"Konva\",\"isBrowser\",\"getParent\",\"Stage.prototype.getParent\",\"getLayer\",\"Stage.prototype.getLayer\",\"hasPointerCapture\",\"Stage.prototype.hasPointerCapture\",\"pointerId\",\"setPointerCapture\",\"Stage.prototype.setPointerCapture\",\"releaseCapture\",\"Stage.prototype.releaseCapture\",\"getLayers\",\"Stage.prototype.getLayers\",\"Stage.prototype._bindContentEvents\",\"_mouseenter\",\"Stage.prototype._mouseenter\",\"setPointersPositions\",\"_fire\",\"MOUSEENTER\",\"target\",\"currentTarget\",\"_mouseover\",\"Stage.prototype._mouseover\",\"CONTENT_MOUSEOVER\",\"MOUSEOVER\",\"_mouseout\",\"Stage.prototype._mouseout\",\"targetShape\",\"eventsEnabled\",\"DD\",\"isDragging\",\"hitOnDragEnabled\",\"_fireAndBubble\",\"MOUSEOUT\",\"MOUSELEAVE\",\"pointerPos\",\"undefined\",\"CONTENT_MOUSEOUT\",\"_mousemove\",\"Stage.prototype._mousemove\",\"UA\",\"ieMobile\",\"_touchmove\",\"_getFirstPointerId\",\"isListening\",\"differentTarget\",\"MOUSEMOVE\",\"CONTENT_MOUSEMOVE\",\"cancelable\",\"preventDefault\",\"_mousedown\",\"Stage.prototype._mousedown\",\"_touchstart\",\"listenClickTap\",\"clickStartShape\",\"MOUSEDOWN\",\"CONTENT_MOUSEDOWN\",\"_mouseup\",\"Stage.prototype._mouseup\",\"_touchend\",\"clickEndShape\",\"fireDblClick\",\"inDblClickWindow\",\"clearTimeout\",\"dblTimeout\",\"justDragged\",\"setTimeout\",\"dblClickWindow\",\"MOUSEUP\",\"_id\",\"CLICK\",\"DBL_CLICK\",\"CONTENT_MOUSEUP\",\"CONTENT_CLICK\",\"CONTENT_DBL_CLICK\",\"_contextmenu\",\"Stage.prototype._contextmenu\",\"CONTEXTMENU\",\"CONTENT_CONTEXTMENU\",\"Stage.prototype._touchstart\",\"triggeredOnShape\",\"forEach\",\"captureTouchEventsEnabled\",\"tapStartShape\",\"TOUCHSTART\",\"CONTENT_TOUCHSTART\",\"Stage.prototype._touchmove\",\"processedShapesIds\",\"getCapturedShape\",\"TOUCHMOVE\",\"CONTENT_TOUCHMOVE\",\"node\",\"Stage.prototype._touchend\",\"tapTriggered\",\"dblTapTriggered\",\"TOUCHEND\",\"TAP\",\"DBL_TAP\",\"CONTENT_TOUCHEND\",\"CONTENT_TAP\",\"CONTENT_DBL_TAP\",\"_wheel\",\"Stage.prototype._wheel\",\"WHEEL\",\"CONTENT_WHEEL\",\"_pointerdown\",\"Stage.prototype._pointerdown\",\"_pointerEventsEnabled\",\"POINTERDOWN\",\"createEvent\",\"_pointermove\",\"Stage.prototype._pointermove\",\"POINTERMOVE\",\"_pointerup\",\"Stage.prototype._pointerup\",\"POINTERUP\",\"_pointercancel\",\"Stage.prototype._pointercancel\",\"_lostpointercapture\",\"Stage.prototype._lostpointercapture\",\"Stage.prototype.setPointersPositions\",\"contentPosition\",\"_getContentPosition\",\"window\",\"event\",\"touches\",\"Collection\",\"touch\",\"identifier\",\"clientX\",\"left\",\"clientY\",\"top\",\"changedTouches\",\"_setPointerPosition\",\"Stage.prototype._setPointerPosition\",\"Stage.prototype._getContentPosition\",\"rect\",\"getBoundingClientRect\",\"Stage.prototype._buildDOM\",\"HitCanvas\",\"innerHTML\",\"EMPTY_STRING\",\"position\",\"RELATIVE\",\"userSelect\",\"KONVA_CONTENT\",\"setAttribute\",\"cache\",\"Stage.prototype.cache\",\"clearCache\",\"Stage.prototype.clearCache\",\"batchDraw\",\"Stage.prototype.batchDraw\",\"nodeType\",\"STAGE\",\"_registerNode\",\"Factory\",\"addGetterSetter\"]\n}\n"]