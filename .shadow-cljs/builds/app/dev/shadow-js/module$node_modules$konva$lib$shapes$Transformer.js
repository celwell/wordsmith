["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/shapes/Transformer.js"],"~:js","shadow$provide.module$node_modules$konva$lib$shapes$Transformer=function(global,require,module,exports){function getCursor(anchorName,rad,isMirrored){if(\"rotater\"===anchorName)return\"crosshair\";rad+=Util_1.Util._degToRad(ANGLES[anchorName]||0);isMirrored&&(rad*=-1);anchorName=(Util_1.Util._radToDeg(rad)%360+360)%360;if(Util_1.Util._inRange(anchorName,337.5,360)||Util_1.Util._inRange(anchorName,0,22.5))return\"ns-resize\";if(Util_1.Util._inRange(anchorName,22.5,67.5))return\"nesw-resize\";if(Util_1.Util._inRange(anchorName,\n67.5,112.5))return\"ew-resize\";if(Util_1.Util._inRange(anchorName,112.5,157.5))return\"nwse-resize\";if(Util_1.Util._inRange(anchorName,157.5,202.5))return\"ns-resize\";if(Util_1.Util._inRange(anchorName,202.5,247.5))return\"nesw-resize\";if(Util_1.Util._inRange(anchorName,247.5,292.5))return\"ew-resize\";if(Util_1.Util._inRange(anchorName,292.5,337.5))return\"nwse-resize\";Util_1.Util.error(\"Transformer has unknown angle for cursor detection: \"+anchorName);return\"pointer\"}var __extends=this&&this.__extends||\nfunction(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,\"__esModule\",{value:!0});var Util_1=require(\"module$node_modules$konva$lib$Util\");\nglobal=require(\"module$node_modules$konva$lib$Factory\");var Node_1=require(\"module$node_modules$konva$lib$Node\"),Shape_1=require(\"module$node_modules$konva$lib$Shape\"),Rect_1=require(\"module$node_modules$konva$lib$shapes$Rect\"),Group_1=require(\"module$node_modules$konva$lib$Group\"),Global_1=require(\"module$node_modules$konva$lib$Global\");module=require(\"module$node_modules$konva$lib$Validators\");require=require(\"module$node_modules$konva$lib$Global\");var ATTR_CHANGE_LIST=\"resizeEnabledChange rotateAnchorOffsetChange rotateEnabledChange enabledAnchorsChange anchorSizeChange borderEnabledChange borderStrokeChange borderStrokeWidthChange borderDashChange anchorStrokeChange anchorStrokeWidthChange anchorFillChange anchorCornerRadiusChange ignoreStrokeChange\".split(\" \").map(function(e){return e+\n\".tr-konva\"}).join(\" \"),TRANSFORM_CHANGE_STR=\"widthChange heightChange scaleXChange scaleYChange skewXChange skewYChange rotationChange offsetXChange offsetYChange transformsEnabledChange strokeWidthChange\".split(\" \").map(function(e){return e+\".tr-konva\"}).join(\" \"),ANGLES={\"top-left\":-45,\"top-center\":0,\"top-right\":45,\"middle-right\":-90,\"middle-left\":90,\"bottom-left\":-135,\"bottom-center\":180,\"bottom-right\":135},ANCHORS_NAMES=\"top-left top-center top-right middle-right middle-left bottom-left bottom-center bottom-right\".split(\" \"),\nTransformer=function(_super){function Transformer(config){config=_super.call(this,config)||this;config._transforming=!1;config._createElements();config._handleMouseMove=config._handleMouseMove.bind(config);config._handleMouseUp=config._handleMouseUp.bind(config);config.update=config.update.bind(config);config.on(ATTR_CHANGE_LIST,config.update);config.getNode()&&config.update();return config}__extends(Transformer,_super);Transformer.prototype.attachTo=function(node){this.setNode(node);return this};\nTransformer.prototype.setNode=function(node){var _this=this;this._node&&this.detach();this._node=node;this._resetTransformCache();var additionalEvents=node._attrsAffectingSize.map(function(prop){return prop+\"Change.tr-konva\"}).join(\" \"),onChange=function(){_this._resetTransformCache();_this._transforming||_this.update()};node.on(additionalEvents,onChange);node.on(TRANSFORM_CHANGE_STR,onChange);node.on(\"xChange.tr-konva yChange.tr-konva\",function(){return _this._resetTransformCache()});this.findOne(\".top-left\")&&\nthis.update();return this};Transformer.prototype.getNode=function(){return this._node};Transformer.prototype.detach=function(){this.getNode()&&(this.getNode().off(\".tr-konva\"),this._node=void 0);this._resetTransformCache()};Transformer.prototype._resetTransformCache=function(){this._clearCache(\"nodeRect\");this._clearCache(\"transform\");this._clearSelfAndDescendantCache(\"absoluteTransform\")};Transformer.prototype._getNodeRect=function(){return this._getCache(\"nodeRect\",this.__getNodeRect)};Transformer.prototype.__getNodeRect=\nfunction(){var node=this.getNode();if(!node)return{x:-1E8,y:-1E8,width:0,height:0,rotation:0};node.parent&&this.parent&&node.parent!==this.parent&&Util_1.Util.warn(\"Transformer and attached node have different parents. Konva does not support such case right now. Please move Transformer to the parent of attaching node.\");var rect=node.getClientRect({skipTransform:!0,skipShadow:!0,skipStroke:this.ignoreStroke()}),rotation=Global_1.Konva.getAngle(node.rotation()),dx=rect.x*node.scaleX()-node.offsetX()*\nnode.scaleX(),dy=rect.y*node.scaleY()-node.offsetY()*node.scaleY();return{x:node.x()+dx*Math.cos(rotation)+dy*Math.sin(-rotation),y:node.y()+dy*Math.cos(rotation)+dx*Math.sin(rotation),width:rect.width*node.scaleX(),height:rect.height*node.scaleY(),rotation:node.rotation()}};Transformer.prototype.getX=function(){return this._getNodeRect().x};Transformer.prototype.getY=function(){return this._getNodeRect().y};Transformer.prototype.getRotation=function(){return this._getNodeRect().rotation};Transformer.prototype.getWidth=\nfunction(){return this._getNodeRect().width};Transformer.prototype.getHeight=function(){return this._getNodeRect().height};Transformer.prototype._createElements=function(){this._createBack();ANCHORS_NAMES.forEach(function(name){this._createAnchor(name)}.bind(this));this._createAnchor(\"rotater\")};Transformer.prototype._createAnchor=function(name){var _this=this,anchor=new Rect_1.Rect({stroke:\"rgb(0, 161, 255)\",fill:\"white\",strokeWidth:1,name:name+\" _anchor\",dragDistance:0,draggable:!0}),self=this;\nanchor.on(\"mousedown touchstart\",function(e){self._handleMouseDown(e)});anchor.on(\"dragstart\",function(e){e.cancelBubble=!0});anchor.on(\"dragmove\",function(e){e.cancelBubble=!0});anchor.on(\"dragend\",function(e){e.cancelBubble=!0});anchor.on(\"mouseenter\",function(){var rad=Global_1.Konva.getAngle(_this.rotation()),scale=_this.getNode().getAbsoluteScale();rad=getCursor(name,rad,0>scale.y*scale.x);anchor.getStage().content.style.cursor=rad;_this._cursorChange=!0});anchor.on(\"mouseout\",function(){anchor.getStage()&&\nanchor.getParent()&&(anchor.getStage().content.style.cursor=\"\",_this._cursorChange=!1)});this.add(anchor)};Transformer.prototype._createBack=function(){var back=new Shape_1.Shape({name:\"back\",width:0,height:0,listening:!1,sceneFunc:function(ctx){var tr=this.getParent(),padding=tr.padding();ctx.beginPath();ctx.rect(-padding,-padding,this.width()+2*padding,this.height()+2*padding);ctx.moveTo(this.width()/2,-padding);tr.rotateEnabled()&&ctx.lineTo(this.width()/2,-tr.rotateAnchorOffset()*Util_1.Util._sign(this.height()));\nctx.fillStrokeShape(this)}});this.add(back)};Transformer.prototype._handleMouseDown=function(e){this._movingAnchorName=e.target.name().split(\" \")[0];var attrs=this._getNodeRect(),width=attrs.width;attrs=attrs.height;var hypotenuse=Math.sqrt(Math.pow(width,2)+Math.pow(attrs,2));this.sin=Math.abs(attrs/hypotenuse);this.cos=Math.abs(width/hypotenuse);window.addEventListener(\"mousemove\",this._handleMouseMove);window.addEventListener(\"touchmove\",this._handleMouseMove);window.addEventListener(\"mouseup\",\nthis._handleMouseUp,!0);window.addEventListener(\"touchend\",this._handleMouseUp,!0);this._transforming=!0;this._fire(\"transformstart\",{evt:e});this.getNode()._fire(\"transformstart\",{evt:e})};Transformer.prototype._handleMouseMove=function(e){var anchorNode=this.findOne(\".\"+this._movingAnchorName);var newHypotenuse=anchorNode.getStage().getContent().getBoundingClientRect();anchorNode.setAbsolutePosition({x:(void 0!==e.clientX?e.clientX:e.touches[0].clientX)-newHypotenuse.left,y:(void 0!==e.clientX?\ne.clientY:e.touches[0].clientY)-newHypotenuse.top});newHypotenuse=this.keepRatio()||e.shiftKey;if(\"top-left\"===this._movingAnchorName){if(newHypotenuse){newHypotenuse=Math.sqrt(Math.pow(this.findOne(\".bottom-right\").x()-anchorNode.x(),2)+Math.pow(this.findOne(\".bottom-right\").y()-anchorNode.y(),2));var x=this.findOne(\".top-left\").x()>this.findOne(\".bottom-right\").x()?-1:1;var reverseY=this.findOne(\".top-left\").y()>this.findOne(\".bottom-right\").y()?-1:1;x*=newHypotenuse*this.cos;var y=newHypotenuse*\nthis.sin*reverseY;this.findOne(\".top-left\").x(this.findOne(\".bottom-right\").x()-x);this.findOne(\".top-left\").y(this.findOne(\".bottom-right\").y()-y)}}else if(\"top-center\"===this._movingAnchorName)this.findOne(\".top-left\").y(anchorNode.y());else if(\"top-right\"===this._movingAnchorName)newHypotenuse&&(newHypotenuse=Math.sqrt(Math.pow(this.findOne(\".bottom-left\").x()-anchorNode.x(),2)+Math.pow(this.findOne(\".bottom-left\").y()-anchorNode.y(),2)),x=this.findOne(\".top-right\").x()<this.findOne(\".top-left\").x()?\n-1:1,reverseY=this.findOne(\".top-right\").y()>this.findOne(\".bottom-left\").y()?-1:1,x*=newHypotenuse*this.cos,y=newHypotenuse*this.sin*reverseY,this.findOne(\".top-right\").x(x),this.findOne(\".top-right\").y(this.findOne(\".bottom-left\").y()-y)),newHypotenuse=anchorNode.position(),this.findOne(\".top-left\").y(newHypotenuse.y),this.findOne(\".bottom-right\").x(newHypotenuse.x);else if(\"middle-left\"===this._movingAnchorName)this.findOne(\".top-left\").x(anchorNode.x());else if(\"middle-right\"===this._movingAnchorName)this.findOne(\".bottom-right\").x(anchorNode.x());\nelse if(\"bottom-left\"===this._movingAnchorName)newHypotenuse&&(newHypotenuse=Math.sqrt(Math.pow(this.findOne(\".top-right\").x()-anchorNode.x(),2)+Math.pow(this.findOne(\".top-right\").y()-anchorNode.y(),2)),x=this.findOne(\".top-right\").x()<this.findOne(\".bottom-left\").x()?-1:1,reverseY=this.findOne(\".bottom-right\").y()<this.findOne(\".top-left\").y()?-1:1,x*=newHypotenuse*this.cos,y=newHypotenuse*this.sin*reverseY,this.findOne(\".bottom-left\").x(this.findOne(\".top-right\").x()-x),this.findOne(\".bottom-left\").y(y)),\nnewHypotenuse=anchorNode.position(),this.findOne(\".top-left\").x(newHypotenuse.x),this.findOne(\".bottom-right\").y(newHypotenuse.y);else if(\"bottom-center\"===this._movingAnchorName)this.findOne(\".bottom-right\").y(anchorNode.y());else if(\"bottom-right\"===this._movingAnchorName)newHypotenuse&&(newHypotenuse=Math.sqrt(Math.pow(this.findOne(\".bottom-right\").x(),2)+Math.pow(this.findOne(\".bottom-right\").y(),2)),x=this.findOne(\".top-left\").x()>this.findOne(\".bottom-right\").x()?-1:1,reverseY=this.findOne(\".top-left\").y()>\nthis.findOne(\".bottom-right\").y()?-1:1,x*=newHypotenuse*this.cos,y=newHypotenuse*this.sin*reverseY,this.findOne(\".bottom-right\").x(x),this.findOne(\".bottom-right\").y(y));else if(\"rotater\"===this._movingAnchorName){newHypotenuse=this.padding();reverseY=this._getNodeRect();x=anchorNode.x()-reverseY.width/2;y=-anchorNode.y()+reverseY.height/2;anchorNode=Math.atan2(-y,x)+Math.PI/2;0>reverseY.height&&(anchorNode-=Math.PI);x=Global_1.Konva.getAngle(this.rotation());anchorNode=Util_1.Util._radToDeg(x)+Util_1.Util._radToDeg(anchorNode);\ny=Global_1.Konva.getAngle(this.getNode().rotation());for(var newAlpha=Util_1.Util._degToRad(anchorNode),snaps=this.rotationSnaps(),i=0;i<snaps.length;i++){var angle=Global_1.Konva.getAngle(snaps[i]);.1>Math.abs(angle-Util_1.Util._degToRad(anchorNode))%(2*Math.PI)&&(anchorNode=Util_1.Util._radToDeg(angle),newAlpha=Util_1.Util._degToRad(anchorNode))}this._fitNodeInto({rotation:Global_1.Konva.angleDeg?anchorNode:Util_1.Util._degToRad(anchorNode),x:reverseY.x+(reverseY.width/2+newHypotenuse)*(Math.cos(y)-\nMath.cos(newAlpha))+(reverseY.height/2+newHypotenuse)*(Math.sin(-y)-Math.sin(-newAlpha))-(newHypotenuse*Math.cos(x)+newHypotenuse*Math.sin(-x)),y:reverseY.y+(reverseY.height/2+newHypotenuse)*(Math.cos(y)-Math.cos(newAlpha))+(reverseY.width/2+newHypotenuse)*(Math.sin(y)-Math.sin(newAlpha))-(newHypotenuse*Math.cos(x)+newHypotenuse*Math.sin(x)),width:reverseY.width+2*newHypotenuse,height:reverseY.height+2*newHypotenuse},e)}else console.error(Error(\"Wrong position argument of selection resizer: \"+this._movingAnchorName));\nif(\"rotater\"!==this._movingAnchorName){newHypotenuse=this.findOne(\".top-left\").getAbsolutePosition(this.getParent());if(this.centeredScaling()||e.altKey)newHypotenuse=this.findOne(\".top-left\"),reverseY=this.findOne(\".bottom-right\"),x=newHypotenuse.x(),anchorNode=newHypotenuse.y(),y=this.getWidth()-reverseY.x(),newAlpha=this.getHeight()-reverseY.y(),reverseY.move({x:-x,y:-anchorNode}),newHypotenuse.move({x:y,y:newAlpha}),newHypotenuse=newHypotenuse.getAbsolutePosition(this.getParent());x=newHypotenuse.x;\ny=newHypotenuse.y;newHypotenuse=this.findOne(\".bottom-right\").x()-this.findOne(\".top-left\").x();reverseY=this.findOne(\".bottom-right\").y()-this.findOne(\".top-left\").y();this._fitNodeInto({x:x+this.offsetX(),y:y+this.offsetY(),width:newHypotenuse,height:reverseY},e)}};Transformer.prototype._handleMouseUp=function(e){this._removeEvents(e)};Transformer.prototype._removeEvents=function(e){if(this._transforming){this._transforming=!1;window.removeEventListener(\"mousemove\",this._handleMouseMove);window.removeEventListener(\"touchmove\",\nthis._handleMouseMove);window.removeEventListener(\"mouseup\",this._handleMouseUp,!0);window.removeEventListener(\"touchend\",this._handleMouseUp,!0);this._fire(\"transformend\",{evt:e});var node=this.getNode();node&&node.fire(\"transformend\",{evt:e})}};Transformer.prototype._fitNodeInto=function(newAttrs,evt){var boundBoxFunc=this.boundBoxFunc();if(boundBoxFunc){var oldAttrs=this._getNodeRect();newAttrs=boundBoxFunc.call(this,oldAttrs,newAttrs)}var node=this.getNode();void 0!==newAttrs.rotation&&this.getNode().rotation(newAttrs.rotation);\nvar pure=node.getClientRect({skipTransform:!0,skipShadow:!0,skipStroke:this.ignoreStroke()}),padding=this.padding();boundBoxFunc=(newAttrs.width-2*padding)/pure.width;oldAttrs=(newAttrs.height-2*padding)/pure.height;var rotation=Global_1.Konva.getAngle(node.rotation()),dx=pure.x*boundBoxFunc-padding-node.offsetX()*boundBoxFunc;node=pure.y*oldAttrs-padding-node.offsetY()*oldAttrs;this.getNode().setAttrs({scaleX:boundBoxFunc,scaleY:oldAttrs,x:newAttrs.x-(dx*Math.cos(rotation)+node*Math.sin(-rotation)),\ny:newAttrs.y-(node*Math.cos(rotation)+dx*Math.sin(rotation))});this._fire(\"transform\",{evt:evt});this.getNode()._fire(\"transform\",{evt:evt});this.update();this.getLayer().batchDraw()};Transformer.prototype.forceUpdate=function(){this._resetTransformCache();this.update()};Transformer.prototype.update=function(){var _this=this,attrs=this._getNodeRect(),node$jscomp$0=this.getNode(),scale={x:1,y:1};node$jscomp$0&&node$jscomp$0.getParent()&&(scale=node$jscomp$0.getParent().getAbsoluteScale());node$jscomp$0=\n{x:1/scale.x,y:1/scale.y};var width=attrs.width;attrs=attrs.height;var enabledAnchors=this.enabledAnchors(),resizeEnabled=this.resizeEnabled(),padding=this.padding(),anchorSize=this.anchorSize();this.find(\"._anchor\").each(function(node){return node.setAttrs({width:anchorSize,height:anchorSize,offsetX:anchorSize/2,offsetY:anchorSize/2,stroke:_this.anchorStroke(),strokeWidth:_this.anchorStrokeWidth(),fill:_this.anchorFill(),cornerRadius:_this.anchorCornerRadius()})});this.findOne(\".top-left\").setAttrs({x:-padding,\ny:-padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"top-left\")});this.findOne(\".top-center\").setAttrs({x:width/2,y:-padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"top-center\")});this.findOne(\".top-right\").setAttrs({x:width+padding,y:-padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"top-right\")});this.findOne(\".middle-left\").setAttrs({x:-padding,y:attrs/2,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"middle-left\")});\nthis.findOne(\".middle-right\").setAttrs({x:width+padding,y:attrs/2,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"middle-right\")});this.findOne(\".bottom-left\").setAttrs({x:-padding,y:attrs+padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"bottom-left\")});this.findOne(\".bottom-center\").setAttrs({x:width/2,y:attrs+padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"bottom-center\")});this.findOne(\".bottom-right\").setAttrs({x:width+\npadding,y:attrs+padding,scale:node$jscomp$0,visible:resizeEnabled&&0<=enabledAnchors.indexOf(\"bottom-right\")});enabledAnchors=-this.rotateAnchorOffset()*Math.abs(node$jscomp$0.y);this.findOne(\".rotater\").setAttrs({x:width/2,y:enabledAnchors*Util_1.Util._sign(attrs),scale:node$jscomp$0,visible:this.rotateEnabled()});this.findOne(\".back\").setAttrs({width:width*scale.x,height:attrs*scale.y,scale:node$jscomp$0,visible:this.borderEnabled(),stroke:this.borderStroke(),strokeWidth:this.borderStrokeWidth(),\ndash:this.borderDash()})};Transformer.prototype.isTransforming=function(){return this._transforming};Transformer.prototype.stopTransform=function(){if(this._transforming){this._removeEvents();var anchorNode=this.findOne(\".\"+this._movingAnchorName);anchorNode&&anchorNode.stopDrag()}};Transformer.prototype.destroy=function(){this.getStage()&&this._cursorChange&&(this.getStage().content.style.cursor=\"\");Group_1.Group.prototype.destroy.call(this);this.detach();this._removeEvents();return this};Transformer.prototype.toObject=\nfunction(){return Node_1.Node.prototype.toObject.call(this)};return Transformer}(Group_1.Group);exports.Transformer=Transformer;Transformer.prototype.className=\"Transformer\";require._registerNode(Transformer);global.Factory.addGetterSetter(Transformer,\"enabledAnchors\",ANCHORS_NAMES,function(val){val instanceof Array||Util_1.Util.warn(\"enabledAnchors value should be an array\");val instanceof Array&&val.forEach(function(name){-1===ANCHORS_NAMES.indexOf(name)&&Util_1.Util.warn(\"Unknown anchor name: \"+\nname+\". Available names are: \"+ANCHORS_NAMES.join(\", \"))});return val||[]});global.Factory.addGetterSetter(Transformer,\"resizeEnabled\",!0);global.Factory.addGetterSetter(Transformer,\"anchorSize\",10,module.getNumberValidator());global.Factory.addGetterSetter(Transformer,\"rotateEnabled\",!0);global.Factory.addGetterSetter(Transformer,\"rotationSnaps\",[]);global.Factory.addGetterSetter(Transformer,\"rotateAnchorOffset\",50,module.getNumberValidator());global.Factory.addGetterSetter(Transformer,\"borderEnabled\",\n!0);global.Factory.addGetterSetter(Transformer,\"anchorStroke\",\"rgb(0, 161, 255)\");global.Factory.addGetterSetter(Transformer,\"anchorStrokeWidth\",1,module.getNumberValidator());global.Factory.addGetterSetter(Transformer,\"anchorFill\",\"white\");global.Factory.addGetterSetter(Transformer,\"anchorCornerRadius\",0,module.getNumberValidator());global.Factory.addGetterSetter(Transformer,\"borderStroke\",\"rgb(0, 161, 255)\");global.Factory.addGetterSetter(Transformer,\"borderStrokeWidth\",1,module.getNumberValidator());\nglobal.Factory.addGetterSetter(Transformer,\"borderDash\");global.Factory.addGetterSetter(Transformer,\"keepRatio\",!0);global.Factory.addGetterSetter(Transformer,\"centeredScaling\",!1);global.Factory.addGetterSetter(Transformer,\"ignoreStroke\",!1);global.Factory.addGetterSetter(Transformer,\"padding\",0,module.getNumberValidator());global.Factory.addGetterSetter(Transformer,\"node\");global.Factory.addGetterSetter(Transformer,\"boundBoxFunc\");global.Factory.backCompat(Transformer,{lineEnabled:\"borderEnabled\",\nrotateHandlerOffset:\"rotateAnchorOffset\",enabledHandlers:\"enabledAnchors\"});Util_1.Collection.mapMethods(Transformer)}","~:source","shadow$provide[\"module$node_modules$konva$lib$shapes$Transformer\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange'\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar NODE_RECT = 'nodeRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange'\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135\n};\nfunction getCursor(anchorName, rad, isMirrored) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n    if (isMirrored) {\n        rad *= -1;\n    }\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right'\n];\nvar MAX_SAFE_INTEGER = 100000000;\nvar Transformer = (function (_super) {\n    __extends(Transformer, _super);\n    function Transformer(config) {\n        var _this = _super.call(this, config) || this;\n        _this._transforming = false;\n        _this._createElements();\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n        _this.update = _this.update.bind(_this);\n        _this.on(ATTR_CHANGE_LIST, _this.update);\n        if (_this.getNode()) {\n            _this.update();\n        }\n        return _this;\n    }\n    Transformer.prototype.attachTo = function (node) {\n        this.setNode(node);\n        return this;\n    };\n    Transformer.prototype.setNode = function (node) {\n        var _this = this;\n        if (this._node) {\n            this.detach();\n        }\n        this._node = node;\n        this._resetTransformCache();\n        var additionalEvents = node._attrsAffectingSize\n            .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\n            .join(' ');\n        var onChange = function () {\n            _this._resetTransformCache();\n            if (!_this._transforming) {\n                _this.update();\n            }\n        };\n        node.on(additionalEvents, onChange);\n        node.on(TRANSFORM_CHANGE_STR, onChange);\n        node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, function () {\n            return _this._resetTransformCache();\n        });\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    };\n    Transformer.prototype.getNode = function () {\n        return this._node;\n    };\n    Transformer.prototype.detach = function () {\n        if (this.getNode()) {\n            this.getNode().off('.' + EVENTS_NAME);\n            this._node = undefined;\n        }\n        this._resetTransformCache();\n    };\n    Transformer.prototype._resetTransformCache = function () {\n        this._clearCache(NODE_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    };\n    Transformer.prototype._getNodeRect = function () {\n        return this._getCache(NODE_RECT, this.__getNodeRect);\n    };\n    Transformer.prototype.__getNodeRect = function () {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0\n            };\n        }\n        if (node.parent && this.parent && node.parent !== this.parent) {\n            Util_1.Util.warn('Transformer and attached node have different parents. Konva does not support such case right now. Please move Transformer to the parent of attaching node.');\n        }\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke()\n        });\n        var rotation = Global_1.Konva.getAngle(node.rotation());\n        var dx = rect.x * node.scaleX() - node.offsetX() * node.scaleX();\n        var dy = rect.y * node.scaleY() - node.offsetY() * node.scaleY();\n        return {\n            x: node.x() + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: node.y() + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * node.scaleX(),\n            height: rect.height * node.scaleY(),\n            rotation: node.rotation()\n        };\n    };\n    Transformer.prototype.getX = function () {\n        return this._getNodeRect().x;\n    };\n    Transformer.prototype.getY = function () {\n        return this._getNodeRect().y;\n    };\n    Transformer.prototype.getRotation = function () {\n        return this._getNodeRect().rotation;\n    };\n    Transformer.prototype.getWidth = function () {\n        return this._getNodeRect().width;\n    };\n    Transformer.prototype.getHeight = function () {\n        return this._getNodeRect().height;\n    };\n    Transformer.prototype._createElements = function () {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    };\n    Transformer.prototype._createAnchor = function (name) {\n        var _this = this;\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('dragmove', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', function () {\n            var rad = Global_1.Konva.getAngle(_this.rotation());\n            var scale = _this.getNode().getAbsoluteScale();\n            var isMirrored = scale.y * scale.x < 0;\n            var cursor = getCursor(name, rad, isMirrored);\n            anchor.getStage().content.style.cursor = cursor;\n            _this._cursorChange = true;\n        });\n        anchor.on('mouseout', function () {\n            if (!anchor.getStage() || !anchor.getParent()) {\n                return;\n            }\n            anchor.getStage().content.style.cursor = '';\n            _this._cursorChange = false;\n        });\n        this.add(anchor);\n    };\n    Transformer.prototype._createBack = function () {\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            listening: false,\n            sceneFunc: function (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()));\n                }\n                ctx.fillStrokeShape(this);\n            }\n        });\n        this.add(back);\n    };\n    Transformer.prototype._handleMouseDown = function (e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n        this._transforming = true;\n        this._fire('transformstart', { evt: e });\n        this.getNode()._fire('transformstart', { evt: e });\n    };\n    Transformer.prototype._handleMouseMove = function (e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        var box = stage.getContent().getBoundingClientRect();\n        var zeroPoint = {\n            x: box.left,\n            y: box.top\n        };\n        var pointerPos = {\n            left: e.clientX !== undefined ? e.clientX : e.touches[0].clientX,\n            top: e.clientX !== undefined ? e.clientY : e.touches[0].clientY\n        };\n        var newAbsPos = {\n            x: pointerPos.left - zeroPoint.x,\n            y: pointerPos.top - zeroPoint.y\n        };\n        anchorNode.setAbsolutePosition(newAbsPos);\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-right').x() - anchorNode.x(), 2) +\n                    Math.pow(this.findOne('.bottom-right').y() - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > this.findOne('.bottom-right').x()\n                    ? -1\n                    : 1;\n                var reverseY = this.findOne('.top-left').y() > this.findOne('.bottom-right').y()\n                    ? -1\n                    : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(this.findOne('.bottom-right').x() - x);\n                this.findOne('.top-left').y(this.findOne('.bottom-right').y() - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-left').x() - anchorNode.x(), 2) +\n                    Math.pow(this.findOne('.bottom-left').y() - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < this.findOne('.top-left').x()\n                    ? -1\n                    : 1;\n                var reverseY = this.findOne('.top-right').y() > this.findOne('.bottom-left').y()\n                    ? -1\n                    : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(x);\n                this.findOne('.top-right').y(this.findOne('.bottom-left').y() - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.top-right').x() - anchorNode.x(), 2) +\n                    Math.pow(this.findOne('.top-right').y() - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < this.findOne('.bottom-left').x()\n                    ? -1\n                    : 1;\n                var reverseY = this.findOne('.bottom-right').y() < this.findOne('.top-left').y()\n                    ? -1\n                    : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-left').x(this.findOne('.top-right').x() - x);\n                this.findOne('.bottom-left').y(y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-right').x(), 2) +\n                    Math.pow(this.findOne('.bottom-right').y(), 2));\n                var reverseX = this.findOne('.top-left').x() > this.findOne('.bottom-right').x()\n                    ? -1\n                    : 1;\n                var reverseY = this.findOne('.top-left').y() > this.findOne('.bottom-right').y()\n                    ? -1\n                    : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(x);\n                this.findOne('.bottom-right').y(y);\n            }\n        }\n        else if (this._movingAnchorName === 'rotater') {\n            var padding = this.padding();\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            var dAlpha = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                dAlpha -= Math.PI;\n            }\n            var rot = Global_1.Konva.getAngle(this.rotation());\n            var newRotation = Util_1.Util._radToDeg(rot) + Util_1.Util._radToDeg(dAlpha);\n            var alpha = Global_1.Konva.getAngle(this.getNode().rotation());\n            var newAlpha = Util_1.Util._degToRad(newRotation);\n            var snaps = this.rotationSnaps();\n            var offset = 0.1;\n            for (var i = 0; i < snaps.length; i++) {\n                var angle = Global_1.Konva.getAngle(snaps[i]);\n                var dif = Math.abs(angle - Util_1.Util._degToRad(newRotation)) % (Math.PI * 2);\n                if (dif < offset) {\n                    newRotation = Util_1.Util._radToDeg(angle);\n                    newAlpha = Util_1.Util._degToRad(newRotation);\n                }\n            }\n            var dx = padding;\n            var dy = padding;\n            this._fitNodeInto({\n                rotation: Global_1.Konva.angleDeg ? newRotation : Util_1.Util._degToRad(newRotation),\n                x: attrs.x +\n                    (attrs.width / 2 + padding) *\n                        (Math.cos(alpha) - Math.cos(newAlpha)) +\n                    (attrs.height / 2 + padding) *\n                        (Math.sin(-alpha) - Math.sin(-newAlpha)) -\n                    (dx * Math.cos(rot) + dy * Math.sin(-rot)),\n                y: attrs.y +\n                    (attrs.height / 2 + padding) *\n                        (Math.cos(alpha) - Math.cos(newAlpha)) +\n                    (attrs.width / 2 + padding) *\n                        (Math.sin(alpha) - Math.sin(newAlpha)) -\n                    (dy * Math.cos(rot) + dx * Math.sin(rot)),\n                width: attrs.width + padding * 2,\n                height: attrs.height + padding * 2\n            }, e);\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        if (this._movingAnchorName === 'rotater') {\n            return;\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition(this.getParent());\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY\n            });\n            absPos = topLeft.getAbsolutePosition(this.getParent());\n        }\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodeInto({\n            x: x + this.offsetX(),\n            y: y + this.offsetY(),\n            width: width,\n            height: height\n        }, e);\n    };\n    Transformer.prototype._handleMouseUp = function (e) {\n        this._removeEvents(e);\n    };\n    Transformer.prototype._removeEvents = function (e) {\n        if (this._transforming) {\n            this._transforming = false;\n            window.removeEventListener('mousemove', this._handleMouseMove);\n            window.removeEventListener('touchmove', this._handleMouseMove);\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\n            window.removeEventListener('touchend', this._handleMouseUp, true);\n            this._fire('transformend', { evt: e });\n            var node = this.getNode();\n            if (node) {\n                node.fire('transformend', { evt: e });\n            }\n        }\n    };\n    Transformer.prototype._fitNodeInto = function (newAttrs, evt) {\n        var boundBoxFunc = this.boundBoxFunc();\n        if (boundBoxFunc) {\n            var oldAttrs = this._getNodeRect();\n            newAttrs = boundBoxFunc.call(this, oldAttrs, newAttrs);\n        }\n        var node = this.getNode();\n        if (newAttrs.rotation !== undefined) {\n            this.getNode().rotation(newAttrs.rotation);\n        }\n        var pure = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke()\n        });\n        var padding = this.padding();\n        var scaleX = (newAttrs.width - padding * 2) / pure.width;\n        var scaleY = (newAttrs.height - padding * 2) / pure.height;\n        var rotation = Global_1.Konva.getAngle(node.rotation());\n        var dx = pure.x * scaleX - padding - node.offsetX() * scaleX;\n        var dy = pure.y * scaleY - padding - node.offsetY() * scaleY;\n        this.getNode().setAttrs({\n            scaleX: scaleX,\n            scaleY: scaleY,\n            x: newAttrs.x - (dx * Math.cos(rotation) + dy * Math.sin(-rotation)),\n            y: newAttrs.y - (dy * Math.cos(rotation) + dx * Math.sin(rotation))\n        });\n        this._fire('transform', { evt: evt });\n        this.getNode()._fire('transform', { evt: evt });\n        this.update();\n        this.getLayer().batchDraw();\n    };\n    Transformer.prototype.forceUpdate = function () {\n        this._resetTransformCache();\n        this.update();\n    };\n    Transformer.prototype.update = function () {\n        var _this = this;\n        var attrs = this._getNodeRect();\n        var node = this.getNode();\n        var scale = { x: 1, y: 1 };\n        if (node && node.getParent()) {\n            scale = node.getParent().getAbsoluteScale();\n        }\n        var invertedScale = {\n            x: 1 / scale.x,\n            y: 1 / scale.y\n        };\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').each(function (node) {\n            return node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: _this.anchorStroke(),\n                strokeWidth: _this.anchorStrokeWidth(),\n                fill: _this.anchorFill(),\n                cornerRadius: _this.anchorCornerRadius()\n            });\n        });\n        this.findOne('.top-left').setAttrs({\n            x: -padding,\n            y: -padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n        });\n        this.findOne('.top-center').setAttrs({\n            x: width / 2,\n            y: -padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n        });\n        this.findOne('.top-right').setAttrs({\n            x: width + padding,\n            y: -padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n        });\n        this.findOne('.middle-left').setAttrs({\n            x: -padding,\n            y: height / 2,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n        });\n        this.findOne('.middle-right').setAttrs({\n            x: width + padding,\n            y: height / 2,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n        });\n        this.findOne('.bottom-left').setAttrs({\n            x: -padding,\n            y: height + padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n        });\n        this.findOne('.bottom-center').setAttrs({\n            x: width / 2,\n            y: height + padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n        });\n        this.findOne('.bottom-right').setAttrs({\n            x: width + padding,\n            y: height + padding,\n            scale: invertedScale,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n        });\n        var scaledRotateAnchorOffset = -this.rotateAnchorOffset() * Math.abs(invertedScale.y);\n        this.findOne('.rotater').setAttrs({\n            x: width / 2,\n            y: scaledRotateAnchorOffset * Util_1.Util._sign(height),\n            scale: invertedScale,\n            visible: this.rotateEnabled()\n        });\n        this.findOne('.back').setAttrs({\n            width: width * scale.x,\n            height: height * scale.y,\n            scale: invertedScale,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash()\n        });\n    };\n    Transformer.prototype.isTransforming = function () {\n        return this._transforming;\n    };\n    Transformer.prototype.stopTransform = function () {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    };\n    Transformer.prototype.destroy = function () {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content.style.cursor = '';\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    };\n    Transformer.prototype.toObject = function () {\n        return Node_1.Node.prototype.toObject.call(this);\n    };\n    return Transformer;\n}(Group_1.Group));\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors'\n});\nUtil_1.Collection.mapMethods(Transformer);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Shape","~$module$node_modules$konva$lib$Node","~$module$node_modules$konva$lib$shapes$Rect","~$module$node_modules$konva$lib$Group","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["_getNodeRect","width","sceneFunc","getWidth","skipShadow","toObject","_handleMouseDown","prototype","height","rotateHandlerOffset","_fitNodeInto","isTransforming","scale","lineEnabled","_createBack","cancelBubble","className","cornerRadius","x","__esModule","detach","_cursorChange","setNode","update","getNode","scaleX","name","sin","Transformer","stroke","value","getY","_node","visible","destroy","_createAnchor","dragDistance","listening","dash","_resetTransformCache","fill","_transforming","cursor","strokeWidth","getX","scaleY","rotation","getHeight","draggable","enabledHandlers","cos","evt","getRotation","_removeEvents","skipTransform","y","attachTo","__proto__","offsetX","_handleMouseUp","_createElements","__getNodeRect","forceUpdate","_handleMouseMove","offsetY","skipStroke","_movingAnchorName","stopTransform","constructor"]],"~:compiled-at",1568562085520,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$shapes$Transformer.js\",\n\"lineCount\":38,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/shapes/Transformer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$shapes$Transformer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"../Util\\\");\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Shape_1 = require(\\\"../Shape\\\");\\nvar Rect_1 = require(\\\"./Rect\\\");\\nvar Group_1 = require(\\\"../Group\\\");\\nvar Global_1 = require(\\\"../Global\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nvar Global_2 = require(\\\"../Global\\\");\\nvar EVENTS_NAME = 'tr-konva';\\nvar ATTR_CHANGE_LIST = [\\n    'resizeEnabledChange',\\n    'rotateAnchorOffsetChange',\\n    'rotateEnabledChange',\\n    'enabledAnchorsChange',\\n    'anchorSizeChange',\\n    'borderEnabledChange',\\n    'borderStrokeChange',\\n    'borderStrokeWidthChange',\\n    'borderDashChange',\\n    'anchorStrokeChange',\\n    'anchorStrokeWidthChange',\\n    'anchorFillChange',\\n    'anchorCornerRadiusChange',\\n    'ignoreStrokeChange'\\n]\\n    .map(function (e) { return e + (\\\".\\\" + EVENTS_NAME); })\\n    .join(' ');\\nvar NODE_RECT = 'nodeRect';\\nvar TRANSFORM_CHANGE_STR = [\\n    'widthChange',\\n    'heightChange',\\n    'scaleXChange',\\n    'scaleYChange',\\n    'skewXChange',\\n    'skewYChange',\\n    'rotationChange',\\n    'offsetXChange',\\n    'offsetYChange',\\n    'transformsEnabledChange',\\n    'strokeWidthChange'\\n]\\n    .map(function (e) { return e + (\\\".\\\" + EVENTS_NAME); })\\n    .join(' ');\\nvar ANGLES = {\\n    'top-left': -45,\\n    'top-center': 0,\\n    'top-right': 45,\\n    'middle-right': -90,\\n    'middle-left': 90,\\n    'bottom-left': -135,\\n    'bottom-center': 180,\\n    'bottom-right': 135\\n};\\nfunction getCursor(anchorName, rad, isMirrored) {\\n    if (anchorName === 'rotater') {\\n        return 'crosshair';\\n    }\\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\\n    if (isMirrored) {\\n        rad *= -1;\\n    }\\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\\n        return 'ns-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\\n        return 'nesw-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\\n        return 'ew-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\\n        return 'nwse-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\\n        return 'ns-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\\n        return 'nesw-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\\n        return 'ew-resize';\\n    }\\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\\n        return 'nwse-resize';\\n    }\\n    else {\\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\\n        return 'pointer';\\n    }\\n}\\nvar ANCHORS_NAMES = [\\n    'top-left',\\n    'top-center',\\n    'top-right',\\n    'middle-right',\\n    'middle-left',\\n    'bottom-left',\\n    'bottom-center',\\n    'bottom-right'\\n];\\nvar MAX_SAFE_INTEGER = 100000000;\\nvar Transformer = (function (_super) {\\n    __extends(Transformer, _super);\\n    function Transformer(config) {\\n        var _this = _super.call(this, config) || this;\\n        _this._transforming = false;\\n        _this._createElements();\\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\\n        _this.update = _this.update.bind(_this);\\n        _this.on(ATTR_CHANGE_LIST, _this.update);\\n        if (_this.getNode()) {\\n            _this.update();\\n        }\\n        return _this;\\n    }\\n    Transformer.prototype.attachTo = function (node) {\\n        this.setNode(node);\\n        return this;\\n    };\\n    Transformer.prototype.setNode = function (node) {\\n        var _this = this;\\n        if (this._node) {\\n            this.detach();\\n        }\\n        this._node = node;\\n        this._resetTransformCache();\\n        var additionalEvents = node._attrsAffectingSize\\n            .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\\n            .join(' ');\\n        var onChange = function () {\\n            _this._resetTransformCache();\\n            if (!_this._transforming) {\\n                _this.update();\\n            }\\n        };\\n        node.on(additionalEvents, onChange);\\n        node.on(TRANSFORM_CHANGE_STR, onChange);\\n        node.on(\\\"xChange.\\\" + EVENTS_NAME + \\\" yChange.\\\" + EVENTS_NAME, function () {\\n            return _this._resetTransformCache();\\n        });\\n        var elementsCreated = !!this.findOne('.top-left');\\n        if (elementsCreated) {\\n            this.update();\\n        }\\n        return this;\\n    };\\n    Transformer.prototype.getNode = function () {\\n        return this._node;\\n    };\\n    Transformer.prototype.detach = function () {\\n        if (this.getNode()) {\\n            this.getNode().off('.' + EVENTS_NAME);\\n            this._node = undefined;\\n        }\\n        this._resetTransformCache();\\n    };\\n    Transformer.prototype._resetTransformCache = function () {\\n        this._clearCache(NODE_RECT);\\n        this._clearCache('transform');\\n        this._clearSelfAndDescendantCache('absoluteTransform');\\n    };\\n    Transformer.prototype._getNodeRect = function () {\\n        return this._getCache(NODE_RECT, this.__getNodeRect);\\n    };\\n    Transformer.prototype.__getNodeRect = function () {\\n        var node = this.getNode();\\n        if (!node) {\\n            return {\\n                x: -MAX_SAFE_INTEGER,\\n                y: -MAX_SAFE_INTEGER,\\n                width: 0,\\n                height: 0,\\n                rotation: 0\\n            };\\n        }\\n        if (node.parent && this.parent && node.parent !== this.parent) {\\n            Util_1.Util.warn('Transformer and attached node have different parents. Konva does not support such case right now. Please move Transformer to the parent of attaching node.');\\n        }\\n        var rect = node.getClientRect({\\n            skipTransform: true,\\n            skipShadow: true,\\n            skipStroke: this.ignoreStroke()\\n        });\\n        var rotation = Global_1.Konva.getAngle(node.rotation());\\n        var dx = rect.x * node.scaleX() - node.offsetX() * node.scaleX();\\n        var dy = rect.y * node.scaleY() - node.offsetY() * node.scaleY();\\n        return {\\n            x: node.x() + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\\n            y: node.y() + dy * Math.cos(rotation) + dx * Math.sin(rotation),\\n            width: rect.width * node.scaleX(),\\n            height: rect.height * node.scaleY(),\\n            rotation: node.rotation()\\n        };\\n    };\\n    Transformer.prototype.getX = function () {\\n        return this._getNodeRect().x;\\n    };\\n    Transformer.prototype.getY = function () {\\n        return this._getNodeRect().y;\\n    };\\n    Transformer.prototype.getRotation = function () {\\n        return this._getNodeRect().rotation;\\n    };\\n    Transformer.prototype.getWidth = function () {\\n        return this._getNodeRect().width;\\n    };\\n    Transformer.prototype.getHeight = function () {\\n        return this._getNodeRect().height;\\n    };\\n    Transformer.prototype._createElements = function () {\\n        this._createBack();\\n        ANCHORS_NAMES.forEach(function (name) {\\n            this._createAnchor(name);\\n        }.bind(this));\\n        this._createAnchor('rotater');\\n    };\\n    Transformer.prototype._createAnchor = function (name) {\\n        var _this = this;\\n        var anchor = new Rect_1.Rect({\\n            stroke: 'rgb(0, 161, 255)',\\n            fill: 'white',\\n            strokeWidth: 1,\\n            name: name + ' _anchor',\\n            dragDistance: 0,\\n            draggable: true\\n        });\\n        var self = this;\\n        anchor.on('mousedown touchstart', function (e) {\\n            self._handleMouseDown(e);\\n        });\\n        anchor.on('dragstart', function (e) {\\n            e.cancelBubble = true;\\n        });\\n        anchor.on('dragmove', function (e) {\\n            e.cancelBubble = true;\\n        });\\n        anchor.on('dragend', function (e) {\\n            e.cancelBubble = true;\\n        });\\n        anchor.on('mouseenter', function () {\\n            var rad = Global_1.Konva.getAngle(_this.rotation());\\n            var scale = _this.getNode().getAbsoluteScale();\\n            var isMirrored = scale.y * scale.x < 0;\\n            var cursor = getCursor(name, rad, isMirrored);\\n            anchor.getStage().content.style.cursor = cursor;\\n            _this._cursorChange = true;\\n        });\\n        anchor.on('mouseout', function () {\\n            if (!anchor.getStage() || !anchor.getParent()) {\\n                return;\\n            }\\n            anchor.getStage().content.style.cursor = '';\\n            _this._cursorChange = false;\\n        });\\n        this.add(anchor);\\n    };\\n    Transformer.prototype._createBack = function () {\\n        var back = new Shape_1.Shape({\\n            name: 'back',\\n            width: 0,\\n            height: 0,\\n            listening: false,\\n            sceneFunc: function (ctx) {\\n                var tr = this.getParent();\\n                var padding = tr.padding();\\n                ctx.beginPath();\\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\\n                ctx.moveTo(this.width() / 2, -padding);\\n                if (tr.rotateEnabled()) {\\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()));\\n                }\\n                ctx.fillStrokeShape(this);\\n            }\\n        });\\n        this.add(back);\\n    };\\n    Transformer.prototype._handleMouseDown = function (e) {\\n        this._movingAnchorName = e.target.name().split(' ')[0];\\n        var attrs = this._getNodeRect();\\n        var width = attrs.width;\\n        var height = attrs.height;\\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\\n        this.sin = Math.abs(height / hypotenuse);\\n        this.cos = Math.abs(width / hypotenuse);\\n        window.addEventListener('mousemove', this._handleMouseMove);\\n        window.addEventListener('touchmove', this._handleMouseMove);\\n        window.addEventListener('mouseup', this._handleMouseUp, true);\\n        window.addEventListener('touchend', this._handleMouseUp, true);\\n        this._transforming = true;\\n        this._fire('transformstart', { evt: e });\\n        this.getNode()._fire('transformstart', { evt: e });\\n    };\\n    Transformer.prototype._handleMouseMove = function (e) {\\n        var x, y, newHypotenuse;\\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\\n        var stage = anchorNode.getStage();\\n        var box = stage.getContent().getBoundingClientRect();\\n        var zeroPoint = {\\n            x: box.left,\\n            y: box.top\\n        };\\n        var pointerPos = {\\n            left: e.clientX !== undefined ? e.clientX : e.touches[0].clientX,\\n            top: e.clientX !== undefined ? e.clientY : e.touches[0].clientY\\n        };\\n        var newAbsPos = {\\n            x: pointerPos.left - zeroPoint.x,\\n            y: pointerPos.top - zeroPoint.y\\n        };\\n        anchorNode.setAbsolutePosition(newAbsPos);\\n        var keepProportion = this.keepRatio() || e.shiftKey;\\n        if (this._movingAnchorName === 'top-left') {\\n            if (keepProportion) {\\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-right').x() - anchorNode.x(), 2) +\\n                    Math.pow(this.findOne('.bottom-right').y() - anchorNode.y(), 2));\\n                var reverseX = this.findOne('.top-left').x() > this.findOne('.bottom-right').x()\\n                    ? -1\\n                    : 1;\\n                var reverseY = this.findOne('.top-left').y() > this.findOne('.bottom-right').y()\\n                    ? -1\\n                    : 1;\\n                x = newHypotenuse * this.cos * reverseX;\\n                y = newHypotenuse * this.sin * reverseY;\\n                this.findOne('.top-left').x(this.findOne('.bottom-right').x() - x);\\n                this.findOne('.top-left').y(this.findOne('.bottom-right').y() - y);\\n            }\\n        }\\n        else if (this._movingAnchorName === 'top-center') {\\n            this.findOne('.top-left').y(anchorNode.y());\\n        }\\n        else if (this._movingAnchorName === 'top-right') {\\n            if (keepProportion) {\\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-left').x() - anchorNode.x(), 2) +\\n                    Math.pow(this.findOne('.bottom-left').y() - anchorNode.y(), 2));\\n                var reverseX = this.findOne('.top-right').x() < this.findOne('.top-left').x()\\n                    ? -1\\n                    : 1;\\n                var reverseY = this.findOne('.top-right').y() > this.findOne('.bottom-left').y()\\n                    ? -1\\n                    : 1;\\n                x = newHypotenuse * this.cos * reverseX;\\n                y = newHypotenuse * this.sin * reverseY;\\n                this.findOne('.top-right').x(x);\\n                this.findOne('.top-right').y(this.findOne('.bottom-left').y() - y);\\n            }\\n            var pos = anchorNode.position();\\n            this.findOne('.top-left').y(pos.y);\\n            this.findOne('.bottom-right').x(pos.x);\\n        }\\n        else if (this._movingAnchorName === 'middle-left') {\\n            this.findOne('.top-left').x(anchorNode.x());\\n        }\\n        else if (this._movingAnchorName === 'middle-right') {\\n            this.findOne('.bottom-right').x(anchorNode.x());\\n        }\\n        else if (this._movingAnchorName === 'bottom-left') {\\n            if (keepProportion) {\\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.top-right').x() - anchorNode.x(), 2) +\\n                    Math.pow(this.findOne('.top-right').y() - anchorNode.y(), 2));\\n                var reverseX = this.findOne('.top-right').x() < this.findOne('.bottom-left').x()\\n                    ? -1\\n                    : 1;\\n                var reverseY = this.findOne('.bottom-right').y() < this.findOne('.top-left').y()\\n                    ? -1\\n                    : 1;\\n                x = newHypotenuse * this.cos * reverseX;\\n                y = newHypotenuse * this.sin * reverseY;\\n                this.findOne('.bottom-left').x(this.findOne('.top-right').x() - x);\\n                this.findOne('.bottom-left').y(y);\\n            }\\n            pos = anchorNode.position();\\n            this.findOne('.top-left').x(pos.x);\\n            this.findOne('.bottom-right').y(pos.y);\\n        }\\n        else if (this._movingAnchorName === 'bottom-center') {\\n            this.findOne('.bottom-right').y(anchorNode.y());\\n        }\\n        else if (this._movingAnchorName === 'bottom-right') {\\n            if (keepProportion) {\\n                newHypotenuse = Math.sqrt(Math.pow(this.findOne('.bottom-right').x(), 2) +\\n                    Math.pow(this.findOne('.bottom-right').y(), 2));\\n                var reverseX = this.findOne('.top-left').x() > this.findOne('.bottom-right').x()\\n                    ? -1\\n                    : 1;\\n                var reverseY = this.findOne('.top-left').y() > this.findOne('.bottom-right').y()\\n                    ? -1\\n                    : 1;\\n                x = newHypotenuse * this.cos * reverseX;\\n                y = newHypotenuse * this.sin * reverseY;\\n                this.findOne('.bottom-right').x(x);\\n                this.findOne('.bottom-right').y(y);\\n            }\\n        }\\n        else if (this._movingAnchorName === 'rotater') {\\n            var padding = this.padding();\\n            var attrs = this._getNodeRect();\\n            x = anchorNode.x() - attrs.width / 2;\\n            y = -anchorNode.y() + attrs.height / 2;\\n            var dAlpha = Math.atan2(-y, x) + Math.PI / 2;\\n            if (attrs.height < 0) {\\n                dAlpha -= Math.PI;\\n            }\\n            var rot = Global_1.Konva.getAngle(this.rotation());\\n            var newRotation = Util_1.Util._radToDeg(rot) + Util_1.Util._radToDeg(dAlpha);\\n            var alpha = Global_1.Konva.getAngle(this.getNode().rotation());\\n            var newAlpha = Util_1.Util._degToRad(newRotation);\\n            var snaps = this.rotationSnaps();\\n            var offset = 0.1;\\n            for (var i = 0; i < snaps.length; i++) {\\n                var angle = Global_1.Konva.getAngle(snaps[i]);\\n                var dif = Math.abs(angle - Util_1.Util._degToRad(newRotation)) % (Math.PI * 2);\\n                if (dif < offset) {\\n                    newRotation = Util_1.Util._radToDeg(angle);\\n                    newAlpha = Util_1.Util._degToRad(newRotation);\\n                }\\n            }\\n            var dx = padding;\\n            var dy = padding;\\n            this._fitNodeInto({\\n                rotation: Global_1.Konva.angleDeg ? newRotation : Util_1.Util._degToRad(newRotation),\\n                x: attrs.x +\\n                    (attrs.width / 2 + padding) *\\n                        (Math.cos(alpha) - Math.cos(newAlpha)) +\\n                    (attrs.height / 2 + padding) *\\n                        (Math.sin(-alpha) - Math.sin(-newAlpha)) -\\n                    (dx * Math.cos(rot) + dy * Math.sin(-rot)),\\n                y: attrs.y +\\n                    (attrs.height / 2 + padding) *\\n                        (Math.cos(alpha) - Math.cos(newAlpha)) +\\n                    (attrs.width / 2 + padding) *\\n                        (Math.sin(alpha) - Math.sin(newAlpha)) -\\n                    (dy * Math.cos(rot) + dx * Math.sin(rot)),\\n                width: attrs.width + padding * 2,\\n                height: attrs.height + padding * 2\\n            }, e);\\n        }\\n        else {\\n            console.error(new Error('Wrong position argument of selection resizer: ' +\\n                this._movingAnchorName));\\n        }\\n        if (this._movingAnchorName === 'rotater') {\\n            return;\\n        }\\n        var absPos = this.findOne('.top-left').getAbsolutePosition(this.getParent());\\n        var centeredScaling = this.centeredScaling() || e.altKey;\\n        if (centeredScaling) {\\n            var topLeft = this.findOne('.top-left');\\n            var bottomRight = this.findOne('.bottom-right');\\n            var topOffsetX = topLeft.x();\\n            var topOffsetY = topLeft.y();\\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\\n            bottomRight.move({\\n                x: -topOffsetX,\\n                y: -topOffsetY\\n            });\\n            topLeft.move({\\n                x: bottomOffsetX,\\n                y: bottomOffsetY\\n            });\\n            absPos = topLeft.getAbsolutePosition(this.getParent());\\n        }\\n        x = absPos.x;\\n        y = absPos.y;\\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\\n        this._fitNodeInto({\\n            x: x + this.offsetX(),\\n            y: y + this.offsetY(),\\n            width: width,\\n            height: height\\n        }, e);\\n    };\\n    Transformer.prototype._handleMouseUp = function (e) {\\n        this._removeEvents(e);\\n    };\\n    Transformer.prototype._removeEvents = function (e) {\\n        if (this._transforming) {\\n            this._transforming = false;\\n            window.removeEventListener('mousemove', this._handleMouseMove);\\n            window.removeEventListener('touchmove', this._handleMouseMove);\\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\\n            window.removeEventListener('touchend', this._handleMouseUp, true);\\n            this._fire('transformend', { evt: e });\\n            var node = this.getNode();\\n            if (node) {\\n                node.fire('transformend', { evt: e });\\n            }\\n        }\\n    };\\n    Transformer.prototype._fitNodeInto = function (newAttrs, evt) {\\n        var boundBoxFunc = this.boundBoxFunc();\\n        if (boundBoxFunc) {\\n            var oldAttrs = this._getNodeRect();\\n            newAttrs = boundBoxFunc.call(this, oldAttrs, newAttrs);\\n        }\\n        var node = this.getNode();\\n        if (newAttrs.rotation !== undefined) {\\n            this.getNode().rotation(newAttrs.rotation);\\n        }\\n        var pure = node.getClientRect({\\n            skipTransform: true,\\n            skipShadow: true,\\n            skipStroke: this.ignoreStroke()\\n        });\\n        var padding = this.padding();\\n        var scaleX = (newAttrs.width - padding * 2) / pure.width;\\n        var scaleY = (newAttrs.height - padding * 2) / pure.height;\\n        var rotation = Global_1.Konva.getAngle(node.rotation());\\n        var dx = pure.x * scaleX - padding - node.offsetX() * scaleX;\\n        var dy = pure.y * scaleY - padding - node.offsetY() * scaleY;\\n        this.getNode().setAttrs({\\n            scaleX: scaleX,\\n            scaleY: scaleY,\\n            x: newAttrs.x - (dx * Math.cos(rotation) + dy * Math.sin(-rotation)),\\n            y: newAttrs.y - (dy * Math.cos(rotation) + dx * Math.sin(rotation))\\n        });\\n        this._fire('transform', { evt: evt });\\n        this.getNode()._fire('transform', { evt: evt });\\n        this.update();\\n        this.getLayer().batchDraw();\\n    };\\n    Transformer.prototype.forceUpdate = function () {\\n        this._resetTransformCache();\\n        this.update();\\n    };\\n    Transformer.prototype.update = function () {\\n        var _this = this;\\n        var attrs = this._getNodeRect();\\n        var node = this.getNode();\\n        var scale = { x: 1, y: 1 };\\n        if (node && node.getParent()) {\\n            scale = node.getParent().getAbsoluteScale();\\n        }\\n        var invertedScale = {\\n            x: 1 / scale.x,\\n            y: 1 / scale.y\\n        };\\n        var width = attrs.width;\\n        var height = attrs.height;\\n        var enabledAnchors = this.enabledAnchors();\\n        var resizeEnabled = this.resizeEnabled();\\n        var padding = this.padding();\\n        var anchorSize = this.anchorSize();\\n        this.find('._anchor').each(function (node) {\\n            return node.setAttrs({\\n                width: anchorSize,\\n                height: anchorSize,\\n                offsetX: anchorSize / 2,\\n                offsetY: anchorSize / 2,\\n                stroke: _this.anchorStroke(),\\n                strokeWidth: _this.anchorStrokeWidth(),\\n                fill: _this.anchorFill(),\\n                cornerRadius: _this.anchorCornerRadius()\\n            });\\n        });\\n        this.findOne('.top-left').setAttrs({\\n            x: -padding,\\n            y: -padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\\n        });\\n        this.findOne('.top-center').setAttrs({\\n            x: width / 2,\\n            y: -padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\\n        });\\n        this.findOne('.top-right').setAttrs({\\n            x: width + padding,\\n            y: -padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\\n        });\\n        this.findOne('.middle-left').setAttrs({\\n            x: -padding,\\n            y: height / 2,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\\n        });\\n        this.findOne('.middle-right').setAttrs({\\n            x: width + padding,\\n            y: height / 2,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\\n        });\\n        this.findOne('.bottom-left').setAttrs({\\n            x: -padding,\\n            y: height + padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\\n        });\\n        this.findOne('.bottom-center').setAttrs({\\n            x: width / 2,\\n            y: height + padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\\n        });\\n        this.findOne('.bottom-right').setAttrs({\\n            x: width + padding,\\n            y: height + padding,\\n            scale: invertedScale,\\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\\n        });\\n        var scaledRotateAnchorOffset = -this.rotateAnchorOffset() * Math.abs(invertedScale.y);\\n        this.findOne('.rotater').setAttrs({\\n            x: width / 2,\\n            y: scaledRotateAnchorOffset * Util_1.Util._sign(height),\\n            scale: invertedScale,\\n            visible: this.rotateEnabled()\\n        });\\n        this.findOne('.back').setAttrs({\\n            width: width * scale.x,\\n            height: height * scale.y,\\n            scale: invertedScale,\\n            visible: this.borderEnabled(),\\n            stroke: this.borderStroke(),\\n            strokeWidth: this.borderStrokeWidth(),\\n            dash: this.borderDash()\\n        });\\n    };\\n    Transformer.prototype.isTransforming = function () {\\n        return this._transforming;\\n    };\\n    Transformer.prototype.stopTransform = function () {\\n        if (this._transforming) {\\n            this._removeEvents();\\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\\n            if (anchorNode) {\\n                anchorNode.stopDrag();\\n            }\\n        }\\n    };\\n    Transformer.prototype.destroy = function () {\\n        if (this.getStage() && this._cursorChange) {\\n            this.getStage().content.style.cursor = '';\\n        }\\n        Group_1.Group.prototype.destroy.call(this);\\n        this.detach();\\n        this._removeEvents();\\n        return this;\\n    };\\n    Transformer.prototype.toObject = function () {\\n        return Node_1.Node.prototype.toObject.call(this);\\n    };\\n    return Transformer;\\n}(Group_1.Group));\\nexports.Transformer = Transformer;\\nfunction validateAnchors(val) {\\n    if (!(val instanceof Array)) {\\n        Util_1.Util.warn('enabledAnchors value should be an array');\\n    }\\n    if (val instanceof Array) {\\n        val.forEach(function (name) {\\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\\n                Util_1.Util.warn('Unknown anchor name: ' +\\n                    name +\\n                    '. Available names are: ' +\\n                    ANCHORS_NAMES.join(', '));\\n            }\\n        });\\n    }\\n    return val || [];\\n}\\nTransformer.prototype.className = 'Transformer';\\nGlobal_2._registerNode(Transformer);\\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\\nFactory_1.Factory.backCompat(Transformer, {\\n    lineEnabled: 'borderEnabled',\\n    rotateHandlerOffset: 'rotateAnchorOffset',\\n    enabledHandlers: 'enabledAnchors'\\n});\\nUtil_1.Collection.mapMethods(Transformer);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getCursor\",\"anchorName\",\"rad\",\"isMirrored\",\"Util_1\",\"Util\",\"_degToRad\",\"ANGLES\",\"angle\",\"_radToDeg\",\"_inRange\",\"error\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Shape_1\",\"Rect_1\",\"Group_1\",\"Global_1\",\"Validators_1\",\"Global_2\",\"ATTR_CHANGE_LIST\",\"map\",\"e\",\"join\",\"TRANSFORM_CHANGE_STR\",\"ANCHORS_NAMES\",\"Transformer\",\"_super\",\"config\",\"_this\",\"call\",\"_transforming\",\"_createElements\",\"_handleMouseMove\",\"bind\",\"_handleMouseUp\",\"update\",\"on\",\"getNode\",\"attachTo\",\"Transformer.prototype.attachTo\",\"node\",\"setNode\",\"Transformer.prototype.setNode\",\"_node\",\"detach\",\"_resetTransformCache\",\"additionalEvents\",\"_attrsAffectingSize\",\"prop\",\"onChange\",\"findOne\",\"elementsCreated\",\"Transformer.prototype.getNode\",\"Transformer.prototype.detach\",\"off\",\"undefined\",\"Transformer.prototype._resetTransformCache\",\"_clearCache\",\"NODE_RECT\",\"_clearSelfAndDescendantCache\",\"_getNodeRect\",\"Transformer.prototype._getNodeRect\",\"_getCache\",\"__getNodeRect\",\"Transformer.prototype.__getNodeRect\",\"x\",\"y\",\"width\",\"height\",\"rotation\",\"parent\",\"warn\",\"rect\",\"getClientRect\",\"skipTransform\",\"skipShadow\",\"skipStroke\",\"ignoreStroke\",\"Konva\",\"getAngle\",\"dx\",\"scaleX\",\"offsetX\",\"dy\",\"scaleY\",\"offsetY\",\"Math\",\"cos\",\"sin\",\"getX\",\"Transformer.prototype.getX\",\"getY\",\"Transformer.prototype.getY\",\"getRotation\",\"Transformer.prototype.getRotation\",\"getWidth\",\"Transformer.prototype.getWidth\",\"getHeight\",\"Transformer.prototype.getHeight\",\"Transformer.prototype._createElements\",\"_createBack\",\"forEach\",\"name\",\"_createAnchor\",\"Transformer.prototype._createAnchor\",\"anchor\",\"Rect\",\"stroke\",\"fill\",\"strokeWidth\",\"dragDistance\",\"draggable\",\"self\",\"_handleMouseDown\",\"cancelBubble\",\"scale\",\"getAbsoluteScale\",\"cursor\",\"getStage\",\"content\",\"style\",\"_cursorChange\",\"getParent\",\"add\",\"Transformer.prototype._createBack\",\"back\",\"Shape\",\"listening\",\"sceneFunc\",\"ctx\",\"tr\",\"padding\",\"beginPath\",\"moveTo\",\"rotateEnabled\",\"lineTo\",\"rotateAnchorOffset\",\"_sign\",\"fillStrokeShape\",\"Transformer.prototype._handleMouseDown\",\"_movingAnchorName\",\"target\",\"split\",\"attrs\",\"hypotenuse\",\"sqrt\",\"pow\",\"abs\",\"window\",\"addEventListener\",\"_fire\",\"evt\",\"Transformer.prototype._handleMouseMove\",\"anchorNode\",\"box\",\"stage\",\"getContent\",\"getBoundingClientRect\",\"setAbsolutePosition\",\"newAbsPos\",\"left\",\"clientX\",\"touches\",\"top\",\"clientY\",\"keepProportion\",\"keepRatio\",\"shiftKey\",\"newHypotenuse\",\"reverseX\",\"reverseY\",\"pos\",\"position\",\"dAlpha\",\"atan2\",\"PI\",\"rot\",\"newRotation\",\"alpha\",\"newAlpha\",\"snaps\",\"rotationSnaps\",\"i\",\"length\",\"offset\",\"_fitNodeInto\",\"angleDeg\",\"console\",\"Error\",\"absPos\",\"getAbsolutePosition\",\"centeredScaling\",\"altKey\",\"topLeft\",\"bottomRight\",\"topOffsetX\",\"topOffsetY\",\"bottomOffsetX\",\"bottomOffsetY\",\"move\",\"Transformer.prototype._handleMouseUp\",\"_removeEvents\",\"Transformer.prototype._removeEvents\",\"removeEventListener\",\"fire\",\"Transformer.prototype._fitNodeInto\",\"newAttrs\",\"boundBoxFunc\",\"oldAttrs\",\"pure\",\"setAttrs\",\"getLayer\",\"batchDraw\",\"forceUpdate\",\"Transformer.prototype.forceUpdate\",\"Transformer.prototype.update\",\"invertedScale\",\"enabledAnchors\",\"resizeEnabled\",\"anchorSize\",\"find\",\"each\",\"anchorStroke\",\"anchorStrokeWidth\",\"anchorFill\",\"cornerRadius\",\"anchorCornerRadius\",\"visible\",\"indexOf\",\"scaledRotateAnchorOffset\",\"borderEnabled\",\"borderStroke\",\"borderStrokeWidth\",\"dash\",\"borderDash\",\"isTransforming\",\"Transformer.prototype.isTransforming\",\"stopTransform\",\"Transformer.prototype.stopTransform\",\"stopDrag\",\"destroy\",\"Transformer.prototype.destroy\",\"Group\",\"toObject\",\"Transformer.prototype.toObject\",\"Node\",\"className\",\"_registerNode\",\"Factory\",\"addGetterSetter\",\"validateAnchors\",\"val\",\"getNumberValidator\",\"backCompat\",\"lineEnabled\",\"rotateHandlerOffset\",\"enabledHandlers\",\"Collection\",\"mapMethods\"]\n}\n"]