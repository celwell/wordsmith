["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/RGBA.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$RGBA=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");require=require(\"module$node_modules$konva$lib$Validators\");exports.RGBA=function(imageData){imageData=imageData.data;var nPixels=imageData.length,red=this.red(),green=this.green(),blue=this.blue(),alpha=this.alpha(),i;for(i=0;i<nPixels;i+=\n4){var ia=1-alpha;imageData[i]=red*alpha+imageData[i]*ia;imageData[i+1]=green*alpha+imageData[i+1]*ia;imageData[i+2]=blue*alpha+imageData[i+2]*ia}};global.Factory.addGetterSetter(module.Node,\"red\",0,function(val){this._filterUpToDate=!1;return 255<val?255:0>val?0:Math.round(val)});global.Factory.addGetterSetter(module.Node,\"green\",0,function(val){this._filterUpToDate=!1;return 255<val?255:0>val?0:Math.round(val)});global.Factory.addGetterSetter(module.Node,\"blue\",0,require.RGBComponent,global.Factory.afterSetFilter);\nglobal.Factory.addGetterSetter(module.Node,\"alpha\",1,function(val){this._filterUpToDate=!1;return 1<val?1:0>val?0:val})}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$RGBA\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","value","RGBA","_filterUpToDate"]],"~:compiled-at",1568562085609,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$RGBA.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvGC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAYN,OAAA,CAAQ,uCAAR,CACZO,OAAAA,CAASP,OAAA,CAAQ,oCAAR,CACTQ,QAAAA,CAAeR,OAAA,CAAQ,0CAAR,CACnBE,QAAAO,KAAA,CAAeC,QAAS,CAACC,SAAD,CAAY,CAC5BC,SAAAA,CAAOD,SAAAC,KADqB,KACLC,QAAUD,SAAAE,OADL,CACkBC,IAAM,IAAAA,IAAA,EADxB,CACoCC,MAAQ,IAAAA,MAAA,EAD5C,CAC0DC,KAAO,IAAAA,KAAA,EADjE,CAC8EC,MAAQ,IAAAA,MAAA,EADtF,CACoGC,CACpI,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBN,OAAhB,CAAyBM,CAAzB;AAA8B,CAA9B,CAAiC,CAC7B,IAAAC,GAAK,CAALA,CAASF,KACTN,UAAA,CAAKO,CAAL,CAAA,CAAUJ,GAAV,CAAgBG,KAAhB,CAAwBN,SAAA,CAAKO,CAAL,CAAxB,CAAkCC,EAClCR,UAAA,CAAKO,CAAL,CAAS,CAAT,CAAA,CAAcH,KAAd,CAAsBE,KAAtB,CAA8BN,SAAA,CAAKO,CAAL,CAAS,CAAT,CAA9B,CAA4CC,EAC5CR,UAAA,CAAKO,CAAL,CAAS,CAAT,CAAA,CAAcF,IAAd,CAAqBC,KAArB,CAA6BN,SAAA,CAAKO,CAAL,CAAS,CAAT,CAA7B,CAA2CC,EAJd,CAFD,CASpCd,OAAAe,QAAAC,gBAAA,CAAkCf,MAAAgB,KAAlC,CAA+C,KAA/C,CAAsD,CAAtD,CAAyD,QAAS,CAACC,GAAD,CAAM,CACpE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,GAAJ,CACW,GADX,CAGe,CAAV,CAAIA,GAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,GAAX,CATyD,CAAxE,CAYAlB,OAAAe,QAAAC,gBAAA,CAAkCf,MAAAgB,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,GAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,GAAJ,CACW,GADX,CAGe,CAAV,CAAIA,GAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,GAAX,CAT2D,CAA1E,CAYAlB,OAAAe,QAAAC,gBAAA,CAAkCf,MAAAgB,KAAlC,CAA+C,MAA/C,CAAuD,CAAvD,CAA0Df,OAAAoB,aAA1D,CAAqFtB,MAAAe,QAAAQ,eAArF,CACAvB;MAAAe,QAAAC,gBAAA,CAAkCf,MAAAgB,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,GAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,EAAV,CAAID,GAAJ,CACW,CADX,CAGe,CAAV,CAAIA,GAAJ,CACM,CADN,CAIMA,GAT2D,CAA1E,CAxCuG;\",\n\"sources\":[\"node_modules/konva/lib/filters/RGBA.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$RGBA\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.RGBA = function (imageData) {\\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\\n    for (i = 0; i < nPixels; i += 4) {\\n        ia = 1 - alpha;\\n        data[i] = red * alpha + data[i] * ia;\\n        data[i + 1] = green * alpha + data[i + 1] * ia;\\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 1) {\\n        return 1;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return val;\\n    }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"RGBA\",\"exports.RGBA\",\"imageData\",\"data\",\"nPixels\",\"length\",\"red\",\"green\",\"blue\",\"alpha\",\"i\",\"ia\",\"Factory\",\"addGetterSetter\",\"Node\",\"val\",\"_filterUpToDate\",\"Math\",\"round\",\"RGBComponent\",\"afterSetFilter\"]\n}\n"]