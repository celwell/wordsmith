["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Emboss.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$Emboss=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");var Util_1=require(\"module$node_modules$konva$lib$Util\");require=require(\"module$node_modules$konva$lib$Validators\");exports.Emboss=function(imageData){var strength=10*this.embossStrength(),greyLevel=255*this.embossWhiteLevel(),direction=\nthis.embossDirection(),blend=this.embossBlend(),dirY=0,dirX=0,data=imageData.data,w=imageData.width;imageData=imageData.height;var w4=4*w,y=imageData;switch(direction){case \"top-left\":dirX=dirY=-1;break;case \"top\":dirY=-1;dirX=0;break;case \"top-right\":dirY=-1;dirX=1;break;case \"right\":dirY=0;dirX=1;break;case \"bottom-right\":dirX=dirY=1;break;case \"bottom\":dirY=1;dirX=0;break;case \"bottom-left\":dirY=1;dirX=-1;break;case \"left\":dirY=0;dirX=-1;break;default:Util_1.Util.error(\"Unknown emboss direction: \"+\ndirection)}do{direction=(y-1)*w4;var otherY=dirY;1>y+otherY&&(otherY=0);y+otherY>imageData&&(otherY=0);otherY=(y-1+otherY)*w*4;var x=w;do{var offset=direction+4*(x-1),otherX=dirX;1>x+otherX&&(otherX=0);x+otherX>w&&(otherX=0);otherX=otherY+4*(x-1+otherX);var dG=data[offset+1]-data[otherX+1],dB=data[offset+2]-data[otherX+2];otherX=data[offset]-data[otherX];var absDif=0<otherX?otherX:-otherX,absB=0<dB?dB:-dB;(0<dG?dG:-dG)>absDif&&(otherX=dG);absB>absDif&&(otherX=dB);otherX*=strength;blend?(dG=data[offset]+\notherX,dB=data[offset+1]+otherX,otherX=data[offset+2]+otherX,data[offset]=255<dG?255:0>dG?0:dG,data[offset+1]=255<dB?255:0>dB?0:dB,data[offset+2]=255<otherX?255:0>otherX?0:otherX):(otherX=greyLevel-otherX,0>otherX?otherX=0:255<otherX&&(otherX=255),data[offset]=data[offset+1]=data[offset+2]=otherX)}while(--x)}while(--y)};global.Factory.addGetterSetter(module.Node,\"embossStrength\",.5,require.getNumberValidator(),global.Factory.afterSetFilter);global.Factory.addGetterSetter(module.Node,\"embossWhiteLevel\",\n.5,require.getNumberValidator(),global.Factory.afterSetFilter);global.Factory.addGetterSetter(module.Node,\"embossDirection\",\"top-left\",null,global.Factory.afterSetFilter);global.Factory.addGetterSetter(module.Node,\"embossBlend\",!1,null,global.Factory.afterSetFilter)}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$Emboss\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Util_1 = require(\"../Util\");\nvar Validators_1 = require(\"../Validators\");\nexports.Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["__esModule","value","Emboss"]],"~:compiled-at",1589754192569,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Emboss.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/filters/Emboss.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$Emboss\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Util_1 = require(\\\"../Util\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.Emboss = function (imageData) {\\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\\n    switch (direction) {\\n        case 'top-left':\\n            dirY = -1;\\n            dirX = -1;\\n            break;\\n        case 'top':\\n            dirY = -1;\\n            dirX = 0;\\n            break;\\n        case 'top-right':\\n            dirY = -1;\\n            dirX = 1;\\n            break;\\n        case 'right':\\n            dirY = 0;\\n            dirX = 1;\\n            break;\\n        case 'bottom-right':\\n            dirY = 1;\\n            dirX = 1;\\n            break;\\n        case 'bottom':\\n            dirY = 1;\\n            dirX = 0;\\n            break;\\n        case 'bottom-left':\\n            dirY = 1;\\n            dirX = -1;\\n            break;\\n        case 'left':\\n            dirY = 0;\\n            dirX = -1;\\n            break;\\n        default:\\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\\n    }\\n    do {\\n        var offsetY = (y - 1) * w4;\\n        var otherY = dirY;\\n        if (y + otherY < 1) {\\n            otherY = 0;\\n        }\\n        if (y + otherY > h) {\\n            otherY = 0;\\n        }\\n        var offsetYOther = (y - 1 + otherY) * w * 4;\\n        var x = w;\\n        do {\\n            var offset = offsetY + (x - 1) * 4;\\n            var otherX = dirX;\\n            if (x + otherX < 1) {\\n                otherX = 0;\\n            }\\n            if (x + otherX > w) {\\n                otherX = 0;\\n            }\\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\\n            var dR = data[offset] - data[offsetOther];\\n            var dG = data[offset + 1] - data[offsetOther + 1];\\n            var dB = data[offset + 2] - data[offsetOther + 2];\\n            var dif = dR;\\n            var absDif = dif > 0 ? dif : -dif;\\n            var absG = dG > 0 ? dG : -dG;\\n            var absB = dB > 0 ? dB : -dB;\\n            if (absG > absDif) {\\n                dif = dG;\\n            }\\n            if (absB > absDif) {\\n                dif = dB;\\n            }\\n            dif *= strength;\\n            if (blend) {\\n                var r = data[offset] + dif;\\n                var g = data[offset + 1] + dif;\\n                var b = data[offset + 2] + dif;\\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\\n            }\\n            else {\\n                var grey = greyLevel - dif;\\n                if (grey < 0) {\\n                    grey = 0;\\n                }\\n                else if (grey > 255) {\\n                    grey = 255;\\n                }\\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\\n            }\\n        } while (--x);\\n    } while (--y);\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Util_1\",\"Validators_1\",\"Emboss\",\"exports.Emboss\",\"imageData\",\"strength\",\"embossStrength\",\"greyLevel\",\"embossWhiteLevel\",\"direction\",\"embossDirection\",\"blend\",\"embossBlend\",\"dirY\",\"dirX\",\"data\",\"w\",\"width\",\"h\",\"height\",\"w4\",\"y\",\"Util\",\"error\",\"offsetY\",\"otherY\",\"offsetYOther\",\"x\",\"offset\",\"otherX\",\"offsetOther\",\"dG\",\"dB\",\"dif\",\"absDif\",\"absB\",\"absG\",\"r\",\"g\",\"b\",\"grey\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]