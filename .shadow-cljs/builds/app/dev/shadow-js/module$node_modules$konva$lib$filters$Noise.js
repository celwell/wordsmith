["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Noise.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$Noise=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");require=require(\"module$node_modules$konva$lib$Validators\");exports.Noise=function(imageData){var amount=255*this.noise();imageData=imageData.data;var nPixels=imageData.length;amount/=2;var i;for(i=0;i<nPixels;i+=4)imageData[i+0]+=amount-\n2*amount*Math.random(),imageData[i+1]+=amount-2*amount*Math.random(),imageData[i+2]+=amount-2*amount*Math.random()};global.Factory.addGetterSetter(module.Node,\"noise\",.2,require.getNumberValidator(),global.Factory.afterSetFilter)}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$Noise\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.Noise = function (imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for (i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","value","Noise"]],"~:compiled-at",1568562085604,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Noise.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAExGC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAYN,OAAA,CAAQ,uCAAR,CACZO,OAAAA,CAASP,OAAA,CAAQ,oCAAR,CACTQ,QAAAA,CAAeR,OAAA,CAAQ,0CAAR,CACnBE,QAAAO,MAAA,CAAgBC,QAAS,CAACC,SAAD,CAAY,CAAA,IAC7BC,OAAwB,GAAxBA,CAAS,IAAAC,MAAA,EAAoBC,UAAAA,CAAOH,SAAAG,KADP,KACuBC,QAAUD,SAAAE,OAAoBJ,OAAPK,EAAgB,CAA/F,KAAkGC,CAClG,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBH,OAAhB,CAAyBG,CAAzB,EAA8B,CAA9B,CACIJ,SAAA,CAAKI,CAAL,CAAS,CAAT,CAEA,EAFeD,MAEf;AAFsB,CAEtB,CAF0BA,MAE1B,CAFiCE,IAAAC,OAAA,EAEjC,CADAN,SAAA,CAAKI,CAAL,CAAS,CAAT,CACA,EADeD,MACf,CADsB,CACtB,CAD0BA,MAC1B,CADiCE,IAAAC,OAAA,EACjC,CAAAN,SAAA,CAAKI,CAAL,CAAS,CAAT,CAAA,EAAeD,MAAf,CAAsB,CAAtB,CAA0BA,MAA1B,CAAiCE,IAAAC,OAAA,EALJ,CAQrCd,OAAAe,QAAAC,gBAAA,CAAkCf,MAAAgB,KAAlC,CAA+C,OAA/C,CAAwD,EAAxD,CAA6Df,OAAAgB,mBAAA,EAA7D,CAAgGlB,MAAAe,QAAAI,eAAhG,CAdwG;\",\n\"sources\":[\"node_modules/konva/lib/filters/Noise.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$Noise\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.Noise = function (imageData) {\\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\\n    for (i = 0; i < nPixels; i += 4) {\\n        data[i + 0] += half - 2 * half * Math.random();\\n        data[i + 1] += half - 2 * half * Math.random();\\n        data[i + 2] += half - 2 * half * Math.random();\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"Noise\",\"exports.Noise\",\"imageData\",\"amount\",\"noise\",\"data\",\"nPixels\",\"length\",\"half\",\"i\",\"Math\",\"random\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]