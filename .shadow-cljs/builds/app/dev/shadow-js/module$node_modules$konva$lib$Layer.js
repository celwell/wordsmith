["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/Layer.js"],"~:js","shadow$provide.module$node_modules$konva$lib$Layer=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):\n(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,\"__esModule\",{value:!0});var Util_1=require(\"module$node_modules$konva$lib$Util\"),Container_1=require(\"module$node_modules$konva$lib$Container\");global=require(\"module$node_modules$konva$lib$Factory\");var BaseLayer_1=require(\"module$node_modules$konva$lib$BaseLayer\"),Canvas_1=require(\"module$node_modules$konva$lib$Canvas\"),Shape_1=require(\"module$node_modules$konva$lib$Shape\");module=require(\"module$node_modules$konva$lib$Validators\");\nrequire=require(\"module$node_modules$konva$lib$Global\");var INTERSECTION_OFFSETS=[{x:0,y:0},{x:-1,y:-1},{x:1,y:-1},{x:1,y:1},{x:-1,y:1}],INTERSECTION_OFFSETS_LEN=INTERSECTION_OFFSETS.length,Layer=function(_super){function Layer(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this.hitCanvas=new Canvas_1.HitCanvas({pixelRatio:1});return _this}__extends(Layer,_super);Layer.prototype._setCanvasSize=function(width,height){this.canvas.setSize(width,height);this.hitCanvas.setSize(width,height);\nthis._checkSmooth()};Layer.prototype._validateAdd=function(child){child=child.getType();\"Group\"!==child&&\"Shape\"!==child&&Util_1.Util.throw(\"You may only add groups and shapes to a layer.\")};Layer.prototype.getIntersection=function(pos,selector){var i,shape;if(!this.hitGraphEnabled()||!this.isVisible())return null;var spiralSearchDistance=1;for(shape=!1;;){for(i=0;i<INTERSECTION_OFFSETS_LEN;i++){var obj=INTERSECTION_OFFSETS[i];obj=this._getIntersection({x:pos.x+obj.x*spiralSearchDistance,y:pos.y+\nobj.y*spiralSearchDistance});if((shape=obj.shape)&&selector)return shape.findAncestor(selector,!0);if(shape)return shape;shape=!!obj.antialiased;if(!obj.antialiased)break}if(shape)spiralSearchDistance+=1;else return null}};Layer.prototype._getIntersection=function(pos){var ratio=this.hitCanvas.pixelRatio;pos=this.hitCanvas.context.getImageData(Math.round(pos.x*ratio),Math.round(pos.y*ratio),1,1).data;ratio=pos[3];return 255===ratio?(pos=Util_1.Util._rgbToHex(pos[0],pos[1],pos[2]),(pos=Shape_1.shapes[\"#\"+\npos])?{shape:pos}:{antialiased:!0}):0<ratio?{antialiased:!0}:{}};Layer.prototype.drawScene=function(can,top){var layer=this.getLayer();can=can||layer&&layer.getCanvas();this._fire(\"beforeDraw\",{node:this});this.clearBeforeDraw()&&can.getContext().clear();Container_1.Container.prototype.drawScene.call(this,can,top);this._fire(\"draw\",{node:this});return this};Layer.prototype.drawHit=function(can,top){var layer=this.getLayer();can=can||layer&&layer.hitCanvas;layer&&layer.clearBeforeDraw()&&layer.getHitCanvas().getContext().clear();\nContainer_1.Container.prototype.drawHit.call(this,can,top);return this};Layer.prototype.clear=function(bounds){BaseLayer_1.BaseLayer.prototype.clear.call(this,bounds);this.getHitCanvas().getContext().clear(bounds);return this};Layer.prototype.enableHitGraph=function(){this.hitGraphEnabled(!0);return this};Layer.prototype.disableHitGraph=function(){this.hitGraphEnabled(!1);return this};Layer.prototype.toggleHitCanvas=function(){if(this.parent){var parent=this.parent;this.hitCanvas._canvas.parentNode?\nparent.content.removeChild(this.hitCanvas._canvas):parent.content.appendChild(this.hitCanvas._canvas)}};Layer.prototype.setSize=function(_a){var width=_a.width;_a=_a.height;_super.prototype.setSize.call(this,{width:width,height:_a});this.hitCanvas.setSize(width,_a);return this};return Layer}(BaseLayer_1.BaseLayer);exports.Layer=Layer;Layer.prototype.nodeType=\"Layer\";require._registerNode(Layer);global.Factory.addGetterSetter(Layer,\"hitGraphEnabled\",!0,module.getBooleanValidator());Util_1.Collection.mapMethods(Layer)}","~:source","shadow$provide[\"module$node_modules$konva$lib$Layer\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"./Util\");\nvar Container_1 = require(\"./Container\");\nvar Factory_1 = require(\"./Factory\");\nvar BaseLayer_1 = require(\"./BaseLayer\");\nvar Canvas_1 = require(\"./Canvas\");\nvar Shape_1 = require(\"./Shape\");\nvar Validators_1 = require(\"./Validators\");\nvar Global_1 = require(\"./Global\");\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 }\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1\n        });\n        return _this;\n    }\n    Layer.prototype._setCanvasSize = function (width, height) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._checkSmooth();\n    };\n    Layer.prototype._validateAdd = function (child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\n        }\n    };\n    Layer.prototype.getIntersection = function (pos, selector) {\n        var obj, i, intersectionOffset, shape;\n        if (!this.hitGraphEnabled() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                intersectionOffset = INTERSECTION_OFFSETS[i];\n                obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance\n                });\n                shape = obj.shape;\n                if (shape && selector) {\n                    return shape.findAncestor(selector, true);\n                }\n                else if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    Layer.prototype._getIntersection = function (pos) {\n        var ratio = this.hitCanvas.pixelRatio;\n        var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data, p3 = p[3], colorKey, shape;\n        if (p3 === 255) {\n            colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n            shape = Shape_1.shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape\n                };\n            }\n            return {\n                antialiased: true\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true\n            };\n        }\n        return {};\n    };\n    Layer.prototype.drawScene = function (can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this\n        });\n        return this;\n    };\n    Layer.prototype.drawHit = function (can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer\n                .getHitCanvas()\n                .getContext()\n                .clear();\n        }\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    };\n    Layer.prototype.clear = function (bounds) {\n        BaseLayer_1.BaseLayer.prototype.clear.call(this, bounds);\n        this.getHitCanvas()\n            .getContext()\n            .clear(bounds);\n        return this;\n    };\n    Layer.prototype.enableHitGraph = function () {\n        this.hitGraphEnabled(true);\n        return this;\n    };\n    Layer.prototype.disableHitGraph = function () {\n        this.hitGraphEnabled(false);\n        return this;\n    };\n    Layer.prototype.toggleHitCanvas = function () {\n        if (!this.parent) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    };\n    Layer.prototype.setSize = function (_a) {\n        var width = _a.width, height = _a.height;\n        _super.prototype.setSize.call(this, { width: width, height: height });\n        this.hitCanvas.setSize(width, height);\n        return this;\n    };\n    return Layer;\n}(BaseLayer_1.BaseLayer));\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\nGlobal_1._registerNode(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, Validators_1.getBooleanValidator());\nUtil_1.Collection.mapMethods(Layer);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Shape","~$module$node_modules$konva$lib$Container","~$module$node_modules$konva$lib$Canvas","~$module$node_modules$konva$lib$Util","~$module$node_modules$konva$lib$BaseLayer"]],"~:properties",["^5",["drawScene","width","_setCanvasSize","prototype","height","_getIntersection","shape","hitCanvas","toggleHitCanvas","x","_validateAdd","__esModule","getIntersection","drawHit","pixelRatio","Layer","nodeType","value","enableHitGraph","y","__proto__","setSize","clear","antialiased","disableHitGraph","node","constructor"]],"~:compiled-at",1606342205745,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$Layer.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/Layer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$Layer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"./Util\\\");\\nvar Container_1 = require(\\\"./Container\\\");\\nvar Factory_1 = require(\\\"./Factory\\\");\\nvar BaseLayer_1 = require(\\\"./BaseLayer\\\");\\nvar Canvas_1 = require(\\\"./Canvas\\\");\\nvar Shape_1 = require(\\\"./Shape\\\");\\nvar Validators_1 = require(\\\"./Validators\\\");\\nvar Global_1 = require(\\\"./Global\\\");\\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\\n    { x: 0, y: 0 },\\n    { x: -1, y: -1 },\\n    { x: 1, y: -1 },\\n    { x: 1, y: 1 },\\n    { x: -1, y: 1 }\\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\\nvar Layer = (function (_super) {\\n    __extends(Layer, _super);\\n    function Layer() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.hitCanvas = new Canvas_1.HitCanvas({\\n            pixelRatio: 1\\n        });\\n        return _this;\\n    }\\n    Layer.prototype._setCanvasSize = function (width, height) {\\n        this.canvas.setSize(width, height);\\n        this.hitCanvas.setSize(width, height);\\n        this._checkSmooth();\\n    };\\n    Layer.prototype._validateAdd = function (child) {\\n        var type = child.getType();\\n        if (type !== 'Group' && type !== 'Shape') {\\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\\n        }\\n    };\\n    Layer.prototype.getIntersection = function (pos, selector) {\\n        var obj, i, intersectionOffset, shape;\\n        if (!this.hitGraphEnabled() || !this.isVisible()) {\\n            return null;\\n        }\\n        var spiralSearchDistance = 1;\\n        var continueSearch = false;\\n        while (true) {\\n            for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\\n                intersectionOffset = INTERSECTION_OFFSETS[i];\\n                obj = this._getIntersection({\\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance\\n                });\\n                shape = obj.shape;\\n                if (shape && selector) {\\n                    return shape.findAncestor(selector, true);\\n                }\\n                else if (shape) {\\n                    return shape;\\n                }\\n                continueSearch = !!obj.antialiased;\\n                if (!obj.antialiased) {\\n                    break;\\n                }\\n            }\\n            if (continueSearch) {\\n                spiralSearchDistance += 1;\\n            }\\n            else {\\n                return null;\\n            }\\n        }\\n    };\\n    Layer.prototype._getIntersection = function (pos) {\\n        var ratio = this.hitCanvas.pixelRatio;\\n        var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data, p3 = p[3], colorKey, shape;\\n        if (p3 === 255) {\\n            colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\\n            shape = Shape_1.shapes[HASH + colorKey];\\n            if (shape) {\\n                return {\\n                    shape: shape\\n                };\\n            }\\n            return {\\n                antialiased: true\\n            };\\n        }\\n        else if (p3 > 0) {\\n            return {\\n                antialiased: true\\n            };\\n        }\\n        return {};\\n    };\\n    Layer.prototype.drawScene = function (can, top) {\\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\\n        this._fire(BEFORE_DRAW, {\\n            node: this\\n        });\\n        if (this.clearBeforeDraw()) {\\n            canvas.getContext().clear();\\n        }\\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\\n        this._fire(DRAW, {\\n            node: this\\n        });\\n        return this;\\n    };\\n    Layer.prototype.drawHit = function (can, top) {\\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\\n        if (layer && layer.clearBeforeDraw()) {\\n            layer\\n                .getHitCanvas()\\n                .getContext()\\n                .clear();\\n        }\\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\\n        return this;\\n    };\\n    Layer.prototype.clear = function (bounds) {\\n        BaseLayer_1.BaseLayer.prototype.clear.call(this, bounds);\\n        this.getHitCanvas()\\n            .getContext()\\n            .clear(bounds);\\n        return this;\\n    };\\n    Layer.prototype.enableHitGraph = function () {\\n        this.hitGraphEnabled(true);\\n        return this;\\n    };\\n    Layer.prototype.disableHitGraph = function () {\\n        this.hitGraphEnabled(false);\\n        return this;\\n    };\\n    Layer.prototype.toggleHitCanvas = function () {\\n        if (!this.parent) {\\n            return;\\n        }\\n        var parent = this.parent;\\n        var added = !!this.hitCanvas._canvas.parentNode;\\n        if (added) {\\n            parent.content.removeChild(this.hitCanvas._canvas);\\n        }\\n        else {\\n            parent.content.appendChild(this.hitCanvas._canvas);\\n        }\\n    };\\n    Layer.prototype.setSize = function (_a) {\\n        var width = _a.width, height = _a.height;\\n        _super.prototype.setSize.call(this, { width: width, height: height });\\n        this.hitCanvas.setSize(width, height);\\n        return this;\\n    };\\n    return Layer;\\n}(BaseLayer_1.BaseLayer));\\nexports.Layer = Layer;\\nLayer.prototype.nodeType = 'Layer';\\nGlobal_1._registerNode(Layer);\\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, Validators_1.getBooleanValidator());\\nUtil_1.Collection.mapMethods(Layer);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"defineProperty\",\"value\",\"Util_1\",\"Container_1\",\"Factory_1\",\"BaseLayer_1\",\"Canvas_1\",\"Shape_1\",\"Validators_1\",\"Global_1\",\"INTERSECTION_OFFSETS\",\"x\",\"y\",\"INTERSECTION_OFFSETS_LEN\",\"length\",\"Layer\",\"_super\",\"_this\",\"apply\",\"arguments\",\"hitCanvas\",\"HitCanvas\",\"pixelRatio\",\"_setCanvasSize\",\"Layer.prototype._setCanvasSize\",\"width\",\"height\",\"canvas\",\"setSize\",\"_checkSmooth\",\"_validateAdd\",\"Layer.prototype._validateAdd\",\"child\",\"type\",\"getType\",\"Util\",\"throw\",\"getIntersection\",\"Layer.prototype.getIntersection\",\"pos\",\"selector\",\"i\",\"shape\",\"hitGraphEnabled\",\"isVisible\",\"spiralSearchDistance\",\"continueSearch\",\"intersectionOffset\",\"obj\",\"_getIntersection\",\"findAncestor\",\"antialiased\",\"Layer.prototype._getIntersection\",\"ratio\",\"context\",\"getImageData\",\"Math\",\"round\",\"data\",\"p3\",\"colorKey\",\"_rgbToHex\",\"shapes\",\"HASH\",\"drawScene\",\"Layer.prototype.drawScene\",\"can\",\"top\",\"layer\",\"getLayer\",\"getCanvas\",\"_fire\",\"BEFORE_DRAW\",\"node\",\"clearBeforeDraw\",\"getContext\",\"clear\",\"Container\",\"call\",\"DRAW\",\"drawHit\",\"Layer.prototype.drawHit\",\"getHitCanvas\",\"Layer.prototype.clear\",\"bounds\",\"BaseLayer\",\"enableHitGraph\",\"Layer.prototype.enableHitGraph\",\"disableHitGraph\",\"Layer.prototype.disableHitGraph\",\"toggleHitCanvas\",\"Layer.prototype.toggleHitCanvas\",\"parent\",\"_canvas\",\"parentNode\",\"content\",\"removeChild\",\"appendChild\",\"Layer.prototype.setSize\",\"_a\",\"nodeType\",\"_registerNode\",\"Factory\",\"addGetterSetter\",\"getBooleanValidator\",\"Collection\",\"mapMethods\"]\n}\n"]