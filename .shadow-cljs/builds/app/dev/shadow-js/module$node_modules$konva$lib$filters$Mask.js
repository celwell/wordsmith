["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Mask.js"],"~:js","shadow$provide.module$node_modules$konva$lib$filters$Mask=function(global,require,module,exports){function pixelAt(idata,x,y){x=4*(y*idata.width+x);y=[];y.push(idata.data[x++],idata.data[x++],idata.data[x++],idata.data[x++]);return y}function rgbDistance(p1,p2){return Math.sqrt(Math.pow(p1[0]-p2[0],2)+Math.pow(p1[1]-p2[1],2)+Math.pow(p1[2]-p2[2],2))}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$konva$lib$Factory\");module=require(\"module$node_modules$konva$lib$Node\");\nrequire=require(\"module$node_modules$konva$lib$Validators\");exports.Mask=function(imageData){var threshold=this.threshold();var rgbv_no=pixelAt(imageData,0,0),rgbv_ne=pixelAt(imageData,imageData.width-1,0),rgbv_so=pixelAt(imageData,0,imageData.height-1),rgbv_se=pixelAt(imageData,imageData.width-1,imageData.height-1);threshold=threshold||10;if(rgbDistance(rgbv_no,rgbv_ne)<threshold&&rgbDistance(rgbv_ne,rgbv_se)<threshold&&rgbDistance(rgbv_se,rgbv_so)<threshold&&rgbDistance(rgbv_so,rgbv_no)<threshold){rgbv_ne=\n[rgbv_ne,rgbv_no,rgbv_se,rgbv_so];rgbv_no=[0,0,0];for(rgbv_so=0;rgbv_so<rgbv_ne.length;rgbv_so++)rgbv_no[0]+=rgbv_ne[rgbv_so][0],rgbv_no[1]+=rgbv_ne[rgbv_so][1],rgbv_no[2]+=rgbv_ne[rgbv_so][2];rgbv_no[0]/=rgbv_ne.length;rgbv_no[1]/=rgbv_ne.length;rgbv_no[2]/=rgbv_ne.length;rgbv_ne=[];for(rgbv_so=0;rgbv_so<imageData.width*imageData.height;rgbv_so++)rgbv_se=rgbDistance(rgbv_no,[imageData.data[4*rgbv_so],imageData.data[4*rgbv_so+1],imageData.data[4*rgbv_so+2]]),rgbv_ne[rgbv_so]=rgbv_se<threshold?0:255;\nthreshold=rgbv_ne}else threshold=void 0;if(threshold){rgbv_no=imageData.width;rgbv_ne=imageData.height;rgbv_so=[1,1,1,1,0,1,1,1,1];rgbv_se=Math.round(Math.sqrt(rgbv_so.length));for(var halfSide=Math.floor(rgbv_se/2),maskResult=[],y=0;y<rgbv_ne;y++)for(var x=0;x<rgbv_no;x++){for(var so=y*rgbv_no+x,a=0,cy=0;cy<rgbv_se;cy++)for(var cx=0;cx<rgbv_se;cx++){var scy=y+cy-halfSide,scx=x+cx-halfSide;0<=scy&&scy<rgbv_ne&&0<=scx&&scx<rgbv_no&&(a+=threshold[scy*rgbv_no+scx]*rgbv_so[cy*rgbv_se+cx])}maskResult[so]=\n2040===a?255:0}threshold=maskResult;rgbv_no=imageData.width;rgbv_ne=imageData.height;rgbv_so=[1,1,1,1,1,1,1,1,1];rgbv_se=Math.round(Math.sqrt(rgbv_so.length));halfSide=Math.floor(rgbv_se/2);maskResult=[];for(y=0;y<rgbv_ne;y++)for(x=0;x<rgbv_no;x++){so=y*rgbv_no+x;for(cy=a=0;cy<rgbv_se;cy++)for(cx=0;cx<rgbv_se;cx++)scy=y+cy-halfSide,scx=x+cx-halfSide,0<=scy&&scy<rgbv_ne&&0<=scx&&scx<rgbv_no&&(a+=threshold[scy*rgbv_no+scx]*rgbv_so[cy*rgbv_se+cx]);maskResult[so]=1020<=a?255:0}threshold=maskResult;rgbv_no=\nimageData.width;rgbv_ne=imageData.height;rgbv_so=[1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9];rgbv_se=Math.round(Math.sqrt(rgbv_so.length));halfSide=Math.floor(rgbv_se/2);maskResult=[];for(y=0;y<rgbv_ne;y++)for(x=0;x<rgbv_no;x++){so=y*rgbv_no+x;for(cy=a=0;cy<rgbv_se;cy++)for(cx=0;cx<rgbv_se;cx++)scy=y+cy-halfSide,scx=x+cx-halfSide,0<=scy&&scy<rgbv_ne&&0<=scx&&scx<rgbv_no&&(a+=threshold[scy*rgbv_no+scx]*rgbv_so[cy*rgbv_se+cx]);maskResult[so]=a}threshold=maskResult;for(rgbv_no=0;rgbv_no<imageData.width*imageData.height;rgbv_no++)imageData.data[4*\nrgbv_no+3]=threshold[rgbv_no]}return imageData};global.Factory.addGetterSetter(module.Node,\"threshold\",0,require.getNumberValidator(),global.Factory.afterSetFilter)}","~:source","shadow$provide[\"module$node_modules$konva$lib$filters$Mask\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexports.Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","value","Mask"]],"~:compiled-at",1568562085603,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Mask.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/filters/Mask.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$konva$lib$filters$Mask\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nfunction pixelAt(idata, x, y) {\\n    var idx = (y * idata.width + x) * 4;\\n    var d = [];\\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\\n    return d;\\n}\\nfunction rgbDistance(p1, p2) {\\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\\n        Math.pow(p1[1] - p2[1], 2) +\\n        Math.pow(p1[2] - p2[2], 2));\\n}\\nfunction rgbMean(pTab) {\\n    var m = [0, 0, 0];\\n    for (var i = 0; i < pTab.length; i++) {\\n        m[0] += pTab[i][0];\\n        m[1] += pTab[i][1];\\n        m[2] += pTab[i][2];\\n    }\\n    m[0] /= pTab.length;\\n    m[1] /= pTab.length;\\n    m[2] /= pTab.length;\\n    return m;\\n}\\nfunction backgroundMask(idata, threshold) {\\n    var rgbv_no = pixelAt(idata, 0, 0);\\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\\n    var thres = threshold || 10;\\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\\n        var mask = [];\\n        for (var i = 0; i < idata.width * idata.height; i++) {\\n            var d = rgbDistance(mean, [\\n                idata.data[i * 4],\\n                idata.data[i * 4 + 1],\\n                idata.data[i * 4 + 2]\\n            ]);\\n            mask[i] = d < thres ? 0 : 255;\\n        }\\n        return mask;\\n    }\\n}\\nfunction applyMask(idata, mask) {\\n    for (var i = 0; i < idata.width * idata.height; i++) {\\n        idata.data[4 * i + 3] = mask[i];\\n    }\\n}\\nfunction erodeMask(mask, sw, sh) {\\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\\n        }\\n    }\\n    return maskResult;\\n}\\nfunction dilateMask(mask, sw, sh) {\\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\\n        }\\n    }\\n    return maskResult;\\n}\\nfunction smoothEdgeMask(mask, sw, sh) {\\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a;\\n        }\\n    }\\n    return maskResult;\\n}\\nexports.Mask = function (imageData) {\\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\\n    if (mask) {\\n        mask = erodeMask(mask, imageData.width, imageData.height);\\n        mask = dilateMask(mask, imageData.width, imageData.height);\\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\\n        applyMask(imageData, mask);\\n    }\\n    return imageData;\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"pixelAt\",\"idata\",\"x\",\"y\",\"idx\",\"width\",\"d\",\"push\",\"data\",\"rgbDistance\",\"p1\",\"p2\",\"Math\",\"sqrt\",\"pow\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"Mask\",\"exports.Mask\",\"imageData\",\"threshold\",\"rgbv_no\",\"rgbv_ne\",\"rgbv_so\",\"height\",\"rgbv_se\",\"thres\",\"m\",\"i\",\"pTab\",\"length\",\"mask\",\"weights\",\"side\",\"round\",\"halfSide\",\"floor\",\"maskResult\",\"sh\",\"sw\",\"so\",\"a\",\"cy\",\"cx\",\"scy\",\"scx\",\"wt\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]