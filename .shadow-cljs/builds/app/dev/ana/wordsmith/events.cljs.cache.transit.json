["^ ","~:output",["^ ","~:js","goog.provide('wordsmith.events');\ngoog.require('cljs.core');\ngoog.require('re_frame.core');\ngoog.require('wordsmith.util');\ngoog.require('wordsmith.db');\ngoog.require('clojure.string');\nre_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"initialize-db\",\"wordsmith.events/initialize-db\",-775332146),(function (_,___$1){\nreturn wordsmith.db.default_db;\n}));\nre_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"set-word\",\"wordsmith.events/set-word\",-1152203500),(function (p__43609,p__43610){\nvar map__43611 = p__43609;\nvar map__43611__$1 = (((((!((map__43611 == null))))?(((((map__43611.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43611.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43611):map__43611);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43611__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar vec__43612 = p__43610;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43612,(0),null);\nvar word = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43612,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(db,new cljs.core.Keyword(null,\"word\",\"word\",-420123725),word),new cljs.core.Keyword(null,\"error?\",\"error?\",-460689159),false)], null);\n}));\nwordsmith.events.word_already_exists = (function wordsmith$events$word_already_exists(db){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"words\",\"words\",1924933001),new cljs.core.Keyword(null,\"word\",\"word\",-420123725).cljs$core$IFn$_invoke$arity$1(db)], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(cljs.core.rand.cljs$core$IFn$_invoke$arity$1((30)) - (15)),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core.rand.cljs$core$IFn$_invoke$arity$1((-15))], null)),new cljs.core.Keyword(null,\"error?\",\"error?\",-460689159),true);\n});\nre_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"try-word\",\"wordsmith.events/try-word\",1630095468),(function (p__43616){\nvar map__43617 = p__43616;\nvar map__43617__$1 = (((((!((map__43617 == null))))?(((((map__43617.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43617.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43617):map__43617);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43617__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nif((((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"words\",\"words\",1924933001).cljs$core$IFn$_invoke$arity$1(db),new cljs.core.Keyword(null,\"word\",\"word\",-420123725).cljs$core$IFn$_invoke$arity$1(db)) == null)) && ((!(clojure.string.blank_QMARK_(new cljs.core.Keyword(null,\"word\",\"word\",-420123725).cljs$core$IFn$_invoke$arity$1(db))))))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"wordsmith.events\",\"add-word\",\"wordsmith.events/add-word\",-358045874)], null)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),wordsmith.events.word_already_exists(db)], null);\n}\n}));\nre_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"add-word\",\"wordsmith.events/add-word\",-358045874),(function (p__43619){\nvar map__43620 = p__43619;\nvar map__43620__$1 = (((((!((map__43620 == null))))?(((((map__43620.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43620.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43620):map__43620);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43620__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar word = clojure.string.trim(new cljs.core.Keyword(null,\"word\",\"word\",-420123725).cljs$core$IFn$_invoke$arity$1(db));\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"words\",\"words\",1924933001)], null),cljs.core.assoc,word,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(65),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(120),new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489),(65),new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167),(120),new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),cljs.core.rand.cljs$core$IFn$_invoke$arity$1((5)),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core.rand.cljs$core$IFn$_invoke$arity$1((-1))], null)),new cljs.core.Keyword(null,\"word\",\"word\",-420123725),\"\")], null);\n}));\nre_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"window-resized\",\"wordsmith.events/window-resized\",-390773337),(function (p__43622){\nvar map__43623 = p__43622;\nvar map__43623__$1 = (((((!((map__43623 == null))))?(((((map__43623.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43623.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43623):map__43623);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43623__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.assoc_in(cljs.core.assoc_in(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"window\",\"window\",724519534),new cljs.core.Keyword(null,\"width\",\"width\",-384071477)], null),window.innerWidth),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"window\",\"window\",724519534),new cljs.core.Keyword(null,\"height\",\"height\",1025178622)], null),window.innerHeight)], null);\n}));\nwordsmith.events.velocity = (function wordsmith$events$velocity(p__43625){\nvar vec__43626 = p__43625;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43626,(0),null);\nvar map__43629 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43626,(1),null);\nvar map__43629__$1 = (((((!((map__43629 == null))))?(((((map__43629.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43629.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43629):map__43629);\nvar word = map__43629__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43629__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43629__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43629__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43629__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(word,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489),x),new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167),y),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core._PLUS_,vx),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),cljs.core._PLUS_,vy)], null);\n});\nwordsmith.events.gravity = (function wordsmith$events$gravity(p__43631,p__43632){\nvar map__43633 = p__43631;\nvar map__43633__$1 = (((((!((map__43633 == null))))?(((((map__43633.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43633.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43633):map__43633);\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43633__$1,new cljs.core.Keyword(null,\"g\",\"g\",1738089905));\nvar vec__43634 = p__43632;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43634,(0),null);\nvar word = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43634,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.update.cljs$core$IFn$_invoke$arity$4(word,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core._PLUS_,g)], null);\n});\nwordsmith.events.friction = (function wordsmith$events$friction(p__43638,p__43639){\nvar map__43640 = p__43638;\nvar map__43640__$1 = (((((!((map__43640 == null))))?(((((map__43640.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43640.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43640):map__43640);\nvar window = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43640__$1,new cljs.core.Keyword(null,\"window\",\"window\",724519534));\nvar k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43640__$1,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393));\nvar vec__43641 = p__43639;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43641,(0),null);\nvar map__43644 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43641,(1),null);\nvar map__43644__$1 = (((((!((map__43644 == null))))?(((((map__43644.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43644.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43644):map__43644);\nvar word = map__43644__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43644__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43644__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar map__43647 = window;\nvar map__43647__$1 = (((((!((map__43647 == null))))?(((((map__43647.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43647.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43647):map__43647);\nvar window_width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43647__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar window_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43647__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar word_width = (wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1(word_key) : wordsmith.util.word_width.call(null,word_key));\nvar word_height = (wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1(word_key) : wordsmith.util.word_height.call(null,word_key));\nvar half_word_width = (word_width / (2));\nvar half_word_height = (word_height / (2));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,(function (){var G__43649 = word;\nvar G__43649__$1 = ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((y - half_word_height),(0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((y + half_word_height),window_height))))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__43649,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),cljs.core._STAR_,k):G__43649);\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((x - half_word_width),(0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((x + half_word_width),window_width)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__43649__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core._STAR_,k);\n} else {\nreturn G__43649__$1;\n}\n})()], null);\n});\nwordsmith.events.border = (function wordsmith$events$border(p__43650,p__43651){\nvar map__43652 = p__43650;\nvar map__43652__$1 = (((((!((map__43652 == null))))?(((((map__43652.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43652.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43652):map__43652);\nvar window = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43652__$1,new cljs.core.Keyword(null,\"window\",\"window\",724519534));\nvar cr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43652__$1,new cljs.core.Keyword(null,\"cr\",\"cr\",-1019028853));\nvar vec__43653 = p__43651;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43653,(0),null);\nvar map__43656 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43653,(1),null);\nvar map__43656__$1 = (((((!((map__43656 == null))))?(((((map__43656.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43656.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43656):map__43656);\nvar word = map__43656__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43656__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43656__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43656__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43656__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar map__43659 = window;\nvar map__43659__$1 = (((((!((map__43659 == null))))?(((((map__43659.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43659.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43659):map__43659);\nvar window_width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43659__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar window_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43659__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar half_word_width = ((wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1(word_key) : wordsmith.util.word_width.call(null,word_key)) / (2));\nvar half_word_height = ((wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1(word_key) : wordsmith.util.word_height.call(null,word_key)) / (2));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,(function (){var G__43661 = word;\nvar G__43661__$1 = ((((x + half_word_width) > window_width))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__43661,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((vx * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(window_width - half_word_width)], 0)):G__43661);\nvar G__43661__$2 = ((((y + half_word_height) > window_height))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__43661__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((vy * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(window_height - half_word_height)], 0)):G__43661__$1);\nvar G__43661__$3 = ((((x - half_word_width) < (0)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__43661__$2,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((vx * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"x\",\"x\",2099068185),half_word_width], 0)):G__43661__$2);\nif(((y - half_word_height) < (0))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__43661__$3,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((vy * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),half_word_height], 0));\n} else {\nreturn G__43661__$3;\n}\n})()], null);\n});\nwordsmith.events.neighbors = (function wordsmith$events$neighbors(word_key,words){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,word_key),cljs.core.key),words);\n});\nwordsmith.events.intersecting_QMARK_ = (function wordsmith$events$intersecting_QMARK_(w_top_edge,w_right_edge,w_bottom_edge,w_left_edge,nw_top_edge,nw_right_edge,nw_bottom_edge,nw_left_edge){\nreturn (((((((nw_top_edge < w_top_edge)) && ((w_top_edge < nw_bottom_edge)))) || ((((nw_bottom_edge > w_bottom_edge)) && ((w_bottom_edge > nw_top_edge)))))) && ((((((nw_right_edge > w_right_edge)) && ((w_right_edge > nw_left_edge)))) || ((((nw_left_edge < w_left_edge)) && ((w_left_edge < nw_right_edge)))))));\n});\nwordsmith.events.solve_collision = (function wordsmith$events$solve_collision(word,neighbor,w_key,k,cr){\nvar map__43662 = word;\nvar map__43662__$1 = (((((!((map__43662 == null))))?(((((map__43662.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43662.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43662):map__43662);\nvar w_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar w_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar w_vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar w_vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar w_prev_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489));\nvar w_prev_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43662__$1,new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167));\nvar vec__43663 = neighbor;\nvar nw_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43663,(0),null);\nvar map__43666 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43663,(1),null);\nvar map__43666__$1 = (((((!((map__43666 == null))))?(((((map__43666.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43666.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43666):map__43666);\nvar nw_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar nw_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar nw_vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar nw_vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar nw_prev_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489));\nvar nw_prev_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43666__$1,new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167));\nvar half_w_width = ((wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1(w_key) : wordsmith.util.word_width.call(null,w_key)) / (2));\nvar half_w_height = ((wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1(w_key) : wordsmith.util.word_height.call(null,w_key)) / (2));\nvar half_nw_width = ((wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_width.cljs$core$IFn$_invoke$arity$1(nw_key) : wordsmith.util.word_width.call(null,nw_key)) / (2));\nvar half_nw_height = ((wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1 ? wordsmith.util.word_height.cljs$core$IFn$_invoke$arity$1(nw_key) : wordsmith.util.word_height.call(null,nw_key)) / (2));\nvar w_top_edge = (w_y - half_w_height);\nvar w_right_edge = (w_x + half_w_width);\nvar w_bottom_edge = (w_y + half_w_height);\nvar w_left_edge = (w_x - half_w_width);\nvar nw_top_edge = (nw_y - half_nw_height);\nvar nw_right_edge = (nw_x + half_nw_width);\nvar nw_bottom_edge = (nw_y + half_nw_height);\nvar nw_left_edge = (nw_x - half_nw_width);\nvar w_prev_top_edge = (w_prev_y - half_w_height);\nvar w_prev_right_edge = (w_prev_x + half_w_width);\nvar w_prev_bottom_edge = (w_prev_y + half_w_height);\nvar w_prev_left_edge = (w_prev_x - half_w_width);\nvar nw_prev_top_edge = (nw_prev_y - half_nw_height);\nvar nw_prev_right_edge = (nw_prev_x + half_nw_width);\nvar nw_prev_bottom_edge = (nw_prev_y + half_nw_height);\nvar nw_prev_left_edge = (nw_prev_x - half_nw_width);\nvar intersects_QMARK_ = wordsmith.events.intersecting_QMARK_(w_top_edge,w_right_edge,w_bottom_edge,w_left_edge,nw_top_edge,nw_right_edge,nw_bottom_edge,nw_left_edge);\nif(((intersects_QMARK_) && ((w_bottom_edge > nw_top_edge)) && ((!((w_prev_bottom_edge > nw_prev_top_edge)))) && ((w_vy > (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(w_y - w_vy),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((Math.abs(w_vy) * (-1)) * cr),new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(w_vx * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_top_edge < nw_bottom_edge)) && ((!((w_prev_top_edge < nw_prev_bottom_edge)))) && ((w_vy < (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(w_y - w_vy),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(Math.abs(w_vy) * cr),new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(w_vx * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_right_edge > nw_left_edge)) && ((!((w_prev_right_edge > nw_prev_left_edge)))) && ((w_vx > (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(w_x - w_vx),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((Math.abs(w_vx) * (-1)) * cr),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(w_vy * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_left_edge < nw_right_edge)) && ((!((w_prev_left_edge < nw_prev_right_edge)))) && ((w_vx < (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(w_x - w_vx),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(Math.abs(w_vx) * cr),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(w_vy * k)], 0));\n} else {\nreturn word;\n\n}\n}\n}\n}\n});\nwordsmith.events.collisions = (function wordsmith$events$collisions(p__43669,p__43670){\nvar map__43671 = p__43669;\nvar map__43671__$1 = (((((!((map__43671 == null))))?(((((map__43671.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43671.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43671):map__43671);\nvar words = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43671__$1,new cljs.core.Keyword(null,\"words\",\"words\",1924933001));\nvar k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43671__$1,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393));\nvar cr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43671__$1,new cljs.core.Keyword(null,\"cr\",\"cr\",-1019028853));\nvar vec__43672 = p__43670;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43672,(0),null);\nvar map__43675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43672,(1),null);\nvar map__43675__$1 = (((((!((map__43675 == null))))?(((((map__43675.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43675.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43675):map__43675);\nvar word = map__43675__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43675__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43675__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43675__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43675__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (map__43671,map__43671__$1,words,k,cr,vec__43672,word_key,map__43675,map__43675__$1,word,x,y,vx,vy){\nreturn (function (w,neighbor){\nreturn wordsmith.events.solve_collision(w,neighbor,word_key,k,cr);\n});})(map__43671,map__43671__$1,words,k,cr,vec__43672,word_key,map__43675,map__43675__$1,word,x,y,vx,vy))\n,word,wordsmith.events.neighbors(word_key,words))], null);\n});\nre_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"wordsmith.events\",\"anim-step\",\"wordsmith.events/anim-step\",-720585944),(function (db){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"words\",\"words\",1924933001)], null),(function (p1__43678_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(wordsmith.events.border,db),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(wordsmith.events.collisions,db),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(wordsmith.events.velocity,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(wordsmith.events.friction,db),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(wordsmith.events.gravity,db),p1__43678_SHARP_))))))))));\n}));\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","wordsmith/events.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$wordsmith.events","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$wordsmith.db","^M","~$rf","~$re-frame.core","~$cljs.core","^P","~$goog","^Q","~$db","^M","~$wordsmith.util","^S","~$util","^S","~$s","~$clojure.string","^U","^U","^O","^O"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^H",["^[",["^W",["^O","~:as","^N"],["^S","^11","^T"],["^M","^11","^R"],["^U","^11","~$s"]]]]],"~:flags",["^ ","^W",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^O","^S","^M","^U"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","wordsmith/events.cljs"],"~:compiled-at",1590963315414,"~:resource-name","wordsmith/events.cljs","~:warnings",[],"~:source","(ns wordsmith.events\n  (:require [re-frame.core :as rf]\n            [wordsmith.util :as util]\n            [wordsmith.db :as db]\n            [clojure.string :as s]))\n\n(rf/reg-event-db\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n\n(rf/reg-event-fx\n ::set-word\n (fn [{:keys [db]} [_ word]]\n   {:db (-> db\n            (assoc :word word)\n            (assoc :error? false))}))\n\n(defn- word-already-exists\n  [db]\n  (-> db ; make it jump\n      (update-in [:words (:word db)] merge {:vx (- (rand 30) 15)\n                                            :vy (rand -15)})\n      (assoc :error? true)))\n\n(rf/reg-event-fx\n ::try-word\n (fn [{:keys [db]}]\n   (if (and (nil? (get (:words db) (:word db)))\n            (not (s/blank? (:word db))))\n     {:dispatch [::add-word]}\n     {:db (word-already-exists db)})))\n\n(rf/reg-event-fx\n ::add-word\n (fn [{:keys [db]}]\n   ;; TODO add to local storage\n   ;;\n   (let [word (s/trim (:word db))]\n     {:db (-> db\n              (update-in [:words] assoc word\n                         {:x 65\n                          :y 120\n                          :prev-x 65\n                          :prev-y 120\n                          :vx (rand 5)\n                          :vy (rand -1)})\n              (assoc :word \"\"))})))\n\n(rf/reg-event-fx\n ::window-resized\n (fn [{:keys [db]}]\n   {:db (-> db\n            (assoc-in [:window :width] (.-innerWidth js/window))\n            (assoc-in [:window :height] (.-innerHeight js/window)))}))\n\n(defn velocity\n  [[word-key {:keys [x y vx vy] :as word}]]\n  [word-key (-> word\n                (assoc :prev-x x)\n                (assoc :prev-y y)\n                (update :x + vx)\n                (update :y + vy))])\n\n(defn gravity\n  [{:keys [g]} [word-key word]]\n  [word-key (update word :vy + g)])\n\n(defn friction\n  [{:keys [window k]} [word-key {:keys [x y] :as word}]]\n  (let [{window-width :width\n         window-height :height} window\n        word-width (util/word-width word-key)\n        word-height (util/word-height word-key)\n        half-word-width (/ word-width 2)\n        half-word-height (/ word-height 2)]\n    [word-key (cond-> word\n                (or (= (- y half-word-height) 0)\n                    (= (+ y half-word-height) window-height)) (update :vx * k)\n                (or (= (- x half-word-width) 0)\n                    (= (+ x half-word-width) window-width))   (update :vy * k))]))\n\n(defn border\n  [{:keys [window cr]} [word-key {:keys [x y vx vy] :as word}]]\n  (let [{window-width :width\n         window-height :height} window\n        half-word-width (/ (util/word-width word-key) 2)\n        half-word-height (/ (util/word-height word-key) 2)]\n    [word-key (cond-> word\n                (> (+ x half-word-width) window-width)   (assoc :vx (* vx -1 cr)\n                                                                :x (- window-width half-word-width))\n                (> (+ y half-word-height) window-height) (assoc :vy (* vy -1 cr)\n                                                                :y (- window-height half-word-height))\n                (< (- x half-word-width) 0)              (assoc :vx (* vx -1 cr)\n                                                                :x half-word-width)\n                (< (- y half-word-height) 0)             (assoc :vy (* vy -1 cr)\n                                                                :y half-word-height))]))\n\n(defn neighbors\n  [word-key words]\n  (remove (comp (partial = word-key) key) words))\n\n(defn intersecting?\n  [w-top-edge w-right-edge w-bottom-edge w-left-edge\n   nw-top-edge nw-right-edge nw-bottom-edge nw-left-edge]\n  (and (or (< nw-top-edge w-top-edge nw-bottom-edge)\n           (> nw-bottom-edge w-bottom-edge nw-top-edge))\n       (or (> nw-right-edge w-right-edge nw-left-edge)\n           (< nw-left-edge w-left-edge nw-right-edge))))\n\n(defn solve-collision\n  [word neighbor w-key k cr]\n  ;; w-  prefix means \"word-\"\n  ;; nw- prefix means \"neighbor-word-\"\n  (let [{w-x :x   w-y :y\n         w-vx :vx w-vy :vy\n         w-prev-x :prev-x w-prev-y :prev-y} word\n        [nw-key {nw-x :x nw-y :y\n                 nw-vx :vx nw-vy :vy\n                 nw-prev-x :prev-x nw-prev-y :prev-y}] neighbor\n        half-w-width (/ (util/word-width w-key) 2)\n        half-w-height (/ (util/word-height w-key) 2)\n        half-nw-width (/ (util/word-width nw-key) 2)\n        half-nw-height (/ (util/word-height nw-key) 2)\n\n        w-top-edge     (- w-y half-w-height)\n        w-right-edge   (+ w-x half-w-width)\n        w-bottom-edge  (+ w-y half-w-height)\n        w-left-edge    (- w-x half-w-width)\n        nw-top-edge    (- nw-y half-nw-height)\n        nw-right-edge  (+ nw-x half-nw-width)\n        nw-bottom-edge (+ nw-y half-nw-height)\n        nw-left-edge   (- nw-x half-nw-width)\n\n        w-prev-top-edge     (- w-prev-y half-w-height)\n        w-prev-right-edge   (+ w-prev-x half-w-width)\n        w-prev-bottom-edge  (+ w-prev-y half-w-height)\n        w-prev-left-edge    (- w-prev-x half-w-width)\n        nw-prev-top-edge    (- nw-prev-y half-nw-height)\n        nw-prev-right-edge  (+ nw-prev-x half-nw-width)\n        nw-prev-bottom-edge (+ nw-prev-y half-nw-height)\n        nw-prev-left-edge   (- nw-prev-x half-nw-width)\n\n        ;; relative velocities\n        ;; dvx (- vx1 vx2)\n        ;; dvy (- vy1 vy2)\n\n        intersects? (intersecting? w-top-edge\n                                   w-right-edge\n                                   w-bottom-edge\n                                   w-left-edge\n                                   nw-top-edge\n                                   nw-right-edge\n                                   nw-bottom-edge\n                                   nw-left-edge)]\n    (cond\n      (and intersects?\n           (> w-bottom-edge nw-top-edge)\n           (not (> w-prev-bottom-edge nw-prev-top-edge))\n           (pos? w-vy))\n      (assoc word\n             :y  (- w-y w-vy)\n             :vy (* (Math/abs w-vy) -1 cr)\n             :vx (* w-vx k))\n\n      (and intersects?\n           (< w-top-edge nw-bottom-edge)\n           (not (< w-prev-top-edge nw-prev-bottom-edge))\n           (neg? w-vy))\n      (assoc word\n             :y  (- w-y w-vy)\n             :vy (* (Math/abs w-vy) cr)\n             :vx (* w-vx k))\n      \n      (and intersects?\n           (> w-right-edge nw-left-edge)\n           (not (> w-prev-right-edge nw-prev-left-edge))\n           (pos? w-vx))\n      (assoc word\n             :x  (- w-x w-vx)\n             :vx (* (Math/abs w-vx) -1 cr)\n             :vy (* w-vy k))\n\n      (and intersects?\n           (< w-left-edge nw-right-edge)\n           (not (< w-prev-left-edge nw-prev-right-edge))\n           (neg? w-vx))\n      (assoc word\n             :x  (- w-x w-vx)\n             :vx (* (Math/abs w-vx) cr)\n             :vy (* w-vy k))\n\n      :else word)))\n\n(defn collisions\n  [{:keys [words k cr]} [word-key {:keys [x y vx vy] :as word}]]\n  [word-key (reduce (fn [w neighbor]\n                      (solve-collision w neighbor word-key k cr))\n                    word\n                    (neighbors word-key words))])\n\n;; (defn fmap\n;;   [f m]\n;;   (into {} (for [[k v] m] [k (f v)])))\n\n(rf/reg-event-db\n ::anim-step\n (fn [db]\n   (update-in db [:words] #(->> %\n                                ;; apply forces\n                                (map (partial gravity db))\n                                (into {})\n                                (map (partial friction db))\n                                (into {})\n                                ;; do velocity\n                                (map velocity)\n                                (into {})\n                                ;; collide\n                                (map (partial collisions db))\n                                (into {})\n                                (map (partial border db))\n                                (into {})))))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","_","wordsmith.db/default-db","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__43609","p__43610","map__43611","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__43612","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","word","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","wordsmith.events/word-already-exists","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","cljs.core/merge","cljs.core.rand.cljs$core$IFn$_invoke$arity$1","p__43616","map__43617","clojure.string/blank?","p__43619","map__43620","clojure.string/trim","cljs.core.update_in.cljs$core$IFn$_invoke$arity$5","cljs.core/assoc","p__43622","map__43623","cljs.core/assoc-in","js/window","p__43625","vec__43626","map__43629","wordsmith.events/velocity","word-key","x","y","vx","vy","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/+","p__43631","p__43632","map__43633","vec__43634","wordsmith.events/gravity","g","p__43638","p__43639","map__43640","vec__43641","map__43644","wordsmith.events/friction","window","k","map__43647","window-width","window-height","word-width","wordsmith.util/word-width","word-height","wordsmith.util/word-height","half-word-width","half-word-height","G__43649","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*","p__43650","p__43651","map__43652","vec__43653","map__43656","wordsmith.events/border","cr","map__43659","G__43661","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","wordsmith.events/neighbors","words","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/=","cljs.core/key","wordsmith.events/intersecting?","w-top-edge","w-right-edge","w-bottom-edge","w-left-edge","nw-top-edge","nw-right-edge","nw-bottom-edge","nw-left-edge","wordsmith.events/solve-collision","neighbor","w-key","map__43662","vec__43663","map__43666","w-x","w-y","w-vx","w-vy","w-prev-x","w-prev-y","nw-key","nw-x","nw-y","nw-vx","nw-vy","nw-prev-x","nw-prev-y","half-w-width","half-w-height","half-nw-width","half-nw-height","w-prev-top-edge","w-prev-right-edge","w-prev-bottom-edge","w-prev-left-edge","nw-prev-top-edge","nw-prev-right-edge","nw-prev-bottom-edge","nw-prev-left-edge","intersects?","Math/abs","p__43669","p__43670","map__43671","vec__43672","map__43675","wordsmith.events/collisions","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","w","p1__43678#","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1589754142000,1589754142000,1589753904480,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^16","reagent/impl/batching.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","^U"]]],["^16","goog/dom/tagname.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","~$goog.dom.HtmlElement"]]],["^16","goog/math/math.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","~$goog.array","~$goog.asserts"]]],["^16","goog/labs/useragent/browser.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^16","re_frame/loggers.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$clojure.set"]]],["^16","goog/array/array.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1P"]]],["^1C","node_modules/prop-types/checkPropTypes.js"],[1589754142000,1589754142000,1589753904461,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^16","reagent/impl/util.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1K","^1L","^U"]]],["^16","re_frame/router.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$re-frame.events","~$re-frame.interop","~$re-frame.loggers","~$re-frame.trace"]]],["^1C","node_modules/fbjs/lib/emptyFunction.js"],[1589754142000,1589754142000,1589753904333,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","goog/debug/error.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","re_frame/registrar.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1W","^1X"]]],["^1C","node_modules/fbjs/lib/emptyObject.js"],[1589754142000,1589754142000,1589753904333,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","goog/dom/nodetype.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^1C","node_modules/scheduler/cjs/scheduler.development.js"],[1589754142000,1589754142000,1589753904561,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","reagent/ratom.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1M","^1K","~$reagent.impl.batching","^1T"]]],["^1C","node_modules/scheduler/cjs/scheduler.production.min.js"],[1589754142000,1589754142000,1589753904561,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","re_frame/interop.cljs"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1C","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1589754142000,1589754142000,1589753904560,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^1C","node_modules/create-react-class/factory.js"],[1589754142000,1589754142000,1589753904304,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1C","node_modules/react/index.js"],[1589754142000,1589754142000,1589753904549,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^16","shadow/js.js"],[1589754142069,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","goog/object/object.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","reagent/impl/template.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^?","^U","~$clojure.walk","^1M","~$reagent.impl.component","^1Z","^21","^1L","^1K"]]],["^1C","node_modules/react-dom/cjs/react-dom.production.min.js"],[1589754142000,1589754142000,1589753904479,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","^?","^22","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1589754142000,1589754138000],["^1C","node_modules/react/cjs/react.development.js"],[1589754142000,1589754142000,1589753904549,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","^22","~$module$node_modules$prop_types$checkPropTypes"]]],["^16","re_frame/events.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$re-frame.db","~$re-frame.utils","^1W","~$re-frame.registrar","^1X","~$re-frame.interceptor","^1Y"]]],["^16","goog/math/long.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1P","~$goog.reflect"]]],["^16","goog/string/internal.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^1C","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1589754142000,1589754142000,1589753904560,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^1C","node_modules/fbjs/lib/warning.js"],[1589754142000,1589754142000,1589753904347,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^16","goog/functions/functions.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","reagent/impl/component.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^A","^?","^1M","^1Z","^21","^1L","^1K"]]],["^16","clojure/walk.cljs"],[1589754138780,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^16","goog/structs/map.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","wordsmith/util.cljs"],[1590963314008,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^1C","node_modules/scheduler/index.js"],[1589754142000,1589754142000,1589753904561,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^16","goog/labs/useragent/engine.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","^1Q","~$goog.string"]]],["^16","goog/asserts/asserts.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","^1P","^2G","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","node_modules/object-assign/index.js"],[1589754142000,1589754142000,1589753904439,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","re_frame/db.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1W"]]],["^16","goog/base.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",[]]],["^16","goog/structs/structs.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","^1R"]]],["^16","clojure/string.cljs"],[1589754138780,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^2G","~$goog.string.StringBuffer"]]],["^1C","node_modules/create-react-class/index.js"],[1589754142000,1589754142000,1589753904304,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","^?","~$module$node_modules$create_react_class$factory"]]],["^16","re_frame/cofx.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^2=","^2@","^2?","^1X"]]],["^1C","node_modules/react/cjs/react.production.min.js"],[1589754142000,1589754142000,1589753904549,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","^22"]]],["^16","wordsmith/db.cljs"],[1590963021463,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^16","goog/debug/entrypointregistry.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1P"]]],["^16","goog/string/string.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1S"]]],["^16","re_frame/interceptor.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1X","^1W","^1Y","^1T"]]],["^16","clojure/data.cljs"],[1589754138780,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1T"]]],["^16","goog/reflect/reflect.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","goog/labs/useragent/util.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1S"]]],["^16","reagent/core.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^?","~$reagent.impl.template","^29","^1M","^1Z","^21","^1K","^1L","~$reagent.dom"]]],["^16","goog/string/stringbuffer.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","re_frame/std_interceptors.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^2@","^1X","^2?","^2=","~$clojure.data","~$re-frame.cofx","^2>","^1Y"]]],["^16","goog/iter/iter.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","^1P","~$goog.functions","~$goog.math"]]],["^16","goog/async/nexttick.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2U","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^16","re_frame/utils.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1X"]]],["^16","reagent/dom.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^C","^1M","^2Q","^1Z","^21","^1K","^1L"]]],["^16","re_frame/fx.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","~$re-frame.router","^2=","^2@","^1W","^1V","^2?","^1X","^1Y"]]],["^1C","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1589754142000,1589754142000,1589753904462,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","reagent/interop.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^16","goog/dom/htmlelement.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^16","cljs/core.cljs"],[1589754138780,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["~$goog.math.Long","~$goog.math.Integer","^2G","^1R","^1O","~$goog.Uri","^2O"]]],["^16","reagent/debug.cljs"],[1562180324121,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^16","goog/math/integer.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q"]]],["^1C","node_modules/scheduler/tracing.js"],[1589754142000,1589754142000,1589753904562,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1C","node_modules/react-dom/cjs/react-dom.development.js"],[1589754142000,1589754142000,1589753904478,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H","^?","^22","^2<","^2:","~$module$node_modules$scheduler$tracing"]]],["^16","clojure/set.cljs"],[1589754138780,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P"]]],["^16","goog/uri/utils.js"],[1589754141274,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^1O","^1P","^2G"]]],["^16","wordsmith/events.cljs"],[1590962836076,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^O","^S","^M","^U"]]],["^1C","node_modules/fbjs/lib/invariant.js"],[1589754142000,1589754142000,1589753904340,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^1H"]]],["^16","re_frame/trace.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1W","^1X","^2U"]]],["^16","re_frame/subs.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^2=","^1W","^1X","^2>","^2?","^1Y"]]],["^16","re_frame/core.cljc"],[1589754141524,"^1D",["^ ","^1E",null,"^1F",["^F",[]],"^1G",["^Q","^P","^1V","~$re-frame.subs","^1W","^2=","~$re-frame.fx","^2T","^2[","^1X","^2?","^2@","~$re-frame.std-interceptors","^1T"]]]]],"~:clj-info",["^ ","jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1562180321000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1562180324000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1562179875000,"jar:file:/Users/celwell/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/interop.clj",1589754141000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/core.clj",1562180324000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1562180324000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/trace.cljc",1589754141000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1562180324000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1589754138000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","wordsmith/events.cljs","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^O","^P","^P","^Q","^Q","^R","^M","^S","^S","^T","^S","~$s","^U","^U","^U","^O","^O"],"^V",["^F",["^W"]],"~:shadow/js-access-global",["^F",["window"]],"^X",null,"~:defs",["^ ","~$neighbors",["^ ","~:protocol-inline",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",99,"^8",7,"^9",99,"^:",16,"~:arglists",["^[",["~$quote",["^[",[["~$word-key","~$words"]]]]]],"^G","~$wordsmith.events/neighbors","^6","wordsmith/events.cljs","^:",16,"~:method-params",["^[",[["^44","^45"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"~:variadic?",false,"^7",99,"~:ret-tag","~$cljs.core/LazySeq","^9",99,"~:max-fixed-arity",2,"~:fn-var",true,"^42",["^[",["^43",["^[",[["^44","^45"]]]]]],"~$friction",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",69,"^8",7,"^9",69,"^:",15,"^42",["^[",["^43",["^[",[[["^ ","~:keys",["~$window","~$k"]],["^44",["^ ","^4@",["~$x","~$y"],"^11","~$word"]]]]]]]],"^G","~$wordsmith.events/friction","^6","wordsmith/events.cljs","^:",15,"^47",["^[",[["~$p__43638","~$p__43639"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",69,"^4;","~$cljs.core/IVector","^9",69,"^4=",2,"^4>",true,"^42",["^[",["^43",["^[",[[["^ ","^4@",["^4A","~$k"]],["^44",["^ ","^4@",["~$x","~$y"],"^11","^4B"]]]]]]]],"~$collisions",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",195,"^8",7,"^9",195,"^:",17,"^42",["^[",["^43",["^[",[[["^ ","^4@",["^45","~$k","~$cr"]],["^44",["^ ","^4@",["~$x","~$y","~$vx","~$vy"],"^11","^4B"]]]]]]]],"^G","~$wordsmith.events/collisions","^6","wordsmith/events.cljs","^:",17,"^47",["^[",[["~$p__43669","~$p__43670"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",195,"^4;","^4F","^9",195,"^4=",2,"^4>",true,"^42",["^[",["^43",["^[",[[["^ ","^4@",["^45","~$k","^4H"]],["^44",["^ ","^4@",["~$x","~$y","^4I","^4J"],"^11","^4B"]]]]]]]],"~$border",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",83,"^8",7,"^9",83,"^:",13,"^42",["^[",["^43",["^[",[[["^ ","^4@",["^4A","^4H"]],["^44",["^ ","^4@",["~$x","~$y","^4I","^4J"],"^11","^4B"]]]]]]]],"^G","~$wordsmith.events/border","^6","wordsmith/events.cljs","^:",13,"^47",["^[",[["~$p__43650","~$p__43651"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",83,"^4;","^4F","^9",83,"^4=",2,"^4>",true,"^42",["^[",["^43",["^[",[[["^ ","^4@",["^4A","^4H"]],["^44",["^ ","^4@",["~$x","~$y","^4I","^4J"],"^11","^4B"]]]]]]]],"~$velocity",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",57,"^8",7,"^9",57,"^:",15,"^42",["^[",["^43",["^[",[[["^44",["^ ","^4@",["~$x","~$y","^4I","^4J"],"^11","^4B"]]]]]]]],"^G","~$wordsmith.events/velocity","^6","wordsmith/events.cljs","^:",15,"^47",["^[",[["~$p__43625"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",57,"^4;","^4F","^9",57,"^4=",1,"^4>",true,"^42",["^[",["^43",["^[",[[["^44",["^ ","^4@",["~$x","~$y","^4I","^4J"],"^11","^4B"]]]]]]]],"~$intersecting?",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",103,"^8",7,"^9",103,"^:",20,"^42",["^[",["^43",["^[",[["~$w-top-edge","~$w-right-edge","~$w-bottom-edge","~$w-left-edge","~$nw-top-edge","~$nw-right-edge","~$nw-bottom-edge","~$nw-left-edge"]]]]]],"^G","~$wordsmith.events/intersecting?","^6","wordsmith/events.cljs","^:",20,"^47",["^[",[["^4V","^4W","^4X","^4Y","^4Z","^4[","^50","^51"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",103,"^4;","~$boolean","^9",103,"^4=",8,"^4>",true,"^42",["^[",["^43",["^[",[["^4V","^4W","^4X","^4Y","^4Z","^4[","^50","^51"]]]]]],"~$gravity",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",65,"^8",7,"^9",65,"^:",14,"^42",["^[",["^43",["^[",[[["^ ","^4@",["~$g"]],["^44","^4B"]]]]]]],"^G","~$wordsmith.events/gravity","^6","wordsmith/events.cljs","^:",14,"^47",["^[",[["~$p__43631","~$p__43632"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",65,"^4;","^4F","^9",65,"^4=",2,"^4>",true,"^42",["^[",["^43",["^[",[[["^ ","^4@",["~$g"]],["^44","^4B"]]]]]]],"~$word-already-exists",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",19,"^8",8,"^9",19,"^:",27,"~:private",true,"^42",["^[",["^43",["^[",[["^R"]]]]]],"^59",true,"^G","~$wordsmith.events/word-already-exists","^6","wordsmith/events.cljs","^:",27,"^47",["^[",[["^R"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",19,"^4;",["^F",["~$clj","~$any"]],"^9",19,"^4=",1,"^4>",true,"^42",["^[",["^43",["^[",[["^R"]]]]]],"~$solve-collision",["^ ","^41",null,"^5",["^ ","^6","wordsmith/events.cljs","^7",111,"^8",7,"^9",111,"^:",22,"^42",["^[",["^43",["^[",[["^4B","~$neighbor","~$w-key","~$k","^4H"]]]]]],"^G","~$wordsmith.events/solve-collision","^6","wordsmith/events.cljs","^:",22,"^47",["^[",[["^4B","^5>","^5?","~$k","^4H"]]],"^48",null,"^49",["^[",[null,null]],"^8",1,"^4:",false,"^7",111,"^4;",["^F",[null,"^5;","^5<"]],"^9",111,"^4=",5,"^4>",true,"^42",["^[",["^43",["^[",[["^4B","^5>","^5?","~$k","^4H"]]]]]]],"^Y",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^V",["^F",["~:y","~:else","~:wordsmith.events/window-resized","~:db","~:prev-y","~:wordsmith.events/anim-step","~:words","~:prev-x","~:width","~:cr","~:wordsmith.events/try-word","~:window","~:wordsmith.events/initialize-db","~:wordsmith.events/add-word","~:k","~:dispatch","~:g","~:vx","~:vy","~:word","~:wordsmith.events/set-word","~:error?","~:x","~:height"]],"~:order",["^5M","^5S","^5D","^5R","^5T","^5G","^5P","^5Q","^5K","^5O","^5N","~:x","~:y","^5H","^5E","^5C","^5L","^5I","^5U","~:g","~:k","^5J","^5B","^5F"]],"^12",["^ ","^W",["^F",[]]],"^13",["^ "],"^14",["^Q","^P","^O","^S","^M","^U"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1B",[["^5Y","~:static-fns"],true,["^5Y","~:elide-asserts"],false,["^5Y","~:optimize-constants"],null,["^5Y","^19"],null,["^5Y","~:external-config"],null,["^5Y","~:tooling-config"],null,["^5Y","~:emit-constants"],null,["^5Y","~:load-tests"],null,["^5Y","~:form-size-threshold"],null,["^5Y","~:infer-externs"],true,["^5Y","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5Y","~:fn-invoke-direct"],null,["^5Y","~:source-map"],"/dev/null"]]]