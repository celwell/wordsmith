["^ ","~:output",["^ ","~:js","goog.provide('wordsmith.physics');\ngoog.require('cljs.core');\ngoog.require('wordsmith.util');\nwordsmith.physics.velocity = (function wordsmith$physics$velocity(p__52303){\nvar vec__52304 = p__52303;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52304,(0),null);\nvar map__52307 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52304,(1),null);\nvar map__52307__$1 = (((((!((map__52307 == null))))?(((((map__52307.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52307.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52307):map__52307);\nvar word = map__52307__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52307__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52307__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52307__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52307__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(word,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489),x),new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167),y),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cljs.core._PLUS_,vx),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),cljs.core._PLUS_,vy)], null);\n});\nwordsmith.physics.gravity = (function wordsmith$physics$gravity(p__52309,p__52310){\nvar map__52311 = p__52309;\nvar map__52311__$1 = (((((!((map__52311 == null))))?(((((map__52311.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52311.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52311):map__52311);\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52311__$1,new cljs.core.Keyword(null,\"g\",\"g\",1738089905));\nvar vec__52312 = p__52310;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52312,(0),null);\nvar word = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52312,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.update.cljs$core$IFn$_invoke$arity$4(word,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core._PLUS_,g)], null);\n});\nwordsmith.physics.friction = (function wordsmith$physics$friction(p__52316,p__52317){\nvar map__52318 = p__52316;\nvar map__52318__$1 = (((((!((map__52318 == null))))?(((((map__52318.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52318.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52318):map__52318);\nvar window = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52318__$1,new cljs.core.Keyword(null,\"window\",\"window\",724519534));\nvar k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52318__$1,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393));\nvar vec__52319 = p__52317;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52319,(0),null);\nvar map__52322 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52319,(1),null);\nvar map__52322__$1 = (((((!((map__52322 == null))))?(((((map__52322.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52322.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52322):map__52322);\nvar word = map__52322__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52322__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52322__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar map__52325 = window;\nvar map__52325__$1 = (((((!((map__52325 == null))))?(((((map__52325.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52325.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52325):map__52325);\nvar window_width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52325__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar window_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52325__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar half_word_width = wordsmith.util.half_word_width(word_key);\nvar half_word_height = wordsmith.util.half_word_height(word_key);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,(function (){var G__52327 = word;\nvar G__52327__$1 = ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((y - half_word_height),(0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((y + half_word_height),window_height))))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__52327,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),cljs.core._STAR_,k):G__52327);\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((x - half_word_width),(0))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((x + half_word_width),window_width)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__52327__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),cljs.core._STAR_,k);\n} else {\nreturn G__52327__$1;\n}\n})()], null);\n});\nwordsmith.physics.border = (function wordsmith$physics$border(p__52328,p__52329){\nvar map__52330 = p__52328;\nvar map__52330__$1 = (((((!((map__52330 == null))))?(((((map__52330.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52330.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52330):map__52330);\nvar window = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52330__$1,new cljs.core.Keyword(null,\"window\",\"window\",724519534));\nvar cr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52330__$1,new cljs.core.Keyword(null,\"cr\",\"cr\",-1019028853));\nvar vec__52331 = p__52329;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52331,(0),null);\nvar map__52334 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52331,(1),null);\nvar map__52334__$1 = (((((!((map__52334 == null))))?(((((map__52334.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52334.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52334):map__52334);\nvar word = map__52334__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52334__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52334__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52334__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52334__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar map__52337 = window;\nvar map__52337__$1 = (((((!((map__52337 == null))))?(((((map__52337.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52337.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52337):map__52337);\nvar window_width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52337__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar window_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52337__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar half_word_width = wordsmith.util.half_word_width(word_key);\nvar half_word_height = wordsmith.util.half_word_height(word_key);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,(function (){var G__52339 = word;\nvar G__52339__$1 = ((((x + half_word_width) > window_width))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__52339,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((vx * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(window_width - half_word_width)], 0)):G__52339);\nvar G__52339__$2 = ((((y + half_word_height) > window_height))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__52339__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((vy * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(window_height - half_word_height)], 0)):G__52339__$1);\nvar G__52339__$3 = ((((x - half_word_width) < (0)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__52339__$2,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((vx * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"x\",\"x\",2099068185),half_word_width], 0)):G__52339__$2);\nif(((y - half_word_height) < (0))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__52339__$3,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((vy * (-1)) * cr),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),half_word_height], 0));\n} else {\nreturn G__52339__$3;\n}\n})()], null);\n});\nwordsmith.physics.neighbors = (function wordsmith$physics$neighbors(word_key,words){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,word_key),cljs.core.key),words);\n});\nwordsmith.physics.intersecting_QMARK_ = (function wordsmith$physics$intersecting_QMARK_(w_top_edge,w_right_edge,w_bottom_edge,w_left_edge,nw_top_edge,nw_right_edge,nw_bottom_edge,nw_left_edge){\nreturn (((((((nw_top_edge < w_top_edge)) && ((w_top_edge < nw_bottom_edge)))) || ((((nw_bottom_edge > w_bottom_edge)) && ((w_bottom_edge > nw_top_edge)))))) && ((((((nw_right_edge > w_right_edge)) && ((w_right_edge > nw_left_edge)))) || ((((nw_left_edge < w_left_edge)) && ((w_left_edge < nw_right_edge)))))));\n});\nwordsmith.physics.solve_collision = (function wordsmith$physics$solve_collision(word,neighbor,w_key,k,cr){\nvar map__52340 = word;\nvar map__52340__$1 = (((((!((map__52340 == null))))?(((((map__52340.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52340.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52340):map__52340);\nvar w_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar w_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar w_vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar w_vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar w_prev_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489));\nvar w_prev_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52340__$1,new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167));\nvar vec__52341 = neighbor;\nvar nw_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52341,(0),null);\nvar map__52344 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52341,(1),null);\nvar map__52344__$1 = (((((!((map__52344 == null))))?(((((map__52344.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52344.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52344):map__52344);\nvar nw_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar nw_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar nw_vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar nw_vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nvar nw_prev_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"prev-x\",\"prev-x\",253040489));\nvar nw_prev_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52344__$1,new cljs.core.Keyword(null,\"prev-y\",\"prev-y\",1338732167));\nvar half_w_width = wordsmith.util.half_word_width(w_key);\nvar half_w_height = wordsmith.util.half_word_height(w_key);\nvar half_nw_width = wordsmith.util.half_word_width(nw_key);\nvar half_nw_height = wordsmith.util.half_word_height(nw_key);\nvar w_top_edge = (w_y - half_w_height);\nvar w_right_edge = (w_x + half_w_width);\nvar w_bottom_edge = (w_y + half_w_height);\nvar w_left_edge = (w_x - half_w_width);\nvar nw_top_edge = (nw_y - half_nw_height);\nvar nw_right_edge = (nw_x + half_nw_width);\nvar nw_bottom_edge = (nw_y + half_nw_height);\nvar nw_left_edge = (nw_x - half_nw_width);\nvar w_prev_top_edge = (w_prev_y - half_w_height);\nvar w_prev_right_edge = (w_prev_x + half_w_width);\nvar w_prev_bottom_edge = (w_prev_y + half_w_height);\nvar w_prev_left_edge = (w_prev_x - half_w_width);\nvar nw_prev_top_edge = (nw_prev_y - half_nw_height);\nvar nw_prev_right_edge = (nw_prev_x + half_nw_width);\nvar nw_prev_bottom_edge = (nw_prev_y + half_nw_height);\nvar nw_prev_left_edge = (nw_prev_x - half_nw_width);\nvar intersects_QMARK_ = wordsmith.physics.intersecting_QMARK_(w_top_edge,w_right_edge,w_bottom_edge,w_left_edge,nw_top_edge,nw_right_edge,nw_bottom_edge,nw_left_edge);\nif(((intersects_QMARK_) && ((w_bottom_edge > nw_top_edge)) && ((!((w_prev_bottom_edge > nw_prev_top_edge)))) && ((w_vy > (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(w_y - w_vy),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),((Math.abs(w_vy) * (-1)) * cr),new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(w_vx * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_top_edge < nw_bottom_edge)) && ((!((w_prev_top_edge < nw_prev_bottom_edge)))) && ((w_vy < (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(w_y - w_vy),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(Math.abs(w_vy) * cr),new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(w_vx * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_right_edge > nw_left_edge)) && ((!((w_prev_right_edge > nw_prev_left_edge)))) && ((w_vx > (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(w_x - w_vx),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),((Math.abs(w_vx) * (-1)) * cr),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(w_vy * k)], 0));\n} else {\nif(((intersects_QMARK_) && ((w_left_edge < nw_right_edge)) && ((!((w_prev_left_edge < nw_prev_right_edge)))) && ((w_vx < (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(word,new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(w_x - w_vx),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462),(Math.abs(w_vx) * cr),new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997),(w_vy * k)], 0));\n} else {\nreturn word;\n\n}\n}\n}\n}\n});\nwordsmith.physics.collisions = (function wordsmith$physics$collisions(p__52347,p__52348){\nvar map__52349 = p__52347;\nvar map__52349__$1 = (((((!((map__52349 == null))))?(((((map__52349.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52349.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52349):map__52349);\nvar words = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52349__$1,new cljs.core.Keyword(null,\"words\",\"words\",1924933001));\nvar k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52349__$1,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393));\nvar cr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52349__$1,new cljs.core.Keyword(null,\"cr\",\"cr\",-1019028853));\nvar vec__52350 = p__52348;\nvar word_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52350,(0),null);\nvar map__52353 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__52350,(1),null);\nvar map__52353__$1 = (((((!((map__52353 == null))))?(((((map__52353.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__52353.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__52353):map__52353);\nvar word = map__52353__$1;\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52353__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52353__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar vx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52353__$1,new cljs.core.Keyword(null,\"vx\",\"vx\",-1685168462));\nvar vy = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__52353__$1,new cljs.core.Keyword(null,\"vy\",\"vy\",-2018509997));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word_key,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (map__52349,map__52349__$1,words,k,cr,vec__52350,word_key,map__52353,map__52353__$1,word,x,y,vx,vy){\nreturn (function (w,neighbor){\nreturn wordsmith.physics.solve_collision(w,neighbor,word_key,k,cr);\n});})(map__52349,map__52349__$1,words,k,cr,vec__52350,word_key,map__52353,map__52353__$1,word,x,y,vx,vy))\n,word,wordsmith.physics.neighbors(word_key,words))], null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","wordsmith/physics.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$wordsmith.physics","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$wordsmith.util","^M","~$util","^M","~$cljs.core","^O","~$goog","^P"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^H",["^V",["^R",["^M","~:as","^N"]]]]],"~:flags",["^ ","^R",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","wordsmith/physics.cljs"],"~:compiled-at",1606343005640,"~:resource-name","wordsmith/physics.cljs","~:warnings",[],"~:source","(ns wordsmith.physics\n  (:require [wordsmith.util :as util]))\n\n(defn velocity\n  [[word-key {:keys [x y vx vy] :as word}]]\n  [word-key (-> word\n                (assoc :prev-x x)\n                (assoc :prev-y y)\n                (update :x + vx)\n                (update :y + vy))])\n\n(defn gravity\n  [{:keys [g]} [word-key word]]\n  [word-key (update word :vy + g)])\n\n(defn friction\n  [{:keys [window k]} [word-key {:keys [x y] :as word}]]\n  (let [{window-width :width\n         window-height :height} window\n        half-word-width (util/half-word-width word-key)\n        half-word-height (util/half-word-height word-key)]\n    [word-key (cond-> word\n                (or (= (- y half-word-height) 0)\n                    (= (+ y half-word-height) window-height)) (update :vx * k)\n                (or (= (- x half-word-width) 0)\n                    (= (+ x half-word-width) window-width))   (update :vy * k))]))\n\n(defn border\n  [{:keys [window cr]} [word-key {:keys [x y vx vy] :as word}]]\n  (let [{window-width :width\n         window-height :height} window\n        half-word-width (util/half-word-width word-key)\n        half-word-height (util/half-word-height word-key)]\n    [word-key (cond-> word\n                (> (+ x half-word-width) window-width)   (assoc :vx (* vx -1 cr)\n                                                                :x (- window-width half-word-width))\n                (> (+ y half-word-height) window-height) (assoc :vy (* vy -1 cr)\n                                                                :y (- window-height half-word-height))\n                (< (- x half-word-width) 0)              (assoc :vx (* vx -1 cr)\n                                                                :x half-word-width)\n                (< (- y half-word-height) 0)             (assoc :vy (* vy -1 cr)\n                                                                :y half-word-height))]))\n\n(defn neighbors\n  [word-key words]\n  (remove (comp (partial = word-key) key) words))\n\n(defn intersecting?\n  [w-top-edge w-right-edge w-bottom-edge w-left-edge\n   nw-top-edge nw-right-edge nw-bottom-edge nw-left-edge]\n  (and (or (< nw-top-edge w-top-edge nw-bottom-edge)\n           (> nw-bottom-edge w-bottom-edge nw-top-edge))\n       (or (> nw-right-edge w-right-edge nw-left-edge)\n           (< nw-left-edge w-left-edge nw-right-edge))))\n\n(defn solve-collision\n  [word neighbor w-key k cr]\n  ;; w-  prefix means \"word-\"\n  ;; nw- prefix means \"neighbor-word-\"\n  (let [{w-x :x   w-y :y\n         w-vx :vx w-vy :vy\n         w-prev-x :prev-x w-prev-y :prev-y} word\n        [nw-key {nw-x :x nw-y :y\n                 nw-vx :vx nw-vy :vy\n                 nw-prev-x :prev-x nw-prev-y :prev-y}] neighbor\n        half-w-width   (util/half-word-width w-key)\n        half-w-height  (util/half-word-height w-key)\n        half-nw-width  (util/half-word-width nw-key)\n        half-nw-height (util/half-word-height nw-key)\n\n        w-top-edge     (- w-y half-w-height)\n        w-right-edge   (+ w-x half-w-width)\n        w-bottom-edge  (+ w-y half-w-height)\n        w-left-edge    (- w-x half-w-width)\n        nw-top-edge    (- nw-y half-nw-height)\n        nw-right-edge  (+ nw-x half-nw-width)\n        nw-bottom-edge (+ nw-y half-nw-height)\n        nw-left-edge   (- nw-x half-nw-width)\n\n        w-prev-top-edge     (- w-prev-y half-w-height)\n        w-prev-right-edge   (+ w-prev-x half-w-width)\n        w-prev-bottom-edge  (+ w-prev-y half-w-height)\n        w-prev-left-edge    (- w-prev-x half-w-width)\n        nw-prev-top-edge    (- nw-prev-y half-nw-height)\n        nw-prev-right-edge  (+ nw-prev-x half-nw-width)\n        nw-prev-bottom-edge (+ nw-prev-y half-nw-height)\n        nw-prev-left-edge   (- nw-prev-x half-nw-width)\n\n        ;; relative velocities\n        ;; dvx (- vx1 vx2)\n        ;; dvy (- vy1 vy2)\n\n        intersects? (intersecting? w-top-edge\n                                   w-right-edge\n                                   w-bottom-edge\n                                   w-left-edge\n                                   nw-top-edge\n                                   nw-right-edge\n                                   nw-bottom-edge\n                                   nw-left-edge)]\n    (cond\n      (and intersects?\n           (> w-bottom-edge nw-top-edge)\n           (not (> w-prev-bottom-edge nw-prev-top-edge))\n           (pos? w-vy))\n      (assoc word\n             :y  (- w-y w-vy)\n             :vy (* (Math/abs w-vy) -1 cr)\n             :vx (* w-vx k))\n\n      (and intersects?\n           (< w-top-edge nw-bottom-edge)\n           (not (< w-prev-top-edge nw-prev-bottom-edge))\n           (neg? w-vy))\n      (assoc word\n             :y  (- w-y w-vy)\n             :vy (* (Math/abs w-vy) cr)\n             :vx (* w-vx k))\n      \n      (and intersects?\n           (> w-right-edge nw-left-edge)\n           (not (> w-prev-right-edge nw-prev-left-edge))\n           (pos? w-vx))\n      (assoc word\n             :x  (- w-x w-vx)\n             :vx (* (Math/abs w-vx) -1 cr)\n             :vy (* w-vy k))\n\n      (and intersects?\n           (< w-left-edge nw-right-edge)\n           (not (< w-prev-left-edge nw-prev-right-edge))\n           (neg? w-vx))\n      (assoc word\n             :x  (- w-x w-vx)\n             :vx (* (Math/abs w-vx) cr)\n             :vy (* w-vy k))\n\n      :else word)))\n\n(defn collisions\n  [{:keys [words k cr]} [word-key {:keys [x y vx vy] :as word}]]\n  [word-key (reduce (fn [w neighbor]\n                      (solve-collision w neighbor word-key k cr))\n                    word\n                    (neighbors word-key words))])\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__52303","vec__52304","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","map__52307","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","wordsmith.physics/velocity","word-key","x","y","vx","vy","word","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/+","p__52309","p__52310","map__52311","vec__52312","wordsmith.physics/gravity","g","p__52316","p__52317","map__52318","vec__52319","map__52322","wordsmith.physics/friction","window","k","map__52325","window-width","window-height","half-word-width","wordsmith.util/half-word-width","half-word-height","wordsmith.util/half-word-height","G__52327","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*","p__52328","p__52329","map__52330","vec__52331","map__52334","wordsmith.physics/border","cr","map__52337","G__52339","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","wordsmith.physics/neighbors","words","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/=","cljs.core/key","wordsmith.physics/intersecting?","w-top-edge","w-right-edge","w-bottom-edge","w-left-edge","nw-top-edge","nw-right-edge","nw-bottom-edge","nw-left-edge","wordsmith.physics/solve-collision","neighbor","w-key","map__52340","vec__52341","map__52344","w-x","w-y","w-vx","w-vy","w-prev-x","w-prev-y","nw-key","nw-x","nw-y","nw-vx","nw-vy","nw-prev-x","nw-prev-y","half-w-width","half-w-height","half-nw-width","half-nw-height","w-prev-top-edge","w-prev-right-edge","w-prev-bottom-edge","w-prev-left-edge","nw-prev-top-edge","nw-prev-right-edge","nw-prev-bottom-edge","nw-prev-left-edge","intersects?","Math/abs","p__52347","p__52348","map__52349","vec__52350","map__52353","wordsmith.physics/collisions","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","w"]]],"~:cache-keys",["~#cmap",[["^11","goog/math/math.js"],[1589754141274,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^P","~$goog.array","~$goog.asserts"]]],["^11","goog/array/array.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1C"]]],["^11","goog/debug/error.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/dom/nodetype.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/object/object.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],"~:SHADOW-TIMESTAMP",[1589754142000,1589754138000],["^11","goog/math/long.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1C","~$goog.reflect"]]],["^11","goog/string/internal.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/functions/functions.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/structs/map.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^11","wordsmith/util.cljs"],[1606342864769,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^O"]]],["^11","goog/asserts/asserts.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^11","goog/uri/uri.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1B","^1C","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/base.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",[]]],["^11","goog/structs/structs.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1B","~$goog.object"]]],["^11","goog/string/string.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","~$goog.string.internal"]]],["^11","goog/reflect/reflect.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/string/stringbuffer.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/iter/iter.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1B","^1C","~$goog.functions","~$goog.math"]]],["^11","cljs/core.cljs"],[1589754138780,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["~$goog.math.Long","~$goog.math.Integer","^1J","^1P","^1B","~$goog.Uri","~$goog.string.StringBuffer"]]],["^11","goog/math/integer.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P"]]],["^11","goog/uri/utils.js"],[1589754141274,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^1B","^1C","^1J"]]],["^11","wordsmith/physics.cljs"],[1606343005282,"^1>",["^ ","^1?",null,"^1@",["^F",[]],"^1A",["^P","^O","^M"]]]]],"~:clj-info",["^ ","jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1562180327000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1562179875000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1589754137000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1582516265000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1589754138000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1589754138000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","wordsmith/physics.cljs","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","^P","^P"],"^Q",["^F",["^R"]],"^S",null,"~:defs",["^ ","~$velocity",["^ ","~:protocol-inline",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",4,"^8",7,"^9",4,"^:",15,"~:arglists",["^V",["~$quote",["^V",[[["~$word-key",["^ ","~:keys",["~$x","~$y","~$vx","~$vy"],"^X","~$word"]]]]]]]],"^G","~$wordsmith.physics/velocity","^6","wordsmith/physics.cljs","^:",15,"~:method-params",["^V",[["~$p__52303"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",4,"~:ret-tag","~$cljs.core/IVector","^9",4,"~:max-fixed-arity",1,"~:fn-var",true,"^2J",["^V",["^2K",["^V",[[["^2L",["^ ","^2M",["~$x","~$y","^2N","^2O"],"^X","^2P"]]]]]]]],"~$gravity",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",12,"^8",7,"^9",12,"^:",14,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["~$g"]],["^2L","^2P"]]]]]]],"^G","~$wordsmith.physics/gravity","^6","wordsmith/physics.cljs","^:",14,"^2R",["^V",[["~$p__52309","~$p__52310"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",12,"^2W","^2X","^9",12,"^2Y",2,"^2Z",true,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["~$g"]],["^2L","^2P"]]]]]]],"~$friction",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",16,"^8",7,"^9",16,"^:",15,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["~$window","~$k"]],["^2L",["^ ","^2M",["~$x","~$y"],"^X","^2P"]]]]]]]],"^G","~$wordsmith.physics/friction","^6","wordsmith/physics.cljs","^:",15,"^2R",["^V",[["~$p__52316","~$p__52317"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",16,"^2W","^2X","^9",16,"^2Y",2,"^2Z",true,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["^34","~$k"]],["^2L",["^ ","^2M",["~$x","~$y"],"^X","^2P"]]]]]]]],"~$border",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",28,"^8",7,"^9",28,"^:",13,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["^34","~$cr"]],["^2L",["^ ","^2M",["~$x","~$y","^2N","^2O"],"^X","^2P"]]]]]]]],"^G","~$wordsmith.physics/border","^6","wordsmith/physics.cljs","^:",13,"^2R",["^V",[["~$p__52328","~$p__52329"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",28,"^2W","^2X","^9",28,"^2Y",2,"^2Z",true,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["^34","^39"]],["^2L",["^ ","^2M",["~$x","~$y","^2N","^2O"],"^X","^2P"]]]]]]]],"~$neighbors",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",44,"^8",7,"^9",44,"^:",16,"^2J",["^V",["^2K",["^V",[["^2L","~$words"]]]]]],"^G","~$wordsmith.physics/neighbors","^6","wordsmith/physics.cljs","^:",16,"^2R",["^V",[["^2L","^3>"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",44,"^2W","~$cljs.core/LazySeq","^9",44,"^2Y",2,"^2Z",true,"^2J",["^V",["^2K",["^V",[["^2L","^3>"]]]]]],"~$intersecting?",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",48,"^8",7,"^9",48,"^:",20,"^2J",["^V",["^2K",["^V",[["~$w-top-edge","~$w-right-edge","~$w-bottom-edge","~$w-left-edge","~$nw-top-edge","~$nw-right-edge","~$nw-bottom-edge","~$nw-left-edge"]]]]]],"^G","~$wordsmith.physics/intersecting?","^6","wordsmith/physics.cljs","^:",20,"^2R",["^V",[["^3B","^3C","^3D","^3E","^3F","^3G","^3H","^3I"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",48,"^2W","~$boolean","^9",48,"^2Y",8,"^2Z",true,"^2J",["^V",["^2K",["^V",[["^3B","^3C","^3D","^3E","^3F","^3G","^3H","^3I"]]]]]],"~$solve-collision",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",56,"^8",7,"^9",56,"^:",22,"^2J",["^V",["^2K",["^V",[["^2P","~$neighbor","~$w-key","~$k","^39"]]]]]],"^G","~$wordsmith.physics/solve-collision","^6","wordsmith/physics.cljs","^:",22,"^2R",["^V",[["^2P","^3M","^3N","~$k","^39"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",56,"^2W",["^F",[null,"~$clj","~$any"]],"^9",56,"^2Y",5,"^2Z",true,"^2J",["^V",["^2K",["^V",[["^2P","^3M","^3N","~$k","^39"]]]]]],"~$collisions",["^ ","^2I",null,"^5",["^ ","^6","wordsmith/physics.cljs","^7",140,"^8",7,"^9",140,"^:",17,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["^3>","~$k","^39"]],["^2L",["^ ","^2M",["~$x","~$y","^2N","^2O"],"^X","^2P"]]]]]]]],"^G","~$wordsmith.physics/collisions","^6","wordsmith/physics.cljs","^:",17,"^2R",["^V",[["~$p__52347","~$p__52348"]]],"^2T",null,"^2U",["^V",[null,null]],"^8",1,"^2V",false,"^7",140,"^2W","^2X","^9",140,"^2Y",2,"^2Z",true,"^2J",["^V",["^2K",["^V",[[["^ ","^2M",["^3>","~$k","^39"]],["^2L",["^ ","^2M",["~$x","~$y","^2N","^2O"],"^X","^2P"]]]]]]]]],"^T",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^F",["~:y","~:else","~:prev-y","~:words","~:prev-x","~:width","~:cr","~:window","~:k","~:g","~:vx","~:vy","~:x","~:height"]],"~:order",["~:x","~:y","^42","^43","^3Z","^3X","~:g","^41","~:k","^3[","^44","^40","^3W","^3Y"]],"^Y",["^ ","^R",["^F",[]]],"^Z",["^ "],"^[",["^P","^O","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1=",[["^48","~:static-fns"],true,["^48","~:elide-asserts"],false,["^48","~:optimize-constants"],null,["^48","^14"],null,["^48","~:external-config"],null,["^48","~:tooling-config"],null,["^48","~:emit-constants"],null,["^48","~:load-tests"],null,["^48","~:form-size-threshold"],null,["^48","~:infer-externs"],true,["^48","^16"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^48","~:fn-invoke-direct"],null,["^48","~:source-map"],"/dev/null"]]]