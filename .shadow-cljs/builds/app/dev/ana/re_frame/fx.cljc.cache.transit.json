["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('re_frame.router');\ngoog.require('re_frame.db');\ngoog.require('re_frame.interceptor');\ngoog.require('re_frame.interop');\ngoog.require('re_frame.events');\ngoog.require('re_frame.registrar');\ngoog.require('re_frame.loggers');\ngoog.require('re_frame.trace');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__51861 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__51862 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\nre_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__51862;\n\ntry{try{var seq__51863 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__51864 = null;\nvar count__51865 = (0);\nvar i__51866 = (0);\nwhile(true){\nif((i__51866 < count__51865)){\nvar vec__51873 = chunk__51864.cljs$core$IIndexed$_nth$arity$2(null,i__51866);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51873,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51873,(1),null);\nvar temp__5733__auto___51917 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___51917)){\nvar effect_fn_51918 = temp__5733__auto___51917;\n(effect_fn_51918.cljs$core$IFn$_invoke$arity$1 ? effect_fn_51918.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_51918.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__51923 = seq__51863;\nvar G__51924 = chunk__51864;\nvar G__51925 = count__51865;\nvar G__51926 = (i__51866 + (1));\nseq__51863 = G__51923;\nchunk__51864 = G__51924;\ncount__51865 = G__51925;\ni__51866 = G__51926;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__51863);\nif(temp__5735__auto__){\nvar seq__51863__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__51863__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__51863__$1);\nvar G__51927 = cljs.core.chunk_rest(seq__51863__$1);\nvar G__51928 = c__4550__auto__;\nvar G__51929 = cljs.core.count(c__4550__auto__);\nvar G__51930 = (0);\nseq__51863 = G__51927;\nchunk__51864 = G__51928;\ncount__51865 = G__51929;\ni__51866 = G__51930;\ncontinue;\n} else {\nvar vec__51876 = cljs.core.first(seq__51863__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51876,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51876,(1),null);\nvar temp__5733__auto___51931 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___51931)){\nvar effect_fn_51935 = temp__5733__auto___51931;\n(effect_fn_51935.cljs$core$IFn$_invoke$arity$1 ? effect_fn_51935.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_51935.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__51936 = cljs.core.next(seq__51863__$1);\nvar G__51937 = null;\nvar G__51938 = (0);\nvar G__51939 = (0);\nseq__51863 = G__51936;\nchunk__51864 = G__51937;\ncount__51865 = G__51938;\ni__51866 = G__51939;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__51594__auto___51940 = re_frame.interop.now();\nvar duration__51595__auto___51941 = (end__51594__auto___51940 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__51595__auto___51941,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__51594__auto___51940);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__51861;\n}} else {\nvar seq__51879 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__51880 = null;\nvar count__51881 = (0);\nvar i__51882 = (0);\nwhile(true){\nif((i__51882 < count__51881)){\nvar vec__51889 = chunk__51880.cljs$core$IIndexed$_nth$arity$2(null,i__51882);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51889,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51889,(1),null);\nvar temp__5733__auto___51945 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___51945)){\nvar effect_fn_51946 = temp__5733__auto___51945;\n(effect_fn_51946.cljs$core$IFn$_invoke$arity$1 ? effect_fn_51946.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_51946.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__51951 = seq__51879;\nvar G__51952 = chunk__51880;\nvar G__51953 = count__51881;\nvar G__51954 = (i__51882 + (1));\nseq__51879 = G__51951;\nchunk__51880 = G__51952;\ncount__51881 = G__51953;\ni__51882 = G__51954;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__51879);\nif(temp__5735__auto__){\nvar seq__51879__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__51879__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__51879__$1);\nvar G__51955 = cljs.core.chunk_rest(seq__51879__$1);\nvar G__51956 = c__4550__auto__;\nvar G__51957 = cljs.core.count(c__4550__auto__);\nvar G__51958 = (0);\nseq__51879 = G__51955;\nchunk__51880 = G__51956;\ncount__51881 = G__51957;\ni__51882 = G__51958;\ncontinue;\n} else {\nvar vec__51892 = cljs.core.first(seq__51879__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51892,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__51892,(1),null);\nvar temp__5733__auto___51959 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___51959)){\nvar effect_fn_51960 = temp__5733__auto___51959;\n(effect_fn_51960.cljs$core$IFn$_invoke$arity$1 ? effect_fn_51960.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_51960.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__51961 = cljs.core.next(seq__51879__$1);\nvar G__51962 = null;\nvar G__51963 = (0);\nvar G__51964 = (0);\nseq__51879 = G__51961;\nchunk__51880 = G__51962;\ncount__51881 = G__51963;\ni__51882 = G__51964;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__51895 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__51896 = null;\nvar count__51897 = (0);\nvar i__51898 = (0);\nwhile(true){\nif((i__51898 < count__51897)){\nvar map__51903 = chunk__51896.cljs$core$IIndexed$_nth$arity$2(null,i__51898);\nvar map__51903__$1 = (((((!((map__51903 == null))))?(((((map__51903.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__51903.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__51903):map__51903);\nvar effect = map__51903__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__51903__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__51903__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__51895,chunk__51896,count__51897,i__51898,map__51903,map__51903__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__51895,chunk__51896,count__51897,i__51898,map__51903,map__51903__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__51969 = seq__51895;\nvar G__51970 = chunk__51896;\nvar G__51971 = count__51897;\nvar G__51972 = (i__51898 + (1));\nseq__51895 = G__51969;\nchunk__51896 = G__51970;\ncount__51897 = G__51971;\ni__51898 = G__51972;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__51895);\nif(temp__5735__auto__){\nvar seq__51895__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__51895__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__51895__$1);\nvar G__51976 = cljs.core.chunk_rest(seq__51895__$1);\nvar G__51977 = c__4550__auto__;\nvar G__51978 = cljs.core.count(c__4550__auto__);\nvar G__51979 = (0);\nseq__51895 = G__51976;\nchunk__51896 = G__51977;\ncount__51897 = G__51978;\ni__51898 = G__51979;\ncontinue;\n} else {\nvar map__51905 = cljs.core.first(seq__51895__$1);\nvar map__51905__$1 = (((((!((map__51905 == null))))?(((((map__51905.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__51905.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__51905):map__51905);\nvar effect = map__51905__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__51905__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__51905__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__51895,chunk__51896,count__51897,i__51898,map__51905,map__51905__$1,effect,ms,dispatch,seq__51895__$1,temp__5735__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__51895,chunk__51896,count__51897,i__51898,map__51905,map__51905__$1,effect,ms,dispatch,seq__51895__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__51980 = cljs.core.next(seq__51895__$1);\nvar G__51981 = null;\nvar G__51982 = (0);\nvar G__51983 = (0);\nseq__51895 = G__51980;\nchunk__51896 = G__51981;\ncount__51897 = G__51982;\ni__51898 = G__51983;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__51907 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__51908 = null;\nvar count__51909 = (0);\nvar i__51910 = (0);\nwhile(true){\nif((i__51910 < count__51909)){\nvar event = chunk__51908.cljs$core$IIndexed$_nth$arity$2(null,i__51910);\nre_frame.router.dispatch(event);\n\n\nvar G__51987 = seq__51907;\nvar G__51988 = chunk__51908;\nvar G__51989 = count__51909;\nvar G__51990 = (i__51910 + (1));\nseq__51907 = G__51987;\nchunk__51908 = G__51988;\ncount__51909 = G__51989;\ni__51910 = G__51990;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__51907);\nif(temp__5735__auto__){\nvar seq__51907__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__51907__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__51907__$1);\nvar G__51991 = cljs.core.chunk_rest(seq__51907__$1);\nvar G__51992 = c__4550__auto__;\nvar G__51993 = cljs.core.count(c__4550__auto__);\nvar G__51994 = (0);\nseq__51907 = G__51991;\nchunk__51908 = G__51992;\ncount__51909 = G__51993;\ni__51910 = G__51994;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__51907__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__51995 = cljs.core.next(seq__51907__$1);\nvar G__51996 = null;\nvar G__51997 = (0);\nvar G__51998 = (0);\nseq__51907 = G__51995;\nchunk__51908 = G__51996;\ncount__51909 = G__51997;\ni__51910 = G__51998;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__51911 = cljs.core.seq(value);\nvar chunk__51912 = null;\nvar count__51913 = (0);\nvar i__51914 = (0);\nwhile(true){\nif((i__51914 < count__51913)){\nvar event = chunk__51912.cljs$core$IIndexed$_nth$arity$2(null,i__51914);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__51999 = seq__51911;\nvar G__52000 = chunk__51912;\nvar G__52001 = count__51913;\nvar G__52002 = (i__51914 + (1));\nseq__51911 = G__51999;\nchunk__51912 = G__52000;\ncount__51913 = G__52001;\ni__51914 = G__52002;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__51911);\nif(temp__5735__auto__){\nvar seq__51911__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__51911__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__51911__$1);\nvar G__52003 = cljs.core.chunk_rest(seq__51911__$1);\nvar G__52004 = c__4550__auto__;\nvar G__52005 = cljs.core.count(c__4550__auto__);\nvar G__52006 = (0);\nseq__51911 = G__52003;\nchunk__51912 = G__52004;\ncount__51913 = G__52005;\ni__51914 = G__52006;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__51911__$1);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__52007 = cljs.core.next(seq__51911__$1);\nvar G__52008 = null;\nvar G__52009 = (0);\nvar G__52010 = (0);\nseq__51911 = G__52007;\nchunk__51912 = G__52008;\ncount__51913 = G__52009;\ni__51914 = G__52010;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn (clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(value) : clear_event.call(null,value));\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^U","~$re-frame.interceptor","^V","~$re-frame.events","^W","~$re-frame.trace","^X","~$re-frame.registrar","^Y","~$cljs.core","^Z","~$goog","^[","~$router","~$re-frame.router","^11","^11","~$trace","^X","~$events","^W","~$re-frame.loggers","^14","~$re-frame.db","^15"],"~:seen",["^N",["~:require"]],"~:uses",["^ ","~$app-db","^15","~$->interceptor","^V","~$set-timeout!","^U","~$get-handler","^Y","~$clear-handlers","^Y","~$register-handler","^Y","~$console","^14"],"~:require-macros",["^ ","^X","^X","^12","^X","^Z","^Z"],"~:form",["~#list",["~$ns","^P",["^1B",["^17",["^11","~:as","^10"],["^15","~:refer",["^19"]],["^V","^1E",["^1:"]],["^U","^1E",["^1;"]],["^W","^1D","^13"],["^Y","^1E",["^1<","^1=","^1>"]],["^14","^1E",["^1?"]],["^X","^1D","^12","~:include-macros",true]]]]],"~:flags",["^ ","^17",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1567464418604,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;;;;;;;;AAcA,AAAA,AAAKA;AACL,AAAQ,AAACE,AAAAA,AAAAA,AAAyBF,AAAAA;AAAlC;AAAA,AAAA,AAAA,AAAAC,AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAME,AAwBHC,AAAGC;AAxBN,AAyBE,AAACC,AAAiBN,AAAKI,AAAGC;;AAI5B;;;;;;;;;;;;;;;;;;;;;;AAAKE,AAqBH,AAAA,AAAA,AAAA,AAACC,AAEQ,AACGC;AADH,AAEE,AAAA,AAAAC;AAAA,AAAAC,AAAAC;AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAF,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAEE,AAAAU,AAAA,AAAAC,AAAkC,AAAA,AAAUf;AAA5CgB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASiB;AAAT,AAAAhB,AAAAD,AAAA,AAAA,AAAoBkB;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAtB;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAG,AAAA,AAAAN,AAAAD;AAAA,AAAA,AAAAO;AAAA,AAAA,AAAAP,AAAAO;AAAA,AAAA,AAAA,AAAAC,AAAAR;AAAA,AAAAS,AAAA,AAAAC,AAAAV;AAAA,AAAA,AAAA,AAAAW,AAAAX;AAAAS;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAd;AAAA,AAAAM,AAAAO,AAAA,AAAA,AAASS;AAAT,AAAAhB,AAAAO,AAAA,AAAA,AAAoBU;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAf;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAFF,AAAA,AAAA,AAAAb;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAAD;;AAAA,AAEE,AAAA4B,AAAA,AAAAf,AAAkC,AAAA,AAAUf;AAA5C+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAb,AAAAc,AAAA,AAAA,AAASE;AAAT,AAAAhB,AAAAc,AAAA,AAAA,AAAoBG;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAN;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAZ,AAAA,AAAAN,AAAAe;AAAA,AAAA,AAAAT;AAAA,AAAA,AAAAS,AAAAT;AAAA,AAAA,AAAA,AAAAC,AAAAQ;AAAA,AAAAP,AAAA,AAAAC,AAAAM;AAAA,AAAA,AAAA,AAAAL,AAAAK;AAAAP;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAY,AAAA,AAAAP,AAAAE;AAAA,AAAAV,AAAAe,AAAA,AAAA,AAASC;AAAT,AAAAhB,AAAAe,AAAA,AAAA,AAAoBE;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAsBf,AAAA,AAACpC,AAEC,AAAKgD;AAAL,AACE,AAAAC,AAAA,AAAA5B,AAAyC,AAACyC,AAAOC,AAAKf;AAAtDE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiCQ;AAAjC,AAAAJ,AAAAJ,AAAA,AAAgBM;AAAhB,AAAAF,AAAAJ,AAAA,AAAmBO;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAAV;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAzB,AAAA,AAAAN,AAAA4B;AAAA,AAAA,AAAAtB;AAAA,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAA,AAAAC,AAAAqB;AAAA,AAAApB,AAAA,AAAAC,AAAAmB;AAAA,AAAA,AAAA,AAAAlB,AAAAkB;AAAApB;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA6B,AAAA,AAAAxB,AAAAe;AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAAA,AAAiCG;AAAjC,AAAAJ,AAAAC,AAAA,AAAgBC;AAAhB,AAAAF,AAAAC,AAAA,AAAmBE;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAA,AAAAxB,AAAAc;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAaJ,AAAA,AAACjD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACmB,AAAQnB;AACf,AAAA,AAAA,AAACD,AAAqFC;;AACtF,AAACkB,AAAgBlB;;;AAgBvB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACoB,AAAYpB;AACnB,AAAA,AAAA,AAACD,AAA2FC;;AAC5F,AAAAqB,AAAA,AAAAhD,AAAc,AAACyC,AAAOC,AAAKf;AAA3BsB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAA7C,AAAA,AAAAN,AAAAgD;AAAA,AAAA,AAAA1C;AAAA,AAAA,AAAA0C,AAAA1C;AAAA,AAAA,AAAA,AAAAC,AAAAyC;AAAA,AAAAxC,AAAA,AAAAC,AAAAuC;AAAA,AAAA,AAAA,AAAAtC,AAAAsC;AAAAxC;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAAmC,AAAQI;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAA,AAAAtC,AAAAkC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAaN,AAAA,AAACrE,AAEC,AAAKgD;AAAL,AACE,AAAM0B,AAAY,AAACC,AAAQC,AAAeC;AAA1C,AACE,AAAI,AAACT,AAAYpB;AACf,AAAA8B,AAAA,AAAAzD,AAAc2B;AAAd+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQR;AAAR,AAAA,AAAqB,AAACC,AAAAA,AAAAA,AAAYD,AAAAA;;AAAlC;AAAA,AAAAK;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAtD,AAAA,AAAAN,AAAAyD;AAAA,AAAA,AAAAnD;AAAA,AAAA,AAAAmD,AAAAnD;AAAA,AAAA,AAAA,AAAAC,AAAAkD;AAAA,AAAAjD,AAAA,AAAAC,AAAAgD;AAAA,AAAA,AAAA,AAAA/C,AAAA+C;AAAAjD;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAA4C,AAAQL;AAAR,AAAA,AAAqB,AAACC,AAAAA,AAAAA,AAAYD,AAAAA;;AAAlC;AAAA,AAAA,AAAAtC,AAAA2C;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AACA,AAACJ,AAAAA,AAAAA,AAAY1B,AAAAA;;;AAUrB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAAA,AAAAkC,AAAaC,AAAOnC;AAC1B,AAACoC,AAAOD,AAAOnC;;AADjB","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__51861","re-frame.trace/*current-trace*","*current-trace*-temp-val__51862","re-frame.trace/start-trace","end__51594__auto__","re-frame.interop/now","duration__51595__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","re-frame.trace/run-tracing-callbacks!","seq__51863","cljs.core/seq","chunk__51864","count__51865","i__51866","vec__51873","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__51876","cljs.core/first","cljs.core/next","seq__51879","chunk__51880","count__51881","i__51882","vec__51889","vec__51892","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","value","seq__51895","chunk__51896","count__51897","i__51898","map__51903","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__51905","ms","dispatch","effect","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__51907","chunk__51908","count__51909","i__51910","event","clear-event","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__51911","chunk__51912","count__51913","i__51914","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1567464284000,1567464284000,1557649037000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1K","reagent/impl/batching.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^1K","goog/dom/tagname.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.dom.HtmlElement"]]],["^1K","goog/math/math.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.array","~$goog.asserts"]]],["^1K","goog/labs/useragent/browser.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1K","re_frame/loggers.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$clojure.set"]]],["^1K","goog/array/array.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2:"]]],["^1X","node_modules/prop-types/checkPropTypes.js"],[1567464284000,1567464284000,1556851731000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1K","reagent/impl/util.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^24","^25","^27"]]],["^1K","re_frame/router.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^W","^U","^14","^X"]]],["^1X","node_modules/fbjs/lib/emptyFunction.js"],[1567464284000,1567464284000,1556851721000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","goog/debug/error.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","re_frame/registrar.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U","^14"]]],["^1X","node_modules/fbjs/lib/emptyObject.js"],[1567464284000,1567464284000,1556851721000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","goog/dom/nodetype.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/cjs/scheduler.development.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","reagent/ratom.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^26","^24","~$reagent.impl.batching","^2>"]]],["^1X","node_modules/scheduler/cjs/scheduler.production.min.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/interop.cljs"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1X","node_modules/create-react-class/factory.js"],[1567464284000,1567464284000,1556851718000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1X","node_modules/react/index.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1K","shadow/js.js"],[1567464284000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/object/object.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","reagent/impl/template.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^?","^27","~$clojure.walk","^26","~$reagent.impl.component","^2@","^2C","^25","^24"]]],["^1X","node_modules/react-dom/cjs/react-dom.production.min.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","^2D","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1567464284000,1550713009000],["^1X","node_modules/react/cjs/react.development.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^2D","~$module$node_modules$prop_types$checkPropTypes"]]],["^1K","re_frame/events.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^15","~$re-frame.utils","^U","^Y","^14","^V","^X"]]],["^1K","goog/math/long.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2:","~$goog.reflect"]]],["^1K","goog/string/internal.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1X","node_modules/fbjs/lib/warning.js"],[1567464284000,1567464284000,1556851721000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1K","goog/functions/functions.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","reagent/impl/component.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^A","^?","^26","^2@","^2C","^25","^24"]]],["^1K","clojure/walk.cljs"],[1550713009000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/structs/map.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","node_modules/scheduler/index.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1K","goog/labs/useragent/engine.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","^2;","~$goog.string"]]],["^1K","goog/asserts/asserts.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1K","goog/uri/uri.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","^2:","^2V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","node_modules/object-assign/index.js"],[1567464284000,1567464284000,1556851718000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/db.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U"]]],["^1K","goog/base.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",[]]],["^1K","goog/structs/structs.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","^2<"]]],["^1K","clojure/string.cljs"],[1550713009000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^2V","~$goog.string.StringBuffer"]]],["^1X","node_modules/create-react-class/index.js"],[1567464284000,1567464284000,1556851718000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","~$module$node_modules$create_react_class$factory"]]],["^1X","node_modules/react/cjs/react.production.min.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^2D"]]],["^1K","goog/debug/entrypointregistry.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2:"]]],["^1K","goog/string/string.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2="]]],["^1K","re_frame/interceptor.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^14","^U","^X","^2>"]]],["^1K","goog/reflect/reflect.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/labs/useragent/util.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2="]]],["^1K","reagent/core.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^?","~$reagent.impl.template","^2K","^26","^2@","^2C","^24","^25","~$reagent.dom"]]],["^1K","goog/string/stringbuffer.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/iter/iter.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","^2:","~$goog.functions","~$goog.math"]]],["^1K","goog/async/nexttick.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^36","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1K","re_frame/utils.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^14"]]],["^1K","reagent/dom.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^C","^26","^34","^2@","^2C","^24","^25"]]],["^1K","re_frame/fx.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]]],["^1X","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1567464284000,1567464284000,1556851731000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","reagent/interop.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/dom/htmlelement.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","cljs/core.cljs"],[1550713009000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["~$goog.math.Long","~$goog.math.Integer","^2V","^2<","^29","~$goog.Uri","^32"]]],["^1K","reagent/debug.cljs"],[1549566819000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/math/integer.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/tracing.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1X","node_modules/react-dom/cjs/react-dom.development.js"],[1567464284000,1567464284000,1557649037000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","^2D","^2N","^2L","~$module$node_modules$scheduler$tracing"]]],["^1K","clojure/set.cljs"],[1550713009000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/uri/utils.js"],[1567464280000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^29","^2:","^2V"]]],["^1X","node_modules/fbjs/lib/invariant.js"],[1567464284000,1567464284000,1556851721000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/trace.cljc"],[1567464282000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U","^14","^36"]]]]],"~:clj-info",["^ ","jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1550123649000,"jar:file:/Users/celwell/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1551299936000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1549566819000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1550713006000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1450170099000,"jar:file:/Users/celwell/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/interop.clj",1567464282000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1550713006000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/core.clj",1549566819000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1550713009000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1549566819000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1550713006000,"jar:file:/Users/celwell/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/trace.cljc",1567464282000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1550713006000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1550713006000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1549566819000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1567464279000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1550713009000,"jar:file:/Users/celwell/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1550713009000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",null,"^M",["^N",[]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^[","^10","^11","^11","^11","^12","^X","^13","^W","^14","^14","^15","^15"],"^16",["^N",["^17"]],"~:shadow/js-access-global",["^N",["Error"]],"^18",["^ ","^19","^15","^1:","^V","^1;","^U","^1<","^Y","^1=","^Y","^1>","^Y","^1?","^14"],"~:defs",["^ ","~$kind",["^ ","^O","~$re-frame.fx/kind","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1B",["~$quote",["^1B",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^O","~$re-frame.fx/reg-fx","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1B",[["^4B","^4C"]]],"~:protocol-impl",null,"~:arglists-meta",["^1B",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^4@",["^1B",["^4A",["^1B",[["^4B","^4C"]]]]],"^4D","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^O","~$re-frame.fx/do-fx","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^4<","~$cljs.core/IMap","^4D","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^1@",["^ ","^X","^X","^12","^X","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^16",["^N",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^54","^4[","^4S","^4Y","^55","^4Z","^4T","^4V","^52","^50","^51","^56","^53","^4X","^4U","^4W","^4R"]],"^1G",["^ ","^17",["^N",[]]],"^1H",["^ "],"^1I",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]],"^R","^P","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1W",[["^5:","~:static-fns"],true,["^5:","~:elide-asserts"],false,["^5:","~:optimize-constants"],null,["^5:","^1N"],null,["^5:","~:external-config"],null,["^5:","~:tooling-config"],null,["^5:","~:emit-constants"],null,["^5:","~:load-tests"],null,["^5:","~:form-size-threshold"],null,["^5:","~:infer-externs"],true,["^5:","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5:","~:fn-invoke-direct"],null,["^5:","~:source-map"],"/dev/null"]]]