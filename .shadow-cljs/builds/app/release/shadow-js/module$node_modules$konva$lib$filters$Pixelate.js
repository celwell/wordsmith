["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Pixelate.js"],"~:js","shadow$provide[80]=function(n,e,t,k){Object.defineProperty(k,\"__esModule\",{value:!0});n=e(24);var w=e(22);t=e(28);e=e(23);k.Pixelate=function(e){var k=Math.ceil(this.pixelSize()),n=e.width,m=e.height,d,b,h,a,c=Math.ceil(n/k),p=Math.ceil(m/k),r,t,v=e.data;if(0>=k)w.Util.error(\"pixelSize value can not be \\x3c\\x3d 0\");else for(r=0;r<c;r+=1)for(t=0;t<p;t+=1){var C=a=h=b=0;var z=r*k;var A=z+k;var E=t*k;var G=E+k;var H=0;for(e=z;e<A;e+=1)if(!(e>=n))for(d=E;d<G;d+=1)if(!(d>=m)){var L=4*(n*d+e);b+=v[L+0];\nh+=v[L+1];a+=v[L+2];C+=v[L+3];H+=1}b/=H;h/=H;a/=H;C/=H;for(e=z;e<A;e+=1)if(!(e>=n))for(d=E;d<G;d+=1)d>=m||(L=4*(n*d+e),v[L+0]=b,v[L+1]=h,v[L+2]=a,v[L+3]=C)}};n.Factory.addGetterSetter(t.Node,\"pixelSize\",8,e.getNumberValidator(),n.Factory.afterSetFilter)}","~:source","shadow$provide[80] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Util_1 = require(\"../Util\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util_1.Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["Pixelate","__esModule","value"]],"~:compiled-at",1606343224279,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Pixelate.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/filters/Pixelate.js\"],\n\"sourcesContent\":[\"shadow$provide[80] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Util_1 = require(\\\"../Util\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.Pixelate = function (imageData) {\\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\\n    if (pixelSize <= 0) {\\n        Util_1.Util.error('pixelSize value can not be <= 0');\\n        return;\\n    }\\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\\n            red = 0;\\n            green = 0;\\n            blue = 0;\\n            alpha = 0;\\n            xBinStart = xBin * pixelSize;\\n            xBinEnd = xBinStart + pixelSize;\\n            yBinStart = yBin * pixelSize;\\n            yBinEnd = yBinStart + pixelSize;\\n            pixelsInBin = 0;\\n            for (x = xBinStart; x < xBinEnd; x += 1) {\\n                if (x >= width) {\\n                    continue;\\n                }\\n                for (y = yBinStart; y < yBinEnd; y += 1) {\\n                    if (y >= height) {\\n                        continue;\\n                    }\\n                    i = (width * y + x) * 4;\\n                    red += data[i + 0];\\n                    green += data[i + 1];\\n                    blue += data[i + 2];\\n                    alpha += data[i + 3];\\n                    pixelsInBin += 1;\\n                }\\n            }\\n            red = red / pixelsInBin;\\n            green = green / pixelsInBin;\\n            blue = blue / pixelsInBin;\\n            alpha = alpha / pixelsInBin;\\n            for (x = xBinStart; x < xBinEnd; x += 1) {\\n                if (x >= width) {\\n                    continue;\\n                }\\n                for (y = yBinStart; y < yBinEnd; y += 1) {\\n                    if (y >= height) {\\n                        continue;\\n                    }\\n                    i = (width * y + x) * 4;\\n                    data[i + 0] = red;\\n                    data[i + 1] = green;\\n                    data[i + 2] = blue;\\n                    data[i + 3] = alpha;\\n                }\\n            }\\n        }\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Util_1\",\"Node_1\",\"Validators_1\",\"Pixelate\",\"exports.Pixelate\",\"imageData\",\"pixelSize\",\"Math\",\"ceil\",\"width\",\"height\",\"y\",\"red\",\"green\",\"blue\",\"nBinsX\",\"nBinsY\",\"xBin\",\"yBin\",\"data\",\"Util\",\"error\",\"alpha\",\"xBinStart\",\"xBinEnd\",\"yBinStart\",\"yBinEnd\",\"pixelsInBin\",\"x\",\"i\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]