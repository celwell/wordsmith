["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/PointerEvents.js"],"~:js","shadow$provide[30]=function(n,e,t,k){function w(e){return{evt:e,pointerId:e.pointerId}}function v(e,d){if(d=x.get(e))d.getStage(),x.delete(e),q&&d._fire(\"lostpointercapture\",w(new PointerEvent(\"lostpointercapture\")))}Object.defineProperty(k,\"__esModule\",{value:!0});n=e(21);var x=new Map,q=void 0!==n.Konva._global.PointerEvent;k.getCapturedShape=function(e){return x.get(e)};k.createEvent=w;k.hasPointerCapture=function(e,d){return x.get(e)===d};k.setPointerCapture=function(e,d){v(e);d.getStage()&&(x.set(e,\nd),q&&d._fire(\"gotpointercapture\",w(new PointerEvent(\"gotpointercapture\"))))};k.releaseCapture=v}","~:source","shadow$provide[30] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Global_1 = require(\"./Global\");\nvar Captures = new Map();\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\nfunction getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexports.getCapturedShape = getCapturedShape;\nfunction createEvent(evt) {\n    return {\n        evt: evt,\n        pointerId: evt.pointerId\n    };\n}\nexports.createEvent = createEvent;\nfunction hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexports.hasPointerCapture = hasPointerCapture;\nfunction setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    var stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexports.setPointerCapture = setPointerCapture;\nfunction releaseCapture(pointerId, target) {\n    var shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    var stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\nexports.releaseCapture = releaseCapture;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$konva$lib$Global"]],"~:properties",["^5",["createEvent","getCapturedShape","__esModule","value","pointerId","releaseCapture","setPointerCapture","hasPointerCapture","evt"]],"~:compiled-at",1589761458270,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$PointerEvents.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAU7DC,QAASA,EAAW,CAACC,CAAD,CAAM,CACtB,MAAO,CACHA,IAAKA,CADF,CAEHC,UAAWD,CAAAC,UAFR,CADe,CAsB1BC,QAASA,EAAc,CAACD,CAAD,CAAYE,CAAZ,CAAoB,CAEvC,GADIC,CACJ,CADYC,CAAAC,IAAA,CAAaL,CAAb,CACZ,CAEYG,CAAAG,SAAA,EAIZ,CADAF,CAAAG,OAAA,CAAgBP,CAAhB,CACA,CAAIQ,CAAJ,EACIL,CAAAM,MAAA,CAAY,oBAAZ,CAAkCX,CAAA,CAAY,IAAIY,YAAJ,CAAiB,oBAAjB,CAAZ,CAAlC,CATmC,CA9B3CC,MAAAC,eAAA,CAAsBf,CAAtB,CAA+B,YAA/B,CAA6C,CAAEgB,MAAO,CAAA,CAAT,CAA7C,CACIC,EAAAA,CAAWnB,CAAA,CAAQ,EAAR,CACf,KAAIS,EAAW,IAAIW,GAAnB,CACIP,EAAoEQ,IAAAA,EAApER,GAAyBM,CAAAG,MAAAC,QAAA,aAI7BrB,EAAAsB,iBAAA,CAHAA,QAAyB,CAACnB,CAAD,CAAY,CACjC,MAAOI,EAAAC,IAAA,CAAaL,CAAb,CAD0B,CAUrCH,EAAAC,YAAA,CAAsBA,CAItBD,EAAAuB,kBAAA,CAHAA,QAA0B,CAACpB,CAAD,CAAYG,CAAZ,CAAmB,CACzC,MAAOC,EAAAC,IAAA,CAAaL,CAAb,CAAP,GAAmCG,CADM,CAc7CN,EAAAwB,kBAAA,CAVAA,QAA0B,CAACrB,CAAD,CAAYG,CAAZ,CAAmB,CACzCF,CAAA,CAAeD,CAAf,CACYG,EAAAG,SAAAgB,EACZ,GAEAlB,CAAAmB,IAAA,CAAavB,CAAb;AAAwBG,CAAxB,CACA,CAAIK,CAAJ,EACIL,CAAAM,MAAA,CAAY,mBAAZ,CAAiCX,CAAA,CAAY,IAAIY,YAAJ,CAAiB,mBAAjB,CAAZ,CAAjC,CAJJ,CAHyC,CAuB7Cb,EAAAI,eAAA,CAAyBA,CA5CoC;\",\n\"sources\":[\"node_modules/konva/lib/PointerEvents.js\"],\n\"sourcesContent\":[\"shadow$provide[30] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Global_1 = require(\\\"./Global\\\");\\nvar Captures = new Map();\\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\\nfunction getCapturedShape(pointerId) {\\n    return Captures.get(pointerId);\\n}\\nexports.getCapturedShape = getCapturedShape;\\nfunction createEvent(evt) {\\n    return {\\n        evt: evt,\\n        pointerId: evt.pointerId\\n    };\\n}\\nexports.createEvent = createEvent;\\nfunction hasPointerCapture(pointerId, shape) {\\n    return Captures.get(pointerId) === shape;\\n}\\nexports.hasPointerCapture = hasPointerCapture;\\nfunction setPointerCapture(pointerId, shape) {\\n    releaseCapture(pointerId);\\n    var stage = shape.getStage();\\n    if (!stage)\\n        return;\\n    Captures.set(pointerId, shape);\\n    if (SUPPORT_POINTER_EVENTS) {\\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\\n    }\\n}\\nexports.setPointerCapture = setPointerCapture;\\nfunction releaseCapture(pointerId, target) {\\n    var shape = Captures.get(pointerId);\\n    if (!shape)\\n        return;\\n    var stage = shape.getStage();\\n    if (stage && stage.content) {\\n    }\\n    Captures.delete(pointerId);\\n    if (SUPPORT_POINTER_EVENTS) {\\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\\n    }\\n}\\nexports.releaseCapture = releaseCapture;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"createEvent\",\"evt\",\"pointerId\",\"releaseCapture\",\"target\",\"shape\",\"Captures\",\"get\",\"getStage\",\"delete\",\"SUPPORT_POINTER_EVENTS\",\"_fire\",\"PointerEvent\",\"Object\",\"defineProperty\",\"value\",\"Global_1\",\"Map\",\"undefined\",\"Konva\",\"_global\",\"getCapturedShape\",\"hasPointerCapture\",\"setPointerCapture\",\"stage\",\"set\"]\n}\n"]