["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Mask.js"],"~:js","shadow$provide[78]=function(n,e,t,k){function w(e,k,m){k=4*(m*e.width+k);m=[];m.push(e.data[k++],e.data[k++],e.data[k++],e.data[k++]);return m}function v(e,k){return Math.sqrt(Math.pow(e[0]-k[0],2)+Math.pow(e[1]-k[1],2)+Math.pow(e[2]-k[2],2))}Object.defineProperty(k,\"__esModule\",{value:!0});n=e(24);t=e(28);e=e(23);k.Mask=function(e){var k=this.threshold();var m=w(e,0,0),d=w(e,e.width-1,0),b=w(e,0,e.height-1),h=w(e,e.width-1,e.height-1);k=k||10;if(v(m,d)<k&&v(d,h)<k&&v(h,b)<k&&v(b,m)<k){d=[d,m,h,b];\nm=[0,0,0];for(b=0;b<d.length;b++)m[0]+=d[b][0],m[1]+=d[b][1],m[2]+=d[b][2];m[0]/=d.length;m[1]/=d.length;m[2]/=d.length;d=[];for(b=0;b<e.width*e.height;b++)h=v(m,[e.data[4*b],e.data[4*b+1],e.data[4*b+2]]),d[b]=h<k?0:255;k=d}else k=void 0;if(k){m=e.width;d=e.height;b=[1,1,1,1,0,1,1,1,1];h=Math.round(Math.sqrt(b.length));for(var a=Math.floor(h/2),c=[],n=0;n<d;n++)for(var r=0;r<m;r++){for(var t=n*m+r,x=0,C=0;C<h;C++)for(var z=0;z<h;z++){var A=n+C-a,E=r+z-a;0<=A&&A<d&&0<=E&&E<m&&(x+=k[A*m+E]*b[C*h+z])}c[t]=\n2040===x?255:0}k=c;m=e.width;d=e.height;b=[1,1,1,1,1,1,1,1,1];h=Math.round(Math.sqrt(b.length));a=Math.floor(h/2);c=[];for(n=0;n<d;n++)for(r=0;r<m;r++){t=n*m+r;for(C=x=0;C<h;C++)for(z=0;z<h;z++)A=n+C-a,E=r+z-a,0<=A&&A<d&&0<=E&&E<m&&(x+=k[A*m+E]*b[C*h+z]);c[t]=1020<=x?255:0}k=c;m=e.width;d=e.height;b=[1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9];h=Math.round(Math.sqrt(b.length));a=Math.floor(h/2);c=[];for(n=0;n<d;n++)for(r=0;r<m;r++){t=n*m+r;for(C=x=0;C<h;C++)for(z=0;z<h;z++)A=n+C-a,E=r+z-a,0<=A&&A<d&&0<=\nE&&E<m&&(x+=k[A*m+E]*b[C*h+z]);c[t]=x}k=c;for(m=0;m<e.width*e.height;m++)e.data[4*m+3]=k[m]}return e};n.Factory.addGetterSetter(t.Node,\"threshold\",0,e.getNumberValidator(),n.Factory.afterSetFilter)}","~:source","shadow$provide[78] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexports.Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","value","Mask"]],"~:compiled-at",1589761458370,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Mask.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/filters/Mask.js\"],\n\"sourcesContent\":[\"shadow$provide[78] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nfunction pixelAt(idata, x, y) {\\n    var idx = (y * idata.width + x) * 4;\\n    var d = [];\\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\\n    return d;\\n}\\nfunction rgbDistance(p1, p2) {\\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\\n        Math.pow(p1[1] - p2[1], 2) +\\n        Math.pow(p1[2] - p2[2], 2));\\n}\\nfunction rgbMean(pTab) {\\n    var m = [0, 0, 0];\\n    for (var i = 0; i < pTab.length; i++) {\\n        m[0] += pTab[i][0];\\n        m[1] += pTab[i][1];\\n        m[2] += pTab[i][2];\\n    }\\n    m[0] /= pTab.length;\\n    m[1] /= pTab.length;\\n    m[2] /= pTab.length;\\n    return m;\\n}\\nfunction backgroundMask(idata, threshold) {\\n    var rgbv_no = pixelAt(idata, 0, 0);\\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\\n    var thres = threshold || 10;\\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\\n        var mask = [];\\n        for (var i = 0; i < idata.width * idata.height; i++) {\\n            var d = rgbDistance(mean, [\\n                idata.data[i * 4],\\n                idata.data[i * 4 + 1],\\n                idata.data[i * 4 + 2]\\n            ]);\\n            mask[i] = d < thres ? 0 : 255;\\n        }\\n        return mask;\\n    }\\n}\\nfunction applyMask(idata, mask) {\\n    for (var i = 0; i < idata.width * idata.height; i++) {\\n        idata.data[4 * i + 3] = mask[i];\\n    }\\n}\\nfunction erodeMask(mask, sw, sh) {\\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\\n        }\\n    }\\n    return maskResult;\\n}\\nfunction dilateMask(mask, sw, sh) {\\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\\n        }\\n    }\\n    return maskResult;\\n}\\nfunction smoothEdgeMask(mask, sw, sh) {\\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\\n    var side = Math.round(Math.sqrt(weights.length));\\n    var halfSide = Math.floor(side / 2);\\n    var maskResult = [];\\n    for (var y = 0; y < sh; y++) {\\n        for (var x = 0; x < sw; x++) {\\n            var so = y * sw + x;\\n            var a = 0;\\n            for (var cy = 0; cy < side; cy++) {\\n                for (var cx = 0; cx < side; cx++) {\\n                    var scy = y + cy - halfSide;\\n                    var scx = x + cx - halfSide;\\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\\n                        var srcOff = scy * sw + scx;\\n                        var wt = weights[cy * side + cx];\\n                        a += mask[srcOff] * wt;\\n                    }\\n                }\\n            }\\n            maskResult[so] = a;\\n        }\\n    }\\n    return maskResult;\\n}\\nexports.Mask = function (imageData) {\\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\\n    if (mask) {\\n        mask = erodeMask(mask, imageData.width, imageData.height);\\n        mask = dilateMask(mask, imageData.width, imageData.height);\\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\\n        applyMask(imageData, mask);\\n    }\\n    return imageData;\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"pixelAt\",\"idata\",\"x\",\"y\",\"idx\",\"width\",\"d\",\"push\",\"data\",\"rgbDistance\",\"p1\",\"p2\",\"Math\",\"sqrt\",\"pow\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"Mask\",\"exports.Mask\",\"imageData\",\"threshold\",\"rgbv_no\",\"rgbv_ne\",\"rgbv_so\",\"height\",\"rgbv_se\",\"thres\",\"m\",\"i\",\"pTab\",\"length\",\"mask\",\"weights\",\"side\",\"round\",\"halfSide\",\"floor\",\"maskResult\",\"sh\",\"sw\",\"so\",\"a\",\"cy\",\"cx\",\"scy\",\"scx\",\"wt\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]