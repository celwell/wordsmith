["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/Container.js"],"~:js","shadow$provide[29]=function(n,e,t,k){var w=this&&this.__extends||function(){var d=function(b,h){d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return d(b,h)};return function(b,h){function a(){this.constructor=b}d(b,h);b.prototype=null===h?Object.create(h):(a.prototype=h.prototype,new a)}}();Object.defineProperty(k,\"__esModule\",{value:!0});var v=e(22);n=e(24);var x=e(28),q=e(27);t=e(23);var m=e(21);\ne=function(d){function b(){var b=null!==d&&d.apply(this,arguments)||this;b.children=new v.Collection;return b}w(b,d);b.prototype.getChildren=function(b){if(!b)return this.children;var a=new v.Collection;this.children.each(function(c){b(c)&&a.push(c)});return a};b.prototype.hasChildren=function(){return 0<this.getChildren().length};b.prototype.removeChildren=function(){for(var b,a=0;a<this.children.length;a++)b=this.children[a],b.parent=null,b.index=0,b.remove();this.children=new v.Collection;return this};\nb.prototype.destroyChildren=function(){for(var b,a=0;a<this.children.length;a++)b=this.children[a],b.parent=null,b.index=0,b.destroy();this.children=new v.Collection;return this};b.prototype.add=function(b){if(1<arguments.length){for(var a=0;a<arguments.length;a++)this.add(arguments[a]);return this}if(b.getParent())return b.moveTo(this),this;a=this.children;this._validateAdd(b);b.index=a.length;b.parent=this;a.push(b);this._fire(\"add\",{child:b});return this};b.prototype.destroy=function(){this.hasChildren()&&\nthis.destroyChildren();d.prototype.destroy.call(this);return this};b.prototype.find=function(b){return this._generalFind(b,!1)};b.prototype.get=function(b){v.Util.warn(\"collection.get() method is deprecated. Please use collection.find() instead.\");return this.find(b)};b.prototype.findOne=function(b){b=this._generalFind(b,!0);return 0<b.length?b[0]:void 0};b.prototype._generalFind=function(b,a){var c=[];this._descendants(function(d){var h=d._isMatch(b);h&&c.push(d);return h&&a?!0:!1});return v.Collection.toCollection(c)};\nb.prototype._descendants=function(b){for(var a,c=0;c<this.children.length;c++){var d=this.children[c];if((a=b(d))||d.hasChildren()&&(a=d._descendants(b)))return!0}return!1};b.prototype.toObject=function(){var b=x.Node.prototype.toObject.call(this);b.children=[];for(var a=this.getChildren(),c=a.length,d=0;d<c;d++)b.children.push(a[d].toObject());return b};b.prototype._getDescendants=function(b){for(var a=[],c=b.length,d=0;d<c;d++){var h=b[d];this.isAncestorOf(h)&&a.push(h)}return a};b.prototype.isAncestorOf=\nfunction(b){for(b=b.getParent();b;){if(b._id===this._id)return!0;b=b.getParent()}return!1};b.prototype.clone=function(b){var a=x.Node.prototype.clone.call(this,b);this.getChildren().each(function(b){a.add(b.clone())});return a};b.prototype.getAllIntersections=function(b){var a=[];this.find(\"Shape\").each(function(c){c.isVisible()&&c.intersects(b)&&a.push(c)});return a};b.prototype._setChildrenIndices=function(){this.children.each(function(b,a){b.index=a})};b.prototype.drawScene=function(b,a,c){var d=\nthis.getLayer(),h=(b=b||d&&d.getCanvas())&&b.getContext(),e=this._getCanvasCache();e=e&&e.scene;if(this.isVisible()||c)!c&&e?(h.save(),d._applyTransform(this,h,a),this._drawCachedSceneCanvas(h),h.restore()):this._drawChildren(b,\"drawScene\",a,!1,c,c);return this};b.prototype.drawHit=function(b,a,c){var d=this.getLayer(),h=(b=b||d&&d.hitCanvas)&&b.getContext(),e=this._getCanvasCache();e=e&&e.hit;if(this.shouldDrawHit(b)||c)!c&&e?(h.save(),d._applyTransform(this,h,a),this._drawCachedHitCanvas(h),h.restore()):\nthis._drawChildren(b,\"drawHit\",a,!1,c,c);return this};b.prototype._drawChildren=function(b,a,c,d,e,m){var h=this.getLayer(),p=b&&b.getContext(),r=this.clipWidth(),q=this.clipHeight(),w=this.clipFunc(),D=r&&q||w;if(D&&h){p.save();var k=this.getAbsoluteTransform(c);var n=k.getMatrix();p.transform(n[0],n[1],n[2],n[3],n[4],n[5]);p.beginPath();w?w.call(this,p,this):(w=this.clipX(),n=this.clipY(),p.rect(w,n,r,q));p.clip();n=k.copy().invert().getMatrix();p.transform(n[0],n[1],n[2],n[3],n[4],n[5])}(m=\"source-over\"!==\nthis.globalCompositeOperation()&&!m)&&h&&(p.save(),p._applyGlobalCompositeOperation(this));this.children.each(function(h){h[a](b,c,d,e)});m&&h&&p.restore();D&&h&&p.restore()};b.prototype.shouldDrawHit=function(b){if(b&&b.isCache)return!0;var a=this.getLayer(),c=!1;q.DD._dragElements.forEach(function(b){\"dragging\"===b.dragStatus&&b.node.getLayer()===a&&(c=!0)});b=!m.Konva.hitOnDragEnabled&&c;return a&&a.hitGraphEnabled()&&this.isVisible()&&!b};b.prototype.getClientRect=function(b){b=b||{};var a=b.skipTransform,\nc=b.relativeTo,d,h,e,m,q={x:Infinity,y:Infinity,width:0,height:0},w=this;this.children.each(function(a){a.visible()&&(a=a.getClientRect({relativeTo:w,skipShadow:b.skipShadow,skipStroke:b.skipStroke}),0!==a.width||0!==a.height)&&(void 0===d?(d=a.x,h=a.y,e=a.x+a.width,m=a.y+a.height):(d=Math.min(d,a.x),h=Math.min(h,a.y),e=Math.max(e,a.x+a.width),m=Math.max(m,a.y+a.height)))});q=this.find(\"Shape\");for(var n=!1,k=0;k<q.length;k++)if(q[k]._isVisible(this)){n=!0;break}q=n?{x:d,y:h,width:e-d,height:m-h}:\n{x:0,y:0,width:0,height:0};return a?q:this._transformedRect(q,c)};return b}(x.Node);k.Container=e;n.Factory.addComponentsGetterSetter(e,\"clip\",[\"x\",\"y\",\"width\",\"height\"]);n.Factory.addGetterSetter(e,\"clipX\",void 0,t.getNumberValidator());n.Factory.addGetterSetter(e,\"clipY\",void 0,t.getNumberValidator());n.Factory.addGetterSetter(e,\"clipWidth\",void 0,t.getNumberValidator());n.Factory.addGetterSetter(e,\"clipHeight\",void 0,t.getNumberValidator());n.Factory.addGetterSetter(e,\"clipFunc\");v.Collection.mapMethods(e)}","~:source","shadow$provide[29] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"./Util\");\nvar Factory_1 = require(\"./Factory\");\nvar Node_1 = require(\"./Node\");\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\nvar Validators_1 = require(\"./Validators\");\nvar Global_1 = require(\"./Global\");\nvar Container = (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.children = new Util_1.Collection();\n        return _this;\n    }\n    Container.prototype.getChildren = function (filterFunc) {\n        if (!filterFunc) {\n            return this.children;\n        }\n        var results = new Util_1.Collection();\n        this.children.each(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    };\n    Container.prototype.hasChildren = function () {\n        return this.getChildren().length > 0;\n    };\n    Container.prototype.removeChildren = function () {\n        var child;\n        for (var i = 0; i < this.children.length; i++) {\n            child = this.children[i];\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        }\n        this.children = new Util_1.Collection();\n        return this;\n    };\n    Container.prototype.destroyChildren = function () {\n        var child;\n        for (var i = 0; i < this.children.length; i++) {\n            child = this.children[i];\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        }\n        this.children = new Util_1.Collection();\n        return this;\n    };\n    Container.prototype.add = function (child) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        var children = this.children;\n        this._validateAdd(child);\n        child.index = children.length;\n        child.parent = this;\n        children.push(child);\n        this._fire('add', {\n            child: child\n        });\n        return this;\n    };\n    Container.prototype.destroy = function () {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        _super.prototype.destroy.call(this);\n        return this;\n    };\n    Container.prototype.find = function (selector) {\n        return this._generalFind(selector, false);\n    };\n    Container.prototype.get = function (selector) {\n        Util_1.Util.warn('collection.get() method is deprecated. Please use collection.find() instead.');\n        return this.find(selector);\n    };\n    Container.prototype.findOne = function (selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    };\n    Container.prototype._generalFind = function (selector, findOne) {\n        var retArr = [];\n        this._descendants(function (node) {\n            var valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return Util_1.Collection.toCollection(retArr);\n    };\n    Container.prototype._descendants = function (fn) {\n        var shouldStop = false;\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Container.prototype.toObject = function () {\n        var obj = Node_1.Node.prototype.toObject.call(this);\n        obj.children = [];\n        var children = this.getChildren();\n        var len = children.length;\n        for (var n = 0; n < len; n++) {\n            var child = children[n];\n            obj.children.push(child.toObject());\n        }\n        return obj;\n    };\n    Container.prototype._getDescendants = function (arr) {\n        var retArr = [];\n        var len = arr.length;\n        for (var n = 0; n < len; n++) {\n            var node = arr[n];\n            if (this.isAncestorOf(node)) {\n                retArr.push(node);\n            }\n        }\n        return retArr;\n    };\n    Container.prototype.isAncestorOf = function (node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    };\n    Container.prototype.clone = function (obj) {\n        var node = Node_1.Node.prototype.clone.call(this, obj);\n        this.getChildren().each(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    };\n    Container.prototype.getAllIntersections = function (pos) {\n        var arr = [];\n        this.find('Shape').each(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    };\n    Container.prototype._setChildrenIndices = function () {\n        this.children.each(function (child, n) {\n            child.index = n;\n        });\n    };\n    Container.prototype.drawScene = function (can, top, caching) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        if (this.isVisible() || caching) {\n            if (!caching && cachedSceneCanvas) {\n                context.save();\n                layer._applyTransform(this, context, top);\n                this._drawCachedSceneCanvas(context);\n                context.restore();\n            }\n            else {\n                this._drawChildren(canvas, 'drawScene', top, false, caching, caching);\n            }\n        }\n        return this;\n    };\n    Container.prototype.drawHit = function (can, top, caching) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (this.shouldDrawHit(canvas) || caching) {\n            if (!caching && cachedHitCanvas) {\n                context.save();\n                layer._applyTransform(this, context, top);\n                this._drawCachedHitCanvas(context);\n                context.restore();\n            }\n            else {\n                this._drawChildren(canvas, 'drawHit', top, false, caching, caching);\n            }\n        }\n        return this;\n    };\n    Container.prototype._drawChildren = function (canvas, drawMethod, top, caching, skipBuffer, skipComposition) {\n        var layer = this.getLayer(), context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc, clipX, clipY;\n        if (hasClip && layer) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                clipX = this.clipX();\n                clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform\n                .copy()\n                .invert()\n                .getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = this.globalCompositeOperation() !== 'source-over' && !skipComposition;\n        if (hasComposition && layer) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        this.children.each(function (child) {\n            child[drawMethod](canvas, top, caching, skipBuffer);\n        });\n        if (hasComposition && layer) {\n            context.restore();\n        }\n        if (hasClip && layer) {\n            context.restore();\n        }\n    };\n    Container.prototype.shouldDrawHit = function (canvas) {\n        if (canvas && canvas.isCache) {\n            return true;\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DragAndDrop_1.DD._dragElements.forEach(function (elem) {\n            if (elem.dragStatus === 'dragging' && elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !Global_1.Konva.hitOnDragEnabled && layerUnderDrag;\n        return layer && layer.hitGraphEnabled() && this.isVisible() && !dragSkip;\n    };\n    Container.prototype.getClientRect = function (attrs) {\n        attrs = attrs || {};\n        var skipTransform = attrs.skipTransform;\n        var relativeTo = attrs.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0\n        };\n        var that = this;\n        this.children.each(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: attrs.skipShadow,\n                skipStroke: attrs.skipStroke\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    };\n    return Container;\n}(Node_1.Node));\nexports.Container = Container;\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height'\n]);\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\nUtil_1.Collection.mapMethods(Container);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$DragAndDrop","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Node","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["getChildren","_getDescendants","drawScene","width","skipShadow","toObject","destroyChildren","index","find","prototype","height","child","parent","children","x","__esModule","drawHit","value","destroy","Container","_descendants","isAncestorOf","_setChildrenIndices","y","__proto__","getClientRect","clone","relativeTo","_drawChildren","add","shouldDrawHit","findOne","hasChildren","removeChildren","get","skipStroke","_generalFind","constructor","getAllIntersections"]],"~:compiled-at",1606343224177,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$Container.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/Container.js\"],\n\"sourcesContent\":[\"shadow$provide[29] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"./Util\\\");\\nvar Factory_1 = require(\\\"./Factory\\\");\\nvar Node_1 = require(\\\"./Node\\\");\\nvar DragAndDrop_1 = require(\\\"./DragAndDrop\\\");\\nvar Validators_1 = require(\\\"./Validators\\\");\\nvar Global_1 = require(\\\"./Global\\\");\\nvar Container = (function (_super) {\\n    __extends(Container, _super);\\n    function Container() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.children = new Util_1.Collection();\\n        return _this;\\n    }\\n    Container.prototype.getChildren = function (filterFunc) {\\n        if (!filterFunc) {\\n            return this.children;\\n        }\\n        var results = new Util_1.Collection();\\n        this.children.each(function (child) {\\n            if (filterFunc(child)) {\\n                results.push(child);\\n            }\\n        });\\n        return results;\\n    };\\n    Container.prototype.hasChildren = function () {\\n        return this.getChildren().length > 0;\\n    };\\n    Container.prototype.removeChildren = function () {\\n        var child;\\n        for (var i = 0; i < this.children.length; i++) {\\n            child = this.children[i];\\n            child.parent = null;\\n            child.index = 0;\\n            child.remove();\\n        }\\n        this.children = new Util_1.Collection();\\n        return this;\\n    };\\n    Container.prototype.destroyChildren = function () {\\n        var child;\\n        for (var i = 0; i < this.children.length; i++) {\\n            child = this.children[i];\\n            child.parent = null;\\n            child.index = 0;\\n            child.destroy();\\n        }\\n        this.children = new Util_1.Collection();\\n        return this;\\n    };\\n    Container.prototype.add = function (child) {\\n        if (arguments.length > 1) {\\n            for (var i = 0; i < arguments.length; i++) {\\n                this.add(arguments[i]);\\n            }\\n            return this;\\n        }\\n        if (child.getParent()) {\\n            child.moveTo(this);\\n            return this;\\n        }\\n        var children = this.children;\\n        this._validateAdd(child);\\n        child.index = children.length;\\n        child.parent = this;\\n        children.push(child);\\n        this._fire('add', {\\n            child: child\\n        });\\n        return this;\\n    };\\n    Container.prototype.destroy = function () {\\n        if (this.hasChildren()) {\\n            this.destroyChildren();\\n        }\\n        _super.prototype.destroy.call(this);\\n        return this;\\n    };\\n    Container.prototype.find = function (selector) {\\n        return this._generalFind(selector, false);\\n    };\\n    Container.prototype.get = function (selector) {\\n        Util_1.Util.warn('collection.get() method is deprecated. Please use collection.find() instead.');\\n        return this.find(selector);\\n    };\\n    Container.prototype.findOne = function (selector) {\\n        var result = this._generalFind(selector, true);\\n        return result.length > 0 ? result[0] : undefined;\\n    };\\n    Container.prototype._generalFind = function (selector, findOne) {\\n        var retArr = [];\\n        this._descendants(function (node) {\\n            var valid = node._isMatch(selector);\\n            if (valid) {\\n                retArr.push(node);\\n            }\\n            if (valid && findOne) {\\n                return true;\\n            }\\n            return false;\\n        });\\n        return Util_1.Collection.toCollection(retArr);\\n    };\\n    Container.prototype._descendants = function (fn) {\\n        var shouldStop = false;\\n        for (var i = 0; i < this.children.length; i++) {\\n            var child = this.children[i];\\n            shouldStop = fn(child);\\n            if (shouldStop) {\\n                return true;\\n            }\\n            if (!child.hasChildren()) {\\n                continue;\\n            }\\n            shouldStop = child._descendants(fn);\\n            if (shouldStop) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    Container.prototype.toObject = function () {\\n        var obj = Node_1.Node.prototype.toObject.call(this);\\n        obj.children = [];\\n        var children = this.getChildren();\\n        var len = children.length;\\n        for (var n = 0; n < len; n++) {\\n            var child = children[n];\\n            obj.children.push(child.toObject());\\n        }\\n        return obj;\\n    };\\n    Container.prototype._getDescendants = function (arr) {\\n        var retArr = [];\\n        var len = arr.length;\\n        for (var n = 0; n < len; n++) {\\n            var node = arr[n];\\n            if (this.isAncestorOf(node)) {\\n                retArr.push(node);\\n            }\\n        }\\n        return retArr;\\n    };\\n    Container.prototype.isAncestorOf = function (node) {\\n        var parent = node.getParent();\\n        while (parent) {\\n            if (parent._id === this._id) {\\n                return true;\\n            }\\n            parent = parent.getParent();\\n        }\\n        return false;\\n    };\\n    Container.prototype.clone = function (obj) {\\n        var node = Node_1.Node.prototype.clone.call(this, obj);\\n        this.getChildren().each(function (no) {\\n            node.add(no.clone());\\n        });\\n        return node;\\n    };\\n    Container.prototype.getAllIntersections = function (pos) {\\n        var arr = [];\\n        this.find('Shape').each(function (shape) {\\n            if (shape.isVisible() && shape.intersects(pos)) {\\n                arr.push(shape);\\n            }\\n        });\\n        return arr;\\n    };\\n    Container.prototype._setChildrenIndices = function () {\\n        this.children.each(function (child, n) {\\n            child.index = n;\\n        });\\n    };\\n    Container.prototype.drawScene = function (can, top, caching) {\\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\\n        if (this.isVisible() || caching) {\\n            if (!caching && cachedSceneCanvas) {\\n                context.save();\\n                layer._applyTransform(this, context, top);\\n                this._drawCachedSceneCanvas(context);\\n                context.restore();\\n            }\\n            else {\\n                this._drawChildren(canvas, 'drawScene', top, false, caching, caching);\\n            }\\n        }\\n        return this;\\n    };\\n    Container.prototype.drawHit = function (can, top, caching) {\\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\\n        if (this.shouldDrawHit(canvas) || caching) {\\n            if (!caching && cachedHitCanvas) {\\n                context.save();\\n                layer._applyTransform(this, context, top);\\n                this._drawCachedHitCanvas(context);\\n                context.restore();\\n            }\\n            else {\\n                this._drawChildren(canvas, 'drawHit', top, false, caching, caching);\\n            }\\n        }\\n        return this;\\n    };\\n    Container.prototype._drawChildren = function (canvas, drawMethod, top, caching, skipBuffer, skipComposition) {\\n        var layer = this.getLayer(), context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc, clipX, clipY;\\n        if (hasClip && layer) {\\n            context.save();\\n            var transform = this.getAbsoluteTransform(top);\\n            var m = transform.getMatrix();\\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\\n            context.beginPath();\\n            if (clipFunc) {\\n                clipFunc.call(this, context, this);\\n            }\\n            else {\\n                clipX = this.clipX();\\n                clipY = this.clipY();\\n                context.rect(clipX, clipY, clipWidth, clipHeight);\\n            }\\n            context.clip();\\n            m = transform\\n                .copy()\\n                .invert()\\n                .getMatrix();\\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\\n        }\\n        var hasComposition = this.globalCompositeOperation() !== 'source-over' && !skipComposition;\\n        if (hasComposition && layer) {\\n            context.save();\\n            context._applyGlobalCompositeOperation(this);\\n        }\\n        this.children.each(function (child) {\\n            child[drawMethod](canvas, top, caching, skipBuffer);\\n        });\\n        if (hasComposition && layer) {\\n            context.restore();\\n        }\\n        if (hasClip && layer) {\\n            context.restore();\\n        }\\n    };\\n    Container.prototype.shouldDrawHit = function (canvas) {\\n        if (canvas && canvas.isCache) {\\n            return true;\\n        }\\n        var layer = this.getLayer();\\n        var layerUnderDrag = false;\\n        DragAndDrop_1.DD._dragElements.forEach(function (elem) {\\n            if (elem.dragStatus === 'dragging' && elem.node.getLayer() === layer) {\\n                layerUnderDrag = true;\\n            }\\n        });\\n        var dragSkip = !Global_1.Konva.hitOnDragEnabled && layerUnderDrag;\\n        return layer && layer.hitGraphEnabled() && this.isVisible() && !dragSkip;\\n    };\\n    Container.prototype.getClientRect = function (attrs) {\\n        attrs = attrs || {};\\n        var skipTransform = attrs.skipTransform;\\n        var relativeTo = attrs.relativeTo;\\n        var minX, minY, maxX, maxY;\\n        var selfRect = {\\n            x: Infinity,\\n            y: Infinity,\\n            width: 0,\\n            height: 0\\n        };\\n        var that = this;\\n        this.children.each(function (child) {\\n            if (!child.visible()) {\\n                return;\\n            }\\n            var rect = child.getClientRect({\\n                relativeTo: that,\\n                skipShadow: attrs.skipShadow,\\n                skipStroke: attrs.skipStroke\\n            });\\n            if (rect.width === 0 && rect.height === 0) {\\n                return;\\n            }\\n            if (minX === undefined) {\\n                minX = rect.x;\\n                minY = rect.y;\\n                maxX = rect.x + rect.width;\\n                maxY = rect.y + rect.height;\\n            }\\n            else {\\n                minX = Math.min(minX, rect.x);\\n                minY = Math.min(minY, rect.y);\\n                maxX = Math.max(maxX, rect.x + rect.width);\\n                maxY = Math.max(maxY, rect.y + rect.height);\\n            }\\n        });\\n        var shapes = this.find('Shape');\\n        var hasVisible = false;\\n        for (var i = 0; i < shapes.length; i++) {\\n            var shape = shapes[i];\\n            if (shape._isVisible(this)) {\\n                hasVisible = true;\\n                break;\\n            }\\n        }\\n        if (hasVisible) {\\n            selfRect = {\\n                x: minX,\\n                y: minY,\\n                width: maxX - minX,\\n                height: maxY - minY\\n            };\\n        }\\n        else {\\n            selfRect = {\\n                x: 0,\\n                y: 0,\\n                width: 0,\\n                height: 0\\n            };\\n        }\\n        if (!skipTransform) {\\n            return this._transformedRect(selfRect, relativeTo);\\n        }\\n        return selfRect;\\n    };\\n    return Container;\\n}(Node_1.Node));\\nexports.Container = Container;\\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\\n    'x',\\n    'y',\\n    'width',\\n    'height'\\n]);\\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\\nUtil_1.Collection.mapMethods(Container);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"defineProperty\",\"value\",\"Util_1\",\"Factory_1\",\"Node_1\",\"DragAndDrop_1\",\"Validators_1\",\"Global_1\",\"Container\",\"_super\",\"_this\",\"apply\",\"arguments\",\"children\",\"Collection\",\"getChildren\",\"Container.prototype.getChildren\",\"filterFunc\",\"results\",\"each\",\"child\",\"push\",\"hasChildren\",\"Container.prototype.hasChildren\",\"length\",\"removeChildren\",\"Container.prototype.removeChildren\",\"i\",\"parent\",\"index\",\"remove\",\"destroyChildren\",\"Container.prototype.destroyChildren\",\"destroy\",\"add\",\"Container.prototype.add\",\"getParent\",\"moveTo\",\"_validateAdd\",\"_fire\",\"Container.prototype.destroy\",\"call\",\"find\",\"Container.prototype.find\",\"selector\",\"_generalFind\",\"get\",\"Container.prototype.get\",\"Util\",\"warn\",\"findOne\",\"Container.prototype.findOne\",\"result\",\"undefined\",\"Container.prototype._generalFind\",\"retArr\",\"_descendants\",\"node\",\"valid\",\"_isMatch\",\"toCollection\",\"Container.prototype._descendants\",\"fn\",\"shouldStop\",\"toObject\",\"Container.prototype.toObject\",\"obj\",\"Node\",\"len\",\"n\",\"_getDescendants\",\"Container.prototype._getDescendants\",\"arr\",\"isAncestorOf\",\"Container.prototype.isAncestorOf\",\"_id\",\"clone\",\"Container.prototype.clone\",\"no\",\"getAllIntersections\",\"Container.prototype.getAllIntersections\",\"pos\",\"shape\",\"isVisible\",\"intersects\",\"_setChildrenIndices\",\"Container.prototype._setChildrenIndices\",\"drawScene\",\"Container.prototype.drawScene\",\"can\",\"top\",\"caching\",\"layer\",\"getLayer\",\"context\",\"canvas\",\"getCanvas\",\"getContext\",\"cachedCanvas\",\"_getCanvasCache\",\"cachedSceneCanvas\",\"scene\",\"save\",\"_applyTransform\",\"_drawCachedSceneCanvas\",\"restore\",\"_drawChildren\",\"drawHit\",\"Container.prototype.drawHit\",\"hitCanvas\",\"cachedHitCanvas\",\"hit\",\"shouldDrawHit\",\"_drawCachedHitCanvas\",\"Container.prototype._drawChildren\",\"drawMethod\",\"skipBuffer\",\"skipComposition\",\"clipWidth\",\"clipHeight\",\"clipFunc\",\"hasClip\",\"transform\",\"getAbsoluteTransform\",\"m\",\"getMatrix\",\"beginPath\",\"clipX\",\"clipY\",\"rect\",\"clip\",\"copy\",\"invert\",\"hasComposition\",\"globalCompositeOperation\",\"_applyGlobalCompositeOperation\",\"Container.prototype.shouldDrawHit\",\"isCache\",\"layerUnderDrag\",\"DD\",\"_dragElements\",\"forEach\",\"elem\",\"dragStatus\",\"dragSkip\",\"Konva\",\"hitOnDragEnabled\",\"hitGraphEnabled\",\"getClientRect\",\"Container.prototype.getClientRect\",\"attrs\",\"skipTransform\",\"relativeTo\",\"minX\",\"minY\",\"maxX\",\"maxY\",\"selfRect\",\"x\",\"Infinity\",\"y\",\"width\",\"height\",\"that\",\"visible\",\"skipShadow\",\"skipStroke\",\"Math\",\"min\",\"max\",\"shapes\",\"hasVisible\",\"_isVisible\",\"_transformedRect\",\"Factory\",\"addComponentsGetterSetter\",\"addGetterSetter\",\"getNumberValidator\",\"mapMethods\"]\n}\n"]