["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/DragAndDrop.js"],"~:js","shadow$provide[27]=function(n,e,t,k){Object.defineProperty(k,\"__esModule\",{value:!0});var w=e(21),v=e(22);k.DD={get isDragging(){var e=!1;k.DD._dragElements.forEach(function(q){\"dragging\"===q.dragStatus&&(e=!0)});return e},justDragged:!1,get node(){var e;k.DD._dragElements.forEach(function(q){e=q.node});return e},_dragElements:new Map,_drag:function(e){k.DD._dragElements.forEach(function(q,m){m=q.node;var d=m.getStage();d.setPointersPositions(e);void 0===q.pointerId&&(q.pointerId=v.Util._getFirstPointerId(e));\nif(d=d._changedPointerPositions.find(function(b){return b.id===q.pointerId})){if(\"dragging\"!==q.dragStatus){var b=m.dragDistance();if(Math.max(Math.abs(d.x-q.startPointerPos.x),Math.abs(d.y-q.startPointerPos.y))<b)return;m.startDrag({evt:e});if(!m.isDragging())return}m._setDragPosition(e,q);m.fire(\"dragmove\",{type:\"dragmove\",target:m,evt:e},!0)}})},_endDragBefore:function(e){k.DD._dragElements.forEach(function(q,m){m=q.node.getStage();e&&m.setPointersPositions(e);m._changedPointerPositions.find(function(d){return d.id===\nq.pointerId})&&(\"dragging\"===q.dragStatus&&(k.DD.justDragged=!0,w.Konva.listenClickTap=!1,q.dragStatus=\"stopped\"),(m=q.node.getLayer()||q.node instanceof w.Konva.Stage&&q.node)&&m.draw())})},_endDragAfter:function(e){k.DD._dragElements.forEach(function(q,m){\"stopped\"===q.dragStatus&&q.node.fire(\"dragend\",{type:\"dragend\",target:q.node,evt:e},!0);\"dragging\"!==q.dragStatus&&k.DD._dragElements.delete(m)})}};w.Konva.isBrowser&&(window.addEventListener(\"mouseup\",k.DD._endDragBefore,!0),window.addEventListener(\"touchend\",\nk.DD._endDragBefore,!0),window.addEventListener(\"mousemove\",k.DD._drag),window.addEventListener(\"touchmove\",k.DD._drag),window.addEventListener(\"mouseup\",k.DD._endDragAfter,!1),window.addEventListener(\"touchend\",k.DD._endDragAfter,!1))}","~:source","shadow$provide[27] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nexports.DD = {\n    get isDragging() {\n        var flag = false;\n        exports.DD._dragElements.forEach(function (elem) {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        exports.DD._dragElements.forEach(function (elem) {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt: evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt\n            }, true);\n        });\n    },\n    _endDragBefore: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging') {\n                exports.DD.justDragged = true;\n                Global_1.Konva.listenClickTap = false;\n                elem.dragStatus = 'stopped';\n            }\n            var drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode) {\n                drawNode.draw();\n            }\n        });\n    },\n    _endDragAfter: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    }\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["isDragging","_endDragAfter","_dragElements","__esModule","value","DD","listenClickTap","pointerId","evt","type","dragStatus","target","_drag","justDragged","_endDragBefore","node"]],"~:compiled-at",1589761458256,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$DragAndDrop.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/DragAndDrop.js\"],\n\"sourcesContent\":[\"shadow$provide[27] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Global_1 = require(\\\"./Global\\\");\\nvar Util_1 = require(\\\"./Util\\\");\\nexports.DD = {\\n    get isDragging() {\\n        var flag = false;\\n        exports.DD._dragElements.forEach(function (elem) {\\n            if (elem.dragStatus === 'dragging') {\\n                flag = true;\\n            }\\n        });\\n        return flag;\\n    },\\n    justDragged: false,\\n    get node() {\\n        var node;\\n        exports.DD._dragElements.forEach(function (elem) {\\n            node = elem.node;\\n        });\\n        return node;\\n    },\\n    _dragElements: new Map(),\\n    _drag: function (evt) {\\n        exports.DD._dragElements.forEach(function (elem, key) {\\n            var node = elem.node;\\n            var stage = node.getStage();\\n            stage.setPointersPositions(evt);\\n            if (elem.pointerId === undefined) {\\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\\n            }\\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\\n            if (!pos) {\\n                return;\\n            }\\n            if (elem.dragStatus !== 'dragging') {\\n                var dragDistance = node.dragDistance();\\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\\n                if (distance < dragDistance) {\\n                    return;\\n                }\\n                node.startDrag({ evt: evt });\\n                if (!node.isDragging()) {\\n                    return;\\n                }\\n            }\\n            node._setDragPosition(evt, elem);\\n            node.fire('dragmove', {\\n                type: 'dragmove',\\n                target: node,\\n                evt: evt\\n            }, true);\\n        });\\n    },\\n    _endDragBefore: function (evt) {\\n        exports.DD._dragElements.forEach(function (elem, key) {\\n            var node = elem.node;\\n            var stage = node.getStage();\\n            if (evt) {\\n                stage.setPointersPositions(evt);\\n            }\\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\\n            if (!pos) {\\n                return;\\n            }\\n            if (elem.dragStatus === 'dragging') {\\n                exports.DD.justDragged = true;\\n                Global_1.Konva.listenClickTap = false;\\n                elem.dragStatus = 'stopped';\\n            }\\n            var drawNode = elem.node.getLayer() ||\\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\\n            if (drawNode) {\\n                drawNode.draw();\\n            }\\n        });\\n    },\\n    _endDragAfter: function (evt) {\\n        exports.DD._dragElements.forEach(function (elem, key) {\\n            if (elem.dragStatus === 'stopped') {\\n                elem.node.fire('dragend', {\\n                    type: 'dragend',\\n                    target: elem.node,\\n                    evt: evt\\n                }, true);\\n            }\\n            if (elem.dragStatus !== 'dragging') {\\n                exports.DD._dragElements.delete(key);\\n            }\\n        });\\n    }\\n};\\nif (Global_1.Konva.isBrowser) {\\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\\n    window.addEventListener('mousemove', exports.DD._drag);\\n    window.addEventListener('touchmove', exports.DD._drag);\\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Global_1\",\"Util_1\",\"DD\",\"isDragging\",\"flag\",\"_dragElements\",\"forEach\",\"elem\",\"dragStatus\",\"justDragged\",\"node\",\"Map\",\"_drag\",\"evt\",\"key\",\"stage\",\"getStage\",\"setPointersPositions\",\"undefined\",\"pointerId\",\"Util\",\"_getFirstPointerId\",\"pos\",\"_changedPointerPositions\",\"find\",\"id\",\"dragDistance\",\"Math\",\"max\",\"distance\",\"abs\",\"x\",\"startPointerPos\",\"y\",\"startDrag\",\"_setDragPosition\",\"fire\",\"type\",\"target\",\"_endDragBefore\",\"Konva\",\"listenClickTap\",\"drawNode\",\"getLayer\",\"draw\",\"_endDragAfter\",\"delete\",\"isBrowser\",\"window\",\"addEventListener\"]\n}\n"]