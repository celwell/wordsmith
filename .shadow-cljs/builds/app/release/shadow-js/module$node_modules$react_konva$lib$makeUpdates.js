["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-konva/lib/makeUpdates.js"],"~:js","shadow$provide[48]=function(n,e,t,k){function w(a){(a=a.getLayer()||a.getStage())&&a.batchDraw()}k.__esModule=!0;k.toggleStrictMode=function(a){d=a};k.applyNodeProps=function(a,c){var e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};!x&&\"zIndex\"in c&&(console.warn(h),x=!0);if(!q&&c.draggable){var r=c.onDragEnd||c.onDragMove;void 0===c.x&&void 0===c.y||r||(console.warn(b),q=!0)}for(var k in e)if(!v[k]){r=\"on\"===k.slice(0,2);var n=e[k]!==c[k];if(r&&n){var t=k.substr(2).toLowerCase();\"content\"===\nt.substr(0,7)&&(t=\"content\"+t.substr(7,1).toUpperCase()+t.substr(8));a.off(t,e[k])}c.hasOwnProperty(k)||a.setAttr(k,void 0)}n=d||c._useStrictMode;var z={},A=!1;for(k in c)if(!v[k]){r=\"on\"===k.slice(0,2);t=e[k]!==c[k];if(r&&t&&(t=k.substr(2).toLowerCase(),\"content\"===t.substr(0,7)&&(t=\"content\"+t.substr(7,1).toUpperCase()+t.substr(8)),c[k]))a.on(t+m,c[k]);!r&&(c[k]!==e[k]||n&&c[k]!==a.getAttr(k))&&(A=!0,z[k]=c[k])}A&&(a.setAttrs(z),w(a))};k.updatePicture=w;var v={children:!0,ref:!0,key:!0,style:!0,\nforwardedRef:!0,unstable_applyCache:!0,unstable_applyDrawHitFromCache:!0},x=!1,q=!1,m=k.EVENTS_NAMESPACE=\".react-konva-event\",d=!1,b=\"ReactKonva: You have a Konva node with draggable \\x3d true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag\\x26drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n\",h='ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n'}","~:source","shadow$provide[48] = function(global,require,module,exports) {\n'use strict';\n\nexports.__esModule = true;\nexports.toggleStrictMode = toggleStrictMode;\nexports.applyNodeProps = applyNodeProps;\nexports.updatePicture = updatePicture;\nvar propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\n\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\n\nvar EVENTS_NAMESPACE = exports.EVENTS_NAMESPACE = '.react-konva-event';\n\nvar useStrictMode = false;\nfunction toggleStrictMode(value) {\n  useStrictMode = value;\n}\n\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n';\n\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n';\n\nfunction applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!zIndexWarningShowed && 'zIndex' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  }\n\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      if (props[key]) {\n        instance.on(eventName + EVENTS_NAMESPACE, props[key]);\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n}\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["forwardedRef","EVENTS_NAMESPACE","key","children","__esModule","applyNodeProps","style","toggleStrictMode","unstable_applyCache","updatePicture","ref","unstable_applyDrawHitFromCache"]],"~:compiled-at",1589761458332,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_konva$lib$makeUpdates.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-konva/lib/makeUpdates.js\"],\n\"sourcesContent\":[\"shadow$provide[48] = function(global,require,module,exports) {\\n'use strict';\\n\\nexports.__esModule = true;\\nexports.toggleStrictMode = toggleStrictMode;\\nexports.applyNodeProps = applyNodeProps;\\nexports.updatePicture = updatePicture;\\nvar propsToSkip = {\\n  children: true,\\n  ref: true,\\n  key: true,\\n  style: true,\\n  forwardedRef: true,\\n  unstable_applyCache: true,\\n  unstable_applyDrawHitFromCache: true\\n};\\n\\nvar zIndexWarningShowed = false;\\nvar dragWarningShowed = false;\\n\\nvar EVENTS_NAMESPACE = exports.EVENTS_NAMESPACE = '.react-konva-event';\\n\\nvar useStrictMode = false;\\nfunction toggleStrictMode(value) {\\n  useStrictMode = value;\\n}\\n\\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\\\nConsider to add onDragMove or onDragEnd events.\\\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\\\n';\\n\\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \\\"zIndex\\\" attribute for a Konva node.\\\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\\\n';\\n\\nfunction applyNodeProps(instance, props) {\\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  if (!zIndexWarningShowed && 'zIndex' in props) {\\n    console.warn(Z_INDEX_WARNING);\\n    zIndexWarningShowed = true;\\n  }\\n\\n  if (!dragWarningShowed && props.draggable) {\\n    var hasPosition = props.x !== undefined || props.y !== undefined;\\n    var hasEvents = props.onDragEnd || props.onDragMove;\\n    if (hasPosition && !hasEvents) {\\n      console.warn(DRAGGABLE_WARNING);\\n      dragWarningShowed = true;\\n    }\\n  }\\n\\n  for (var key in oldProps) {\\n    if (propsToSkip[key]) {\\n      continue;\\n    }\\n    var isEvent = key.slice(0, 2) === 'on';\\n    var propChanged = oldProps[key] !== props[key];\\n    if (isEvent && propChanged) {\\n      var eventName = key.substr(2).toLowerCase();\\n      if (eventName.substr(0, 7) === 'content') {\\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\\n      }\\n      instance.off(eventName, oldProps[key]);\\n    }\\n    var toRemove = !props.hasOwnProperty(key);\\n    if (toRemove) {\\n      instance.setAttr(key, undefined);\\n    }\\n  }\\n\\n  var strictUpdate = useStrictMode || props._useStrictMode;\\n  var updatedProps = {};\\n  var hasUpdates = false;\\n\\n  for (var key in props) {\\n    if (propsToSkip[key]) {\\n      continue;\\n    }\\n    var isEvent = key.slice(0, 2) === 'on';\\n    var toAdd = oldProps[key] !== props[key];\\n    if (isEvent && toAdd) {\\n      var eventName = key.substr(2).toLowerCase();\\n      if (eventName.substr(0, 7) === 'content') {\\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\\n      }\\n      if (props[key]) {\\n        instance.on(eventName + EVENTS_NAMESPACE, props[key]);\\n      }\\n    }\\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\\n      hasUpdates = true;\\n      updatedProps[key] = props[key];\\n    }\\n  }\\n\\n  if (hasUpdates) {\\n    instance.setAttrs(updatedProps);\\n    updatePicture(instance);\\n  }\\n}\\n\\nfunction updatePicture(node) {\\n  var drawingNode = node.getLayer() || node.getStage();\\n  drawingNode && drawingNode.batchDraw();\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"updatePicture\",\"node\",\"drawingNode\",\"getLayer\",\"getStage\",\"batchDraw\",\"__esModule\",\"toggleStrictMode\",\"value\",\"useStrictMode\",\"applyNodeProps\",\"instance\",\"props\",\"oldProps\",\"arguments\",\"length\",\"undefined\",\"zIndexWarningShowed\",\"console\",\"warn\",\"Z_INDEX_WARNING\",\"dragWarningShowed\",\"draggable\",\"hasEvents\",\"onDragEnd\",\"onDragMove\",\"x\",\"y\",\"DRAGGABLE_WARNING\",\"key\",\"propsToSkip\",\"isEvent\",\"slice\",\"propChanged\",\"eventName\",\"substr\",\"toLowerCase\",\"toUpperCase\",\"off\",\"hasOwnProperty\",\"toRemove\",\"setAttr\",\"strictUpdate\",\"_useStrictMode\",\"updatedProps\",\"hasUpdates\",\"toAdd\",\"on\",\"EVENTS_NAMESPACE\",\"getAttr\",\"setAttrs\",\"children\",\"ref\",\"style\",\"forwardedRef\",\"unstable_applyCache\",\"unstable_applyDrawHitFromCache\"]\n}\n"]