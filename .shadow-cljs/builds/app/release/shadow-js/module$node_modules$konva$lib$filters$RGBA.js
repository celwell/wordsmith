["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/RGBA.js"],"~:js","shadow$provide[83]=function(n,e,t,k){Object.defineProperty(k,\"__esModule\",{value:!0});n=e(24);t=e(28);e=e(23);k.RGBA=function(e){e=e.data;var k=e.length,n=this.red(),q=this.green(),m=this.blue(),d=this.alpha(),b;for(b=0;b<k;b+=4){var h=1-d;e[b]=n*d+e[b]*h;e[b+1]=q*d+e[b+1]*h;e[b+2]=m*d+e[b+2]*h}};n.Factory.addGetterSetter(t.Node,\"red\",0,function(e){this._filterUpToDate=!1;return 255<e?255:0>e?0:Math.round(e)});n.Factory.addGetterSetter(t.Node,\"green\",0,function(e){this._filterUpToDate=!1;return 255<\ne?255:0>e?0:Math.round(e)});n.Factory.addGetterSetter(t.Node,\"blue\",0,e.RGBComponent,n.Factory.afterSetFilter);n.Factory.addGetterSetter(t.Node,\"alpha\",1,function(e){this._filterUpToDate=!1;return 1<e?1:0>e?0:e})}","~:source","shadow$provide[83] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","value","RGBA","_filterUpToDate"]],"~:compiled-at",1606343224280,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$RGBA.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAE7DC,MAAAC,eAAA,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,EAAAA,CAAYN,CAAA,CAAQ,EAAR,CACZO,EAAAA,CAASP,CAAA,CAAQ,EAAR,CACTQ,EAAAA,CAAeR,CAAA,CAAQ,EAAR,CACnBE,EAAAO,KAAA,CAAeC,QAAS,CAACC,CAAD,CAAY,CAC5BC,CAAAA,CAAOD,CAAAC,KADqB,KACLC,EAAUD,CAAAE,OADL,CACkBC,EAAM,IAAAA,IAAA,EADxB,CACoCC,EAAQ,IAAAA,MAAA,EAD5C,CAC0DC,EAAO,IAAAA,KAAA,EADjE,CAC8EC,EAAQ,IAAAA,MAAA,EADtF,CACoGC,CACpI,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBN,CAAhB,CAAyBM,CAAzB,EAA8B,CAA9B,CAAiC,CAC7B,IAAAC,EAAK,CAALA,CAASF,CACTN,EAAA,CAAKO,CAAL,CAAA,CAAUJ,CAAV,CAAgBG,CAAhB,CAAwBN,CAAA,CAAKO,CAAL,CAAxB,CAAkCC,CAClCR,EAAA,CAAKO,CAAL,CAAS,CAAT,CAAA,CAAcH,CAAd,CAAsBE,CAAtB,CAA8BN,CAAA,CAAKO,CAAL,CAAS,CAAT,CAA9B,CAA4CC,CAC5CR,EAAA,CAAKO,CAAL,CAAS,CAAT,CAAA,CAAcF,CAAd,CAAqBC,CAArB,CAA6BN,CAAA,CAAKO,CAAL,CAAS,CAAT,CAA7B,CAA2CC,CAJd,CAFD,CASpCd,EAAAe,QAAAC,gBAAA,CAAkCf,CAAAgB,KAAlC,CAA+C,KAA/C,CAAsD,CAAtD,CAAyD,QAAS,CAACC,CAAD,CAAM,CACpE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,CAAJ,CACW,GADX,CAGe,CAAV,CAAIA,CAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,CAAX,CATyD,CAAxE,CAYAlB,EAAAe,QAAAC,gBAAA,CAAkCf,CAAAgB,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,CAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV;AAAID,CAAJ,CACW,GADX,CAGe,CAAV,CAAIA,CAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,CAAX,CAT2D,CAA1E,CAYAlB,EAAAe,QAAAC,gBAAA,CAAkCf,CAAAgB,KAAlC,CAA+C,MAA/C,CAAuD,CAAvD,CAA0Df,CAAAoB,aAA1D,CAAqFtB,CAAAe,QAAAQ,eAArF,CACAvB,EAAAe,QAAAC,gBAAA,CAAkCf,CAAAgB,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,CAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,EAAV,CAAID,CAAJ,CACW,CADX,CAGe,CAAV,CAAIA,CAAJ,CACM,CADN,CAIMA,CAT2D,CAA1E,CAxC6D;\",\n\"sources\":[\"node_modules/konva/lib/filters/RGBA.js\"],\n\"sourcesContent\":[\"shadow$provide[83] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.RGBA = function (imageData) {\\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\\n    for (i = 0; i < nPixels; i += 4) {\\n        ia = 1 - alpha;\\n        data[i] = red * alpha + data[i] * ia;\\n        data[i + 1] = green * alpha + data[i + 1] * ia;\\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 1) {\\n        return 1;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return val;\\n    }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"RGBA\",\"exports.RGBA\",\"imageData\",\"data\",\"nPixels\",\"length\",\"red\",\"green\",\"blue\",\"alpha\",\"i\",\"ia\",\"Factory\",\"addGetterSetter\",\"Node\",\"val\",\"_filterUpToDate\",\"Math\",\"round\",\"RGBComponent\",\"afterSetFilter\"]\n}\n"]