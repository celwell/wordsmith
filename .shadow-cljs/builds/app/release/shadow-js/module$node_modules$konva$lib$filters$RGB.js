["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/RGB.js"],"~:js","shadow$provide[82]=function(n,e,t,k){Object.defineProperty(k,\"__esModule\",{value:!0});n=e(24);t=e(28);e=e(23);k.RGB=function(e){e=e.data;var k=e.length,n=this.red(),q=this.green(),m=this.blue(),d;for(d=0;d<k;d+=4){var b=(.34*e[d]+.5*e[d+1]+.16*e[d+2])/255;e[d]=b*n;e[d+1]=b*q;e[d+2]=b*m;e[d+3]=e[d+3]}};n.Factory.addGetterSetter(t.Node,\"red\",0,function(e){this._filterUpToDate=!1;return 255<e?255:0>e?0:Math.round(e)});n.Factory.addGetterSetter(t.Node,\"green\",0,function(e){this._filterUpToDate=!1;return 255<\ne?255:0>e?0:Math.round(e)});n.Factory.addGetterSetter(t.Node,\"blue\",0,e.RGBComponent,n.Factory.afterSetFilter)}","~:source","shadow$provide[82] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","RGB","value","_filterUpToDate"]],"~:compiled-at",1606343224279,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$RGB.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAE7DC,MAAAC,eAAA,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,EAAAA,CAAYN,CAAA,CAAQ,EAAR,CACZO,EAAAA,CAASP,CAAA,CAAQ,EAAR,CACTQ,EAAAA,CAAeR,CAAA,CAAQ,EAAR,CACnBE,EAAAO,IAAA,CAAcC,QAAS,CAACC,CAAD,CAAY,CAC3BC,CAAAA,CAAOD,CAAAC,KADoB,KACJC,EAAUD,CAAAE,OADN,CACmBC,EAAM,IAAAA,IAAA,EADzB,CACqCC,EAAQ,IAAAA,MAAA,EAD7C,CAC2DC,EAAO,IAAAA,KAAA,EADlE,CAC+EC,CAC9G,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBL,CAAhB,CAAyBK,CAAzB,EAA8B,CAA9B,CAAiC,CAC7B,IAAAC,GACK,GADLA,CACYP,CAAA,CAAKM,CAAL,CADZC,CACsB,EADtBA,CAC4BP,CAAA,CAAKM,CAAL,CAAS,CAAT,CAD5BC,CAC0C,GAD1CA,CACiDP,CAAA,CAAKM,CAAL,CAAS,CAAT,CADjDC,EACgE,GAChEP,EAAA,CAAKM,CAAL,CAAA,CAAUC,CAAV,CAAuBJ,CACvBH,EAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcC,CAAd,CAA2BH,CAC3BJ,EAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcC,CAAd,CAA2BF,CAC3BL,EAAA,CAAKM,CAAL,CAAS,CAAT,CAAA,CAAcN,CAAA,CAAKM,CAAL,CAAS,CAAT,CANe,CAFF,CAWnCZ,EAAAc,QAAAC,gBAAA,CAAkCd,CAAAe,KAAlC,CAA+C,KAA/C,CAAsD,CAAtD,CAAyD,QAAS,CAACC,CAAD,CAAM,CACpE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV,CAAID,CAAJ,CACW,GADX,CAGe,CAAV,CAAIA,CAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,CAAX,CATyD,CAAxE,CAYAjB,EAAAc,QAAAC,gBAAA,CAAkCd,CAAAe,KAAlC,CAA+C,OAA/C,CAAwD,CAAxD,CAA2D,QAAS,CAACC,CAAD,CAAM,CACtE,IAAAC,gBAAA,CAAuB,CAAA,CACvB,OAAU,IAAV;AAAID,CAAJ,CACW,GADX,CAGe,CAAV,CAAIA,CAAJ,CACM,CADN,CAIME,IAAAC,MAAA,CAAWH,CAAX,CAT2D,CAA1E,CAYAjB,EAAAc,QAAAC,gBAAA,CAAkCd,CAAAe,KAAlC,CAA+C,MAA/C,CAAuD,CAAvD,CAA0Dd,CAAAmB,aAA1D,CAAqFrB,CAAAc,QAAAQ,eAArF,CAzC6D;\",\n\"sources\":[\"node_modules/konva/lib/filters/RGB.js\"],\n\"sourcesContent\":[\"shadow$provide[82] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nexports.RGB = function (imageData) {\\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\\n    for (i = 0; i < nPixels; i += 4) {\\n        brightness =\\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\\n        data[i] = brightness * red;\\n        data[i + 1] = brightness * green;\\n        data[i + 2] = brightness * blue;\\n        data[i + 3] = data[i + 3];\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\\n    this._filterUpToDate = false;\\n    if (val > 255) {\\n        return 255;\\n    }\\n    else if (val < 0) {\\n        return 0;\\n    }\\n    else {\\n        return Math.round(val);\\n    }\\n});\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"RGB\",\"exports.RGB\",\"imageData\",\"data\",\"nPixels\",\"length\",\"red\",\"green\",\"blue\",\"i\",\"brightness\",\"Factory\",\"addGetterSetter\",\"Node\",\"val\",\"_filterUpToDate\",\"Math\",\"round\",\"RGBComponent\",\"afterSetFilter\"]\n}\n"]