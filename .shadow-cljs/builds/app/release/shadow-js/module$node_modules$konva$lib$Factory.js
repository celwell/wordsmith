["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/Factory.js"],"~:js","shadow$provide[24]=function(n,e,t,k){Object.defineProperty(k,\"__esModule\",{value:!0});var w=e(22),v=e(23);k.Factory={addGetterSetter:function(e,q,m,d,b){this.addGetter(e,q,m);this.addSetter(e,q,d,b);this.addOverloadedGetterSetter(e,q)},addGetter:function(e,q,m){var d=\"get\"+w.Util._capitalize(q);e.prototype[d]=e.prototype[d]||function(){var b=this.attrs[q];return void 0===b?m:b}},addSetter:function(e,q,m,d){var b=\"set\"+w.Util._capitalize(q);e.prototype[b]||k.Factory.overWriteSetter(e,q,m,d)},overWriteSetter:function(e,\nq,m,d){var b=\"set\"+w.Util._capitalize(q);e.prototype[b]=function(b){m&&void 0!==b&&null!==b&&(b=m.call(this,b,q));this._setAttr(q,b);d&&d.call(this);return this}},addComponentsGetterSetter:function(e,q,m,d,b){var h=m.length,a=w.Util._capitalize,c=\"get\"+a(q),p=\"set\"+a(q),r,D;e.prototype[c]=function(){var b={};for(r=0;r<h;r++)D=m[r],b[D]=this.getAttr(q+a(D));return b};var B=v.getComponentValidator(m);e.prototype[p]=function(c){var h=this.attrs[q],p;d&&(c=d.call(this,c));B&&B.call(this,c,q);for(p in c)c.hasOwnProperty(p)&&\nthis._setAttr(q+a(p),c[p]);this._fireChangeEvent(q,h,c);b&&b.call(this);return this};this.addOverloadedGetterSetter(e,q)},addOverloadedGetterSetter:function(e,q){var m=w.Util._capitalize(q),d=\"set\"+m,b=\"get\"+m;e.prototype[q]=function(){return arguments.length?(this[d](arguments[0]),this):this[b]()}},addDeprecatedGetterSetter:function(e,q,m,d){w.Util.error(\"Adding deprecated \"+q);var b=\"get\"+w.Util._capitalize(q),h=q+\" property is deprecated and will be removed soon. Look at Konva change log for more information.\";\ne.prototype[b]=function(){w.Util.error(h);var a=this.attrs[q];return void 0===a?m:a};this.addSetter(e,q,d,function(){w.Util.error(h)});this.addOverloadedGetterSetter(e,q)},backCompat:function(e,q){w.Util.each(q,function(m,d){function b(){h.apply(this,arguments);w.Util.error('\"'+m+'\" method is deprecated and will be removed soon. Use \"\"'+d+'\" instead.')}var h=e.prototype[d],a=\"get\"+w.Util._capitalize(m),c=\"set\"+w.Util._capitalize(m);e.prototype[m]=b;e.prototype[a]=b;e.prototype[c]=b})},afterSetFilter:function(){this._filterUpToDate=\n!1}}}","~:source","shadow$provide[24] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"./Util\");\nvar Validators_1 = require(\"./Validators\");\nvar GET = 'get', SET = 'set';\nexports.Factory = {\n    addGetterSetter: function (constructor, attr, def, validator, after) {\n        this.addGetter(constructor, attr, def);\n        this.addSetter(constructor, attr, validator, after);\n        this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function (constructor, attr, def) {\n        var method = GET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter: function (constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter: function (constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter: function (constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = Validators_1.getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function (constructor, attr) {\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter: function (constructor, attr, def, validator) {\n        Util_1.Util.error('Adding deprecated ' + attr);\n        var method = GET + Util_1.Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util_1.Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        this.addSetter(constructor, attr, validator, function () {\n            Util_1.Util.error(message);\n        });\n        this.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function (constructor, methods) {\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_1.Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter: function () {\n        this._filterUpToDate = false;\n    }\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["addSetter","addGetterSetter","addDeprecatedGetterSetter","__esModule","value","addOverloadedGetterSetter","addGetter","afterSetFilter","backCompat","addComponentsGetterSetter","overWriteSetter","Factory","_filterUpToDate"]],"~:compiled-at",1606343224159,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$Factory.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/Factory.js\"],\n\"sourcesContent\":[\"shadow$provide[24] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"./Util\\\");\\nvar Validators_1 = require(\\\"./Validators\\\");\\nvar GET = 'get', SET = 'set';\\nexports.Factory = {\\n    addGetterSetter: function (constructor, attr, def, validator, after) {\\n        this.addGetter(constructor, attr, def);\\n        this.addSetter(constructor, attr, validator, after);\\n        this.addOverloadedGetterSetter(constructor, attr);\\n    },\\n    addGetter: function (constructor, attr, def) {\\n        var method = GET + Util_1.Util._capitalize(attr);\\n        constructor.prototype[method] =\\n            constructor.prototype[method] ||\\n                function () {\\n                    var val = this.attrs[attr];\\n                    return val === undefined ? def : val;\\n                };\\n    },\\n    addSetter: function (constructor, attr, validator, after) {\\n        var method = SET + Util_1.Util._capitalize(attr);\\n        if (!constructor.prototype[method]) {\\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\\n        }\\n    },\\n    overWriteSetter: function (constructor, attr, validator, after) {\\n        var method = SET + Util_1.Util._capitalize(attr);\\n        constructor.prototype[method] = function (val) {\\n            if (validator && val !== undefined && val !== null) {\\n                val = validator.call(this, val, attr);\\n            }\\n            this._setAttr(attr, val);\\n            if (after) {\\n                after.call(this);\\n            }\\n            return this;\\n        };\\n    },\\n    addComponentsGetterSetter: function (constructor, attr, components, validator, after) {\\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\\n        constructor.prototype[getter] = function () {\\n            var ret = {};\\n            for (n = 0; n < len; n++) {\\n                component = components[n];\\n                ret[component] = this.getAttr(attr + capitalize(component));\\n            }\\n            return ret;\\n        };\\n        var basicValidator = Validators_1.getComponentValidator(components);\\n        constructor.prototype[setter] = function (val) {\\n            var oldVal = this.attrs[attr], key;\\n            if (validator) {\\n                val = validator.call(this, val);\\n            }\\n            if (basicValidator) {\\n                basicValidator.call(this, val, attr);\\n            }\\n            for (key in val) {\\n                if (!val.hasOwnProperty(key)) {\\n                    continue;\\n                }\\n                this._setAttr(attr + capitalize(key), val[key]);\\n            }\\n            this._fireChangeEvent(attr, oldVal, val);\\n            if (after) {\\n                after.call(this);\\n            }\\n            return this;\\n        };\\n        this.addOverloadedGetterSetter(constructor, attr);\\n    },\\n    addOverloadedGetterSetter: function (constructor, attr) {\\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\\n        constructor.prototype[attr] = function () {\\n            if (arguments.length) {\\n                this[setter](arguments[0]);\\n                return this;\\n            }\\n            return this[getter]();\\n        };\\n    },\\n    addDeprecatedGetterSetter: function (constructor, attr, def, validator) {\\n        Util_1.Util.error('Adding deprecated ' + attr);\\n        var method = GET + Util_1.Util._capitalize(attr);\\n        var message = attr +\\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\\n        constructor.prototype[method] = function () {\\n            Util_1.Util.error(message);\\n            var val = this.attrs[attr];\\n            return val === undefined ? def : val;\\n        };\\n        this.addSetter(constructor, attr, validator, function () {\\n            Util_1.Util.error(message);\\n        });\\n        this.addOverloadedGetterSetter(constructor, attr);\\n    },\\n    backCompat: function (constructor, methods) {\\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\\n            var method = constructor.prototype[newMethodName];\\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\\n            function deprecated() {\\n                method.apply(this, arguments);\\n                Util_1.Util.error('\\\"' +\\n                    oldMethodName +\\n                    '\\\" method is deprecated and will be removed soon. Use \\\"\\\"' +\\n                    newMethodName +\\n                    '\\\" instead.');\\n            }\\n            constructor.prototype[oldMethodName] = deprecated;\\n            constructor.prototype[oldGetter] = deprecated;\\n            constructor.prototype[oldSetter] = deprecated;\\n        });\\n    },\\n    afterSetFilter: function () {\\n        this._filterUpToDate = false;\\n    }\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Util_1\",\"Validators_1\",\"Factory\",\"addGetterSetter\",\"constructor\",\"attr\",\"def\",\"validator\",\"after\",\"addGetter\",\"addSetter\",\"addOverloadedGetterSetter\",\"method\",\"GET\",\"Util\",\"_capitalize\",\"prototype\",\"val\",\"attrs\",\"undefined\",\"SET\",\"overWriteSetter\",\"call\",\"_setAttr\",\"addComponentsGetterSetter\",\"components\",\"len\",\"length\",\"capitalize\",\"getter\",\"setter\",\"n\",\"component\",\"ret\",\"getAttr\",\"basicValidator\",\"getComponentValidator\",\"oldVal\",\"key\",\"hasOwnProperty\",\"_fireChangeEvent\",\"capitalizedAttr\",\"arguments\",\"addDeprecatedGetterSetter\",\"error\",\"message\",\"backCompat\",\"methods\",\"each\",\"oldMethodName\",\"newMethodName\",\"deprecated\",\"apply\",\"oldGetter\",\"oldSetter\",\"afterSetFilter\",\"_filterUpToDate\"]\n}\n"]