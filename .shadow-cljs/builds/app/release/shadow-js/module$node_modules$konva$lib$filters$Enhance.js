["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/filters/Enhance.js"],"~:js","shadow$provide[72]=function(n,e,t,k){function w(e,k,n,m,d){n-=k;d-=m;return 0===n?m+d/2:0===d?m:(e-k)/n*d+m}Object.defineProperty(k,\"__esModule\",{value:!0});n=e(24);t=e(28);e=e(23);k.Enhance=function(e){e=e.data;var k=e.length,n=e[0],m=n,d=e[1],b=d,h=e[2],a=h,c,p=this.enhance();if(0!==p){for(c=0;c<k;c+=4){var r=e[c+0];r<n?n=r:r>m&&(m=r);r=e[c+1];r<d?d=r:r>b&&(b=r);r=e[c+2];r<h?h=r:r>a&&(a=r)}m===n&&(m=255,n=0);b===d&&(b=255,d=0);a===h&&(a=255,h=0);if(0<p){r=m+p*(255-m);var v=n-p*(n-0);var t=b+p*(255-\nb);var C=d-p*(d-0);var z=a+p*(255-a);p=h-p*(h-0)}else c=.5*(m+n),r=m+p*(m-c),v=n+p*(n-c),c=.5*(b+d),t=b+p*(b-c),C=d+p*(d-c),c=.5*(a+h),z=a+p*(a-c),p=h+p*(h-c);for(c=0;c<k;c+=4)e[c+0]=w(e[c+0],n,m,v,r),e[c+1]=w(e[c+1],d,b,C,t),e[c+2]=w(e[c+2],h,a,p,z)}};n.Factory.addGetterSetter(t.Node,\"enhance\",0,e.getNumberValidator(),n.Factory.afterSetFilter)}","~:source","shadow$provide[72] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexports.Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Node"]],"~:properties",["^5",["__esModule","Enhance","value"]],"~:compiled-at",1589761458365,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$filters$Enhance.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/filters/Enhance.js\"],\n\"sourcesContent\":[\"shadow$provide[72] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Node_1 = require(\\\"../Node\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\\n    if (fromRange === 0) {\\n        return toMin + toRange / 2;\\n    }\\n    if (toRange === 0) {\\n        return toMin;\\n    }\\n    toValue = (fromValue - fromMin) / fromRange;\\n    toValue = toRange * toValue + toMin;\\n    return toValue;\\n}\\nexports.Enhance = function (imageData) {\\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\\n    var enhanceAmount = this.enhance();\\n    if (enhanceAmount === 0) {\\n        return;\\n    }\\n    for (i = 0; i < nSubPixels; i += 4) {\\n        r = data[i + 0];\\n        if (r < rMin) {\\n            rMin = r;\\n        }\\n        else if (r > rMax) {\\n            rMax = r;\\n        }\\n        g = data[i + 1];\\n        if (g < gMin) {\\n            gMin = g;\\n        }\\n        else if (g > gMax) {\\n            gMax = g;\\n        }\\n        b = data[i + 2];\\n        if (b < bMin) {\\n            bMin = b;\\n        }\\n        else if (b > bMax) {\\n            bMax = b;\\n        }\\n    }\\n    if (rMax === rMin) {\\n        rMax = 255;\\n        rMin = 0;\\n    }\\n    if (gMax === gMin) {\\n        gMax = 255;\\n        gMin = 0;\\n    }\\n    if (bMax === bMin) {\\n        bMax = 255;\\n        bMin = 0;\\n    }\\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\\n    if (enhanceAmount > 0) {\\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\\n    }\\n    else {\\n        rMid = (rMax + rMin) * 0.5;\\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\\n        gMid = (gMax + gMin) * 0.5;\\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\\n        bMid = (bMax + bMin) * 0.5;\\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\\n    }\\n    for (i = 0; i < nSubPixels; i += 4) {\\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\\n    }\\n};\\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"remap\",\"fromValue\",\"fromMin\",\"fromMax\",\"toMin\",\"toMax\",\"fromRange\",\"toRange\",\"Object\",\"defineProperty\",\"value\",\"Factory_1\",\"Node_1\",\"Validators_1\",\"Enhance\",\"exports.Enhance\",\"imageData\",\"data\",\"nSubPixels\",\"length\",\"rMin\",\"rMax\",\"gMin\",\"gMax\",\"bMin\",\"bMax\",\"i\",\"enhanceAmount\",\"enhance\",\"r\",\"g\",\"b\",\"rGoalMax\",\"rGoalMin\",\"gGoalMax\",\"gGoalMin\",\"bGoalMax\",\"bGoalMin\",\"rMid\",\"gMid\",\"bMid\",\"Factory\",\"addGetterSetter\",\"Node\",\"getNumberValidator\",\"afterSetFilter\"]\n}\n"]