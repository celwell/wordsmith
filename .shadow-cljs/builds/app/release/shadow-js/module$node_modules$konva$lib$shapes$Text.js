["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/konva/lib/shapes/Text.js"],"~:js","shadow$provide[64]=function(n,e,t,k){function w(){return a?a:a=q.Util.createCanvasElement().getContext(\"2d\")}function v(a){a=a||{};a.fillLinearGradientColorStops||a.fillRadialGradientColorStops||a.fillPatternImage||(a.fill=a.fill||\"black\");return a}var x=this&&this.__extends||function(){var a=function(b,c){a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return a(b,c)};return function(b,c){function d(){this.constructor=\nb}a(b,c);b.prototype=null===c?Object.create(c):(d.prototype=c.prototype,new d)}}();Object.defineProperty(k,\"__esModule\",{value:!0});var q=e(22);n=e(24);var m=e(33),d=e(21);t=e(23);e=e(21);var b=\"fontFamily fontSize fontStyle fontVariant padding align verticalAlign lineHeight text width height wrap ellipsis letterSpacing\".split(\" \"),h=b.length,a;m=function(a){function c(c){c=a.call(this,v(c))||this;c._partialTextX=0;for(var d=c._partialTextY=0;d<h;d++)c.on(b[d]+\"Change.konva\",c._setTextData);c._setTextData();\nreturn c}x(c,a);c.prototype._sceneFunc=function(a){var b=this.padding(),c=this.fontSize(),d=this.lineHeight()*c,e=this.textArr,h=e.length,m=this.verticalAlign(),k=0,p=this.align(),q=this.getWidth(),n=this.letterSpacing(),r=this.fill(),w=this.textDecoration(),v=-1!==w.indexOf(\"underline\");w=-1!==w.indexOf(\"line-through\");var x=d/2;a.setAttr(\"font\",this._getContextFont());a.setAttr(\"textBaseline\",\"middle\");a.setAttr(\"textAlign\",\"left\");\"middle\"===m?k=(this.getHeight()-h*d-2*b)/2:\"bottom\"===m&&(k=this.getHeight()-\nh*d-2*b);a.translate(b,k+b);for(m=0;m<h;m++){k=0;var t=e[m],K=t.text;t=t.width;var Z=m!==h-1;a.save();\"right\"===p?k+=q-t-2*b:\"center\"===p&&(k+=(q-t-2*b)/2);if(v){a.save();a.beginPath();a.moveTo(k,x+0+Math.round(c/2));var V=K.split(\" \").length-1;V=0===V;V=\"justify\"===p&&Z&&!V?q-2*b:t;a.lineTo(k+Math.round(V),x+0+Math.round(c/2));a.lineWidth=c/15;a.strokeStyle=r;a.stroke();a.restore()}w&&(a.save(),a.beginPath(),a.moveTo(k,x+0),V=K.split(\" \").length-1,V=0===V,V=\"justify\"===p&&Z&&!V?q-2*b:t,a.lineTo(k+\nMath.round(V),x+0),a.lineWidth=c/15,a.strokeStyle=r,a.stroke(),a.restore());if(0!==n||\"justify\"===p)for(V=K.split(\" \").length-1,Z=0;Z<K.length;Z++){var F=K[Z];\" \"===F&&m!==h-1&&\"justify\"===p&&(k+=Math.floor((q-2*b-t)/V));this._partialTextX=k;this._partialTextY=x+0;this._partialText=F;a.fillStrokeShape(this);k+=Math.round(this.measureSize(F).width)+n}else this._partialTextX=k,this._partialTextY=x+0,this._partialText=K,a.fillStrokeShape(this);a.restore();1<h&&(x+=d)}};c.prototype._hitFunc=function(a){var b=\nthis.getWidth(),c=this.getHeight();a.beginPath();a.rect(0,0,b,c);a.closePath();a.fillStrokeShape(this)};c.prototype.setText=function(a){a=q.Util._isString(a)?a:(a||\"\").toString();this._setAttr(\"text\",a);return this};c.prototype.getWidth=function(){return\"auto\"===this.attrs.width||void 0===this.attrs.width?this.getTextWidth()+2*this.padding():this.attrs.width};c.prototype.getHeight=function(){return\"auto\"===this.attrs.height||void 0===this.attrs.height?this.fontSize()*this.textArr.length*this.lineHeight()+\n2*this.padding():this.attrs.height};c.prototype.getTextWidth=function(){return this.textWidth};c.prototype.getTextHeight=function(){q.Util.warn(\"text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.\");return this.textHeight};c.prototype.measureSize=function(a){var b=w(),c=this.fontSize();b.save();b.font=this._getContextFont();a=b.measureText(a);b.restore();return{width:a.width,height:c}};c.prototype._getContextFont=function(){return d.Konva.UA.isIE?\nthis.fontStyle()+\" \"+this.fontSize()+\"px \"+this.fontFamily():this.fontStyle()+\" \"+this.fontVariant()+\" \"+this.fontSize()+\"px \"+this.fontFamily()};c.prototype._addTextLine=function(a){\"justify\"===this.align()&&(a=a.trim());var b=this._getTextWidth(a);return this.textArr.push({text:a,width:b})};c.prototype._getTextWidth=function(a){var b=this.letterSpacing(),c=a.length;return w().measureText(a).width+(c?b*(c-1):0)};c.prototype._setTextData=function(){var a=this.text().split(\"\\n\"),b=+this.fontSize(),\nc=0,d=this.lineHeight()*b,e=this.attrs.width,h=this.attrs.height,m=\"auto\"!==e&&void 0!==e,k=\"auto\"!==h&&void 0!==h,p=this.padding();e-=2*p;h-=2*p;p=0;var q=this.wrap(),n=\"none\"!==q;q=\"char\"!==q&&n;var v=this.ellipsis()&&!n;this.textArr=[];w().font=this._getContextFont();for(var x=v?this._getTextWidth(\"…\"):0,t=0,ca=a.length;t<ca;++t){var R=a[t],K=this._getTextWidth(R);if(m&&K>e)for(;0<R.length;){K=0;for(var Z=R.length,V=\"\",F=0;K<Z;){var S=K+Z>>>1,X=R.slice(0,S+1),W=this._getTextWidth(X)+x;W<=e?(K=\nS+1,V=X+(v?\"…\":\"\"),F=W):Z=S}if(V){q&&(Z=R[V.length],Z=(\" \"===Z||\"-\"===Z)&&F<=e?V.length:Math.max(V.lastIndexOf(\" \"),V.lastIndexOf(\"-\"))+1,0<Z&&(K=Z,V=V.slice(0,K),F=this._getTextWidth(V)));V=V.trimRight();this._addTextLine(V);c=Math.max(c,F);p+=d;if(!n||k&&p+d>h)break;R=R.slice(K);R=R.trimLeft();if(0<R.length&&(K=this._getTextWidth(R),K<=e)){this._addTextLine(R);p+=d;c=Math.max(c,K);break}}else break}else this._addTextLine(R),p+=d,c=Math.max(c,K);if(k&&p+d>h)break}this.textHeight=b;this.textWidth=\nc};c.prototype.getStrokeScaleEnabled=function(){return!0};return c}(m.Shape);k.Text=m;m.prototype._fillFunc=function(a){a.fillText(this._partialText,this._partialTextX,this._partialTextY)};m.prototype._strokeFunc=function(a){a.strokeText(this._partialText,this._partialTextX,this._partialTextY)};m.prototype.className=\"Text\";m.prototype._attrsAffectingSize=[\"text\",\"fontSize\",\"padding\",\"wrap\",\"lineHeight\"];e._registerNode(m);n.Factory.overWriteSetter(m,\"width\",t.getNumberOrAutoValidator());n.Factory.overWriteSetter(m,\n\"height\",t.getNumberOrAutoValidator());n.Factory.addGetterSetter(m,\"fontFamily\",\"Arial\");n.Factory.addGetterSetter(m,\"fontSize\",12,t.getNumberValidator());n.Factory.addGetterSetter(m,\"fontStyle\",\"normal\");n.Factory.addGetterSetter(m,\"fontVariant\",\"normal\");n.Factory.addGetterSetter(m,\"padding\",0,t.getNumberValidator());n.Factory.addGetterSetter(m,\"align\",\"left\");n.Factory.addGetterSetter(m,\"verticalAlign\",\"top\");n.Factory.addGetterSetter(m,\"lineHeight\",1,t.getNumberValidator());n.Factory.addGetterSetter(m,\n\"wrap\",\"word\");n.Factory.addGetterSetter(m,\"ellipsis\",!1);n.Factory.addGetterSetter(m,\"letterSpacing\",0,t.getNumberValidator());n.Factory.addGetterSetter(m,\"text\",\"\",t.getStringValidator());n.Factory.addGetterSetter(m,\"textDecoration\",\"\");q.Collection.mapMethods(m)}","~:source","shadow$provide[64] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing'\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nvar dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nvar Text = (function (_super) {\n    __extends(Text, _super);\n    function Text(config) {\n        var _this = _super.call(this, checkDefaultFill(config)) || this;\n        _this._partialTextX = 0;\n        _this._partialTextY = 0;\n        for (var n = 0; n < attrChangeListLen; n++) {\n            _this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, _this._setTextData);\n        }\n        _this._setTextData();\n        return _this;\n    }\n    Text.prototype._sceneFunc = function (context) {\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, textArr = this.textArr, textArrLen = textArr.length, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', MIDDLE);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = n !== textArrLen - 1, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(' ').length - 1;\n                for (var li = 0; li < text.length; li++) {\n                    var letter = text[li];\n                    if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n                        lineTranslateX += Math.floor((totalWidth - padding * 2 - width) / spacesNumber);\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX +=\n                        Math.round(this.measureSize(letter).width) + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    };\n    Text.prototype._hitFunc = function (context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    };\n    Text.prototype.setText = function (text) {\n        var str = Util_1.Util._isString(text) ? text : (text || '').toString();\n        this._setAttr(TEXT, str);\n        return this;\n    };\n    Text.prototype.getWidth = function () {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    };\n    Text.prototype.getHeight = function () {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    };\n    Text.prototype.getTextWidth = function () {\n        return this.textWidth;\n    };\n    Text.prototype.getTextHeight = function () {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    };\n    Text.prototype.measureSize = function (text) {\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize\n        };\n    };\n    Text.prototype._getContextFont = function () {\n        if (Global_1.Konva.UA.isIE) {\n            return (this.fontStyle() +\n                SPACE +\n                this.fontSize() +\n                PX_SPACE +\n                this.fontFamily());\n        }\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            this.fontSize() +\n            PX_SPACE +\n            this.fontFamily());\n    };\n    Text.prototype._addTextLine = function (line) {\n        if (this.align() === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({ text: line, width: width });\n    };\n    Text.prototype._getTextWidth = function (text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    };\n    Text.prototype._setTextData = function () {\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis() && !shouldWrap;\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        if (!shouldWrap ||\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    };\n    Text.prototype.getStrokeScaleEnabled = function () {\n        return true;\n    };\n    return Text;\n}(Shape_1.Shape));\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight'\n];\nGlobal_2._registerNode(Text);\nFactory_1.Factory.overWriteSetter(Text, 'width', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.overWriteSetter(Text, 'height', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false);\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', Validators_1.getStringValidator());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\nUtil_1.Collection.mapMethods(Text);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$konva$lib$Factory","~$module$node_modules$konva$lib$Validators","~$shadow.js","~$module$node_modules$konva$lib$Global","~$module$node_modules$konva$lib$Shape","~$module$node_modules$konva$lib$Util"]],"~:properties",["^5",["width","getWidth","lineWidth","_addTextLine","_partialTextY","prototype","height","_strokeFunc","setText","getTextWidth","className","_partialText","__esModule","textHeight","_getContextFont","_sceneFunc","getTextHeight","measureSize","value","textWidth","text","fill","getStrokeScaleEnabled","_getTextWidth","getHeight","font","_hitFunc","__proto__","_fillFunc","_attrsAffectingSize","Text","_setTextData","_partialTextX","strokeStyle","textArr","constructor"]],"~:compiled-at",1606343224261,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$konva$lib$shapes$Text.js\",\n\"lineCount\":13,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/konva/lib/shapes/Text.js\"],\n\"sourcesContent\":[\"shadow$provide[64] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar Util_1 = require(\\\"../Util\\\");\\nvar Factory_1 = require(\\\"../Factory\\\");\\nvar Shape_1 = require(\\\"../Shape\\\");\\nvar Global_1 = require(\\\"../Global\\\");\\nvar Validators_1 = require(\\\"../Validators\\\");\\nvar Global_2 = require(\\\"../Global\\\");\\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '\\u2026', ATTR_CHANGE_LIST = [\\n    'fontFamily',\\n    'fontSize',\\n    'fontStyle',\\n    'fontVariant',\\n    'padding',\\n    'align',\\n    'verticalAlign',\\n    'lineHeight',\\n    'text',\\n    'width',\\n    'height',\\n    'wrap',\\n    'ellipsis',\\n    'letterSpacing'\\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\\nvar dummyContext;\\nfunction getDummyContext() {\\n    if (dummyContext) {\\n        return dummyContext;\\n    }\\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\\n    return dummyContext;\\n}\\nfunction _fillFunc(context) {\\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\\n}\\nfunction _strokeFunc(context) {\\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\\n}\\nfunction checkDefaultFill(config) {\\n    config = config || {};\\n    if (!config.fillLinearGradientColorStops &&\\n        !config.fillRadialGradientColorStops &&\\n        !config.fillPatternImage) {\\n        config.fill = config.fill || 'black';\\n    }\\n    return config;\\n}\\nvar Text = (function (_super) {\\n    __extends(Text, _super);\\n    function Text(config) {\\n        var _this = _super.call(this, checkDefaultFill(config)) || this;\\n        _this._partialTextX = 0;\\n        _this._partialTextY = 0;\\n        for (var n = 0; n < attrChangeListLen; n++) {\\n            _this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, _this._setTextData);\\n        }\\n        _this._setTextData();\\n        return _this;\\n    }\\n    Text.prototype._sceneFunc = function (context) {\\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, textArr = this.textArr, textArrLen = textArr.length, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\\n        var translateY = 0;\\n        var translateY = lineHeightPx / 2;\\n        var lineTranslateX = 0;\\n        var lineTranslateY = 0;\\n        context.setAttr('font', this._getContextFont());\\n        context.setAttr('textBaseline', MIDDLE);\\n        context.setAttr('textAlign', LEFT);\\n        if (verticalAlign === MIDDLE) {\\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\\n        }\\n        else if (verticalAlign === BOTTOM) {\\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\\n        }\\n        context.translate(padding, alignY + padding);\\n        for (n = 0; n < textArrLen; n++) {\\n            var lineTranslateX = 0;\\n            var lineTranslateY = 0;\\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = n !== textArrLen - 1, spacesNumber, oneWord, lineWidth;\\n            context.save();\\n            if (align === RIGHT) {\\n                lineTranslateX += totalWidth - width - padding * 2;\\n            }\\n            else if (align === CENTER) {\\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\\n            }\\n            if (shouldUnderline) {\\n                context.save();\\n                context.beginPath();\\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\\n                spacesNumber = text.split(' ').length - 1;\\n                oneWord = spacesNumber === 0;\\n                lineWidth =\\n                    align === JUSTIFY && lastLine && !oneWord\\n                        ? totalWidth - padding * 2\\n                        : width;\\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\\n                context.lineWidth = fontSize / 15;\\n                context.strokeStyle = fill;\\n                context.stroke();\\n                context.restore();\\n            }\\n            if (shouldLineThrough) {\\n                context.save();\\n                context.beginPath();\\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\\n                spacesNumber = text.split(' ').length - 1;\\n                oneWord = spacesNumber === 0;\\n                lineWidth =\\n                    align === JUSTIFY && lastLine && !oneWord\\n                        ? totalWidth - padding * 2\\n                        : width;\\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\\n                context.lineWidth = fontSize / 15;\\n                context.strokeStyle = fill;\\n                context.stroke();\\n                context.restore();\\n            }\\n            if (letterSpacing !== 0 || align === JUSTIFY) {\\n                spacesNumber = text.split(' ').length - 1;\\n                for (var li = 0; li < text.length; li++) {\\n                    var letter = text[li];\\n                    if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\\n                        lineTranslateX += Math.floor((totalWidth - padding * 2 - width) / spacesNumber);\\n                    }\\n                    this._partialTextX = lineTranslateX;\\n                    this._partialTextY = translateY + lineTranslateY;\\n                    this._partialText = letter;\\n                    context.fillStrokeShape(this);\\n                    lineTranslateX +=\\n                        Math.round(this.measureSize(letter).width) + letterSpacing;\\n                }\\n            }\\n            else {\\n                this._partialTextX = lineTranslateX;\\n                this._partialTextY = translateY + lineTranslateY;\\n                this._partialText = text;\\n                context.fillStrokeShape(this);\\n            }\\n            context.restore();\\n            if (textArrLen > 1) {\\n                translateY += lineHeightPx;\\n            }\\n        }\\n    };\\n    Text.prototype._hitFunc = function (context) {\\n        var width = this.getWidth(), height = this.getHeight();\\n        context.beginPath();\\n        context.rect(0, 0, width, height);\\n        context.closePath();\\n        context.fillStrokeShape(this);\\n    };\\n    Text.prototype.setText = function (text) {\\n        var str = Util_1.Util._isString(text) ? text : (text || '').toString();\\n        this._setAttr(TEXT, str);\\n        return this;\\n    };\\n    Text.prototype.getWidth = function () {\\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\\n    };\\n    Text.prototype.getHeight = function () {\\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\\n        return isAuto\\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\\n                this.padding() * 2\\n            : this.attrs.height;\\n    };\\n    Text.prototype.getTextWidth = function () {\\n        return this.textWidth;\\n    };\\n    Text.prototype.getTextHeight = function () {\\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\\n        return this.textHeight;\\n    };\\n    Text.prototype.measureSize = function (text) {\\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\\n        _context.save();\\n        _context.font = this._getContextFont();\\n        metrics = _context.measureText(text);\\n        _context.restore();\\n        return {\\n            width: metrics.width,\\n            height: fontSize\\n        };\\n    };\\n    Text.prototype._getContextFont = function () {\\n        if (Global_1.Konva.UA.isIE) {\\n            return (this.fontStyle() +\\n                SPACE +\\n                this.fontSize() +\\n                PX_SPACE +\\n                this.fontFamily());\\n        }\\n        return (this.fontStyle() +\\n            SPACE +\\n            this.fontVariant() +\\n            SPACE +\\n            this.fontSize() +\\n            PX_SPACE +\\n            this.fontFamily());\\n    };\\n    Text.prototype._addTextLine = function (line) {\\n        if (this.align() === JUSTIFY) {\\n            line = line.trim();\\n        }\\n        var width = this._getTextWidth(line);\\n        return this.textArr.push({ text: line, width: width });\\n    };\\n    Text.prototype._getTextWidth = function (text) {\\n        var letterSpacing = this.letterSpacing();\\n        var length = text.length;\\n        return (getDummyContext().measureText(text).width +\\n            (length ? letterSpacing * (length - 1) : 0));\\n    };\\n    Text.prototype._setTextData = function () {\\n        var lines = this.text().split('\\\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis() && !shouldWrap;\\n        this.textArr = [];\\n        getDummyContext().font = this._getContextFont();\\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\\n        for (var i = 0, max = lines.length; i < max; ++i) {\\n            var line = lines[i];\\n            var lineWidth = this._getTextWidth(line);\\n            if (fixedWidth && lineWidth > maxWidth) {\\n                while (line.length > 0) {\\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\\n                    while (low < high) {\\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\\n                        if (substrWidth <= maxWidth) {\\n                            low = mid + 1;\\n                            match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\\n                            matchWidth = substrWidth;\\n                        }\\n                        else {\\n                            high = mid;\\n                        }\\n                    }\\n                    if (match) {\\n                        if (wrapAtWord) {\\n                            var wrapIndex;\\n                            var nextChar = line[match.length];\\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\\n                                wrapIndex = match.length;\\n                            }\\n                            else {\\n                                wrapIndex =\\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\\n                                        1;\\n                            }\\n                            if (wrapIndex > 0) {\\n                                low = wrapIndex;\\n                                match = match.slice(0, low);\\n                                matchWidth = this._getTextWidth(match);\\n                            }\\n                        }\\n                        match = match.trimRight();\\n                        this._addTextLine(match);\\n                        textWidth = Math.max(textWidth, matchWidth);\\n                        currentHeightPx += lineHeightPx;\\n                        if (!shouldWrap ||\\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\\n                            break;\\n                        }\\n                        line = line.slice(low);\\n                        line = line.trimLeft();\\n                        if (line.length > 0) {\\n                            lineWidth = this._getTextWidth(line);\\n                            if (lineWidth <= maxWidth) {\\n                                this._addTextLine(line);\\n                                currentHeightPx += lineHeightPx;\\n                                textWidth = Math.max(textWidth, lineWidth);\\n                                break;\\n                            }\\n                        }\\n                    }\\n                    else {\\n                        break;\\n                    }\\n                }\\n            }\\n            else {\\n                this._addTextLine(line);\\n                currentHeightPx += lineHeightPx;\\n                textWidth = Math.max(textWidth, lineWidth);\\n            }\\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\\n                break;\\n            }\\n        }\\n        this.textHeight = fontSize;\\n        this.textWidth = textWidth;\\n    };\\n    Text.prototype.getStrokeScaleEnabled = function () {\\n        return true;\\n    };\\n    return Text;\\n}(Shape_1.Shape));\\nexports.Text = Text;\\nText.prototype._fillFunc = _fillFunc;\\nText.prototype._strokeFunc = _strokeFunc;\\nText.prototype.className = TEXT_UPPER;\\nText.prototype._attrsAffectingSize = [\\n    'text',\\n    'fontSize',\\n    'padding',\\n    'wrap',\\n    'lineHeight'\\n];\\nGlobal_2._registerNode(Text);\\nFactory_1.Factory.overWriteSetter(Text, 'width', Validators_1.getNumberOrAutoValidator());\\nFactory_1.Factory.overWriteSetter(Text, 'height', Validators_1.getNumberOrAutoValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false);\\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, Validators_1.getNumberValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'text', '', Validators_1.getStringValidator());\\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\\nUtil_1.Collection.mapMethods(Text);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getDummyContext\",\"dummyContext\",\"Util_1\",\"Util\",\"createCanvasElement\",\"getContext\",\"CONTEXT_2D\",\"checkDefaultFill\",\"config\",\"fillLinearGradientColorStops\",\"fillRadialGradientColorStops\",\"fillPatternImage\",\"fill\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"defineProperty\",\"value\",\"Factory_1\",\"Shape_1\",\"Global_1\",\"Validators_1\",\"Global_2\",\"ATTR_CHANGE_LIST\",\"attrChangeListLen\",\"length\",\"Text\",\"_super\",\"_this\",\"call\",\"_partialTextX\",\"n\",\"_partialTextY\",\"on\",\"CHANGE_KONVA\",\"_setTextData\",\"_sceneFunc\",\"Text.prototype._sceneFunc\",\"context\",\"padding\",\"fontSize\",\"lineHeightPx\",\"lineHeight\",\"textArr\",\"textArrLen\",\"verticalAlign\",\"alignY\",\"align\",\"totalWidth\",\"getWidth\",\"letterSpacing\",\"textDecoration\",\"shouldUnderline\",\"indexOf\",\"shouldLineThrough\",\"translateY\",\"setAttr\",\"_getContextFont\",\"MIDDLE\",\"LEFT\",\"getHeight\",\"BOTTOM\",\"translate\",\"lineTranslateX\",\"obj\",\"text\",\"width\",\"lastLine\",\"save\",\"RIGHT\",\"CENTER\",\"beginPath\",\"moveTo\",\"lineTranslateY\",\"Math\",\"round\",\"spacesNumber\",\"split\",\"oneWord\",\"lineWidth\",\"JUSTIFY\",\"lineTo\",\"strokeStyle\",\"stroke\",\"restore\",\"li\",\"letter\",\"floor\",\"_partialText\",\"fillStrokeShape\",\"measureSize\",\"_hitFunc\",\"Text.prototype._hitFunc\",\"height\",\"rect\",\"closePath\",\"setText\",\"Text.prototype.setText\",\"str\",\"_isString\",\"toString\",\"_setAttr\",\"TEXT\",\"Text.prototype.getWidth\",\"AUTO\",\"attrs\",\"undefined\",\"getTextWidth\",\"Text.prototype.getHeight\",\"Text.prototype.getTextWidth\",\"textWidth\",\"getTextHeight\",\"Text.prototype.getTextHeight\",\"warn\",\"textHeight\",\"Text.prototype.measureSize\",\"_context\",\"font\",\"metrics\",\"measureText\",\"Text.prototype._getContextFont\",\"Konva\",\"UA\",\"isIE\",\"fontStyle\",\"SPACE\",\"PX_SPACE\",\"fontFamily\",\"fontVariant\",\"_addTextLine\",\"Text.prototype._addTextLine\",\"line\",\"trim\",\"_getTextWidth\",\"push\",\"Text.prototype._getTextWidth\",\"Text.prototype._setTextData\",\"lines\",\"fixedWidth\",\"fixedHeight\",\"maxWidth\",\"maxHeightPx\",\"currentHeightPx\",\"wrap\",\"shouldWrap\",\"NONE\",\"wrapAtWord\",\"CHAR\",\"shouldAddEllipsis\",\"ellipsis\",\"additionalWidth\",\"ELLIPSIS\",\"i\",\"max\",\"low\",\"high\",\"match\",\"matchWidth\",\"mid\",\"substr\",\"slice\",\"substrWidth\",\"nextChar\",\"wrapIndex\",\"DASH\",\"lastIndexOf\",\"trimRight\",\"trimLeft\",\"getStrokeScaleEnabled\",\"Text.prototype.getStrokeScaleEnabled\",\"Shape\",\"_fillFunc\",\"fillText\",\"_strokeFunc\",\"strokeText\",\"className\",\"TEXT_UPPER\",\"_attrsAffectingSize\",\"_registerNode\",\"Factory\",\"overWriteSetter\",\"getNumberOrAutoValidator\",\"addGetterSetter\",\"getNumberValidator\",\"NORMAL\",\"TOP\",\"WORD\",\"getStringValidator\",\"Collection\",\"mapMethods\"]\n}\n"]