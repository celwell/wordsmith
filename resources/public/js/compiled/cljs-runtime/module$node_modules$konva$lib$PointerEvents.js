shadow$provide.module$node_modules$konva$lib$PointerEvents=function(global,require,module,exports){function createEvent(evt){return{evt:evt,pointerId:evt.pointerId}}function releaseCapture(pointerId,target){if(target=Captures.get(pointerId))target.getStage(),Captures.delete(pointerId),SUPPORT_POINTER_EVENTS&&target._fire("lostpointercapture",createEvent(new PointerEvent("lostpointercapture")))}Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$konva$lib$Global");
var Captures=new Map,SUPPORT_POINTER_EVENTS=void 0!==global.Konva._global.PointerEvent;exports.getCapturedShape=function(pointerId){return Captures.get(pointerId)};exports.createEvent=createEvent;exports.hasPointerCapture=function(pointerId,shape){return Captures.get(pointerId)===shape};exports.setPointerCapture=function(pointerId,shape){releaseCapture(pointerId);shape.getStage()&&(Captures.set(pointerId,shape),SUPPORT_POINTER_EVENTS&&shape._fire("gotpointercapture",createEvent(new PointerEvent("gotpointercapture"))))};
exports.releaseCapture=releaseCapture}
//# sourceMappingURL=module$node_modules$konva$lib$PointerEvents.js.map
