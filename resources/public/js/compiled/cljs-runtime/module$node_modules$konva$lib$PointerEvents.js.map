{
"version":3,
"file":"module$node_modules$konva$lib$PointerEvents.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUxGC,QAASA,YAAW,CAACC,GAAD,CAAM,CACtB,MAAO,CACHA,IAAKA,GADF,CAEHC,UAAWD,GAAAC,UAFR,CADe,CAsB1BC,QAASA,eAAc,CAACD,SAAD,CAAYE,MAAZ,CAAoB,CAEvC,GADIC,MACJ,CADYC,QAAAC,IAAA,CAAaL,SAAb,CACZ,CAEYG,MAAAG,SAAA,EAIZ,CADAF,QAAAG,OAAA,CAAgBP,SAAhB,CACA,CAAIQ,sBAAJ,EACIL,MAAAM,MAAA,CAAY,oBAAZ,CAAkCX,WAAA,CAAY,IAAIY,YAAJ,CAAiB,oBAAjB,CAAZ,CAAlC,CATmC,CA9B3CC,MAAAC,eAAA,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAAEgB,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAWnB,OAAA,CAAQ,sCAAR,CACf;IAAIS,SAAW,IAAIW,GAAnB,CACIP,uBAAoEQ,IAAAA,EAApER,GAAyBM,MAAAG,MAAAC,QAAA,aAI7BrB,QAAAsB,iBAAA,CAHAA,QAAyB,CAACnB,SAAD,CAAY,CACjC,MAAOI,SAAAC,IAAA,CAAaL,SAAb,CAD0B,CAUrCH,QAAAC,YAAA,CAAsBA,WAItBD,QAAAuB,kBAAA,CAHAA,QAA0B,CAACpB,SAAD,CAAYG,KAAZ,CAAmB,CACzC,MAAOC,SAAAC,IAAA,CAAaL,SAAb,CAAP,GAAmCG,KADM,CAc7CN,QAAAwB,kBAAA,CAVAA,QAA0B,CAACrB,SAAD,CAAYG,KAAZ,CAAmB,CACzCF,cAAA,CAAeD,SAAf,CACYG,MAAAG,SAAAgB,EACZ,GAEAlB,QAAAmB,IAAA,CAAavB,SAAb,CAAwBG,KAAxB,CACA,CAAIK,sBAAJ,EACIL,KAAAM,MAAA,CAAY,mBAAZ,CAAiCX,WAAA,CAAY,IAAIY,YAAJ,CAAiB,mBAAjB,CAAZ,CAAjC,CAJJ,CAHyC,CAuB7Cb;OAAAI,eAAA,CAAyBA,cA5C+E;",
"sources":["node_modules/konva/lib/PointerEvents.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$PointerEvents\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Global_1 = require(\"./Global\");\nvar Captures = new Map();\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\nfunction getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexports.getCapturedShape = getCapturedShape;\nfunction createEvent(evt) {\n    return {\n        evt: evt,\n        pointerId: evt.pointerId\n    };\n}\nexports.createEvent = createEvent;\nfunction hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexports.hasPointerCapture = hasPointerCapture;\nfunction setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    var stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexports.setPointerCapture = setPointerCapture;\nfunction releaseCapture(pointerId, target) {\n    var shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    var stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\nexports.releaseCapture = releaseCapture;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createEvent","evt","pointerId","releaseCapture","target","shape","Captures","get","getStage","delete","SUPPORT_POINTER_EVENTS","_fire","PointerEvent","Object","defineProperty","value","Global_1","Map","undefined","Konva","_global","getCapturedShape","hasPointerCapture","setPointerCapture","stage","set"]
}
