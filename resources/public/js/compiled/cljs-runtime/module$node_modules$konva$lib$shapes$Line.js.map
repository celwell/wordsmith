{
"version":3,
"file":"module$node_modules$konva$lib$shapes$Line.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/konva/lib/shapes/Line.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$shapes$Line\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_1 = require(\"../Global\");\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    function Line(config) {\n        var _this = _super.call(this, config) || this;\n        _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n        return _this;\n    }\n    Line.prototype._sceneFunc = function (context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    };\n    Line.prototype.getTensionPoints = function () {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    };\n    Line.prototype._getTensionPoints = function () {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return Util_1.Util._expandPoints(this.points(), this.tension());\n        }\n    };\n    Line.prototype._getTensionPointsClosed = function () {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = Util_1.Util._expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n        ]);\n        return tp;\n    };\n    Line.prototype.getWidth = function () {\n        return this.getSelfRect().width;\n    };\n    Line.prototype.getHeight = function () {\n        return this.getSelfRect().height;\n    };\n    Line.prototype.getSelfRect = function () {\n        var points;\n        if (this.tension() !== 0) {\n            points = this._getTensionPoints();\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY)\n        };\n    };\n    return Line;\n}(Shape_1.Shape));\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\nGlobal_1._registerNode(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\nUtil_1.Collection.mapMethods(Line);\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","Util_1","Factory_1","Shape_1","Validators_1","Global_1","Line","_super","config","_this","call","on","_clearCache","_sceneFunc","Line.prototype._sceneFunc","context","points","length","tension","closed","bezier","beginPath","moveTo","tp","getTensionPoints","len","n","quadraticCurveTo","bezierCurveTo","lineTo","closePath","fillStrokeShape","strokeShape","Line.prototype.getTensionPoints","_getCache","_getTensionPoints","Line.prototype._getTensionPoints","_getTensionPointsClosed","Util","_expandPoints","Line.prototype._getTensionPointsClosed","firstControlPoints","_getControlPoints","lastControlPoints","middle","concat","getWidth","Line.prototype.getWidth","getSelfRect","width","getHeight","Line.prototype.getHeight","height","Line.prototype.getSelfRect","minX","maxX","minY","maxY","x","y","i","Math","min","max","round","Shape","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","getNumberValidator","getNumberArrayValidator","Collection","mapMethods"]
}
