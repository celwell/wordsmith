{
"version":3,
"file":"module$node_modules$konva$lib$Validators.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/konva/lib/Validators.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$Validators\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexports.RGBComponent = RGBComponent;\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexports.alphaComponent = alphaComponent;\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberValidator = getNumberValidator;\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_1.Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringValidator = getStringValidator;\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexports.getFunctionValidator = getFunctionValidator;\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberArrayValidator = getNumberArrayValidator;\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexports.getBooleanValidator = getBooleanValidator;\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\nexports.getComponentValidator = getComponentValidator;\n\n};"],
"names":["shadow$provide","global","require","module","exports","_formatValue","val","Util_1","Util","_isString","Object","prototype","toString","call","_isBoolean","defineProperty","value","Global_1","RGBComponent","Math","round","alphaComponent","getNumberValidator","Konva","isUnminified","attr","_isNumber","warn","getNumberOrAutoValidator","isNumber","getStringValidator","getFunctionValidator","_isFunction","getNumberArrayValidator","_isArray","forEach","item","getBooleanValidator","getComponentValidator","components","isObject"]
}
