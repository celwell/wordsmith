{
"version":3,
"file":"module$node_modules$konva$lib$filters$Enhance.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/konva/lib/filters/Enhance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$filters$Enhance\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexports.Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};"],
"names":["shadow$provide","global","require","module","exports","remap","fromValue","fromMin","fromMax","toMin","toMax","fromRange","toRange","Object","defineProperty","value","Factory_1","Node_1","Validators_1","Enhance","exports.Enhance","imageData","data","nSubPixels","length","rMin","rMax","gMin","gMax","bMin","bMax","i","enhanceAmount","enhance","r","g","b","rGoalMax","rGoalMin","gGoalMax","gGoalMin","bGoalMax","bGoalMin","rMid","gMid","bMid","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"]
}
