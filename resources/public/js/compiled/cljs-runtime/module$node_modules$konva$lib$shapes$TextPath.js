shadow$provide.module$node_modules$konva$lib$shapes$TextPath=function(global,require,module,exports){function _fillFunc(context){context.fillText(this.partialText,0,0)}function _strokeFunc(context){context.strokeText(this.partialText,0,0)}var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,
b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var Util_1=require("module$node_modules$konva$lib$Util");global=require("module$node_modules$konva$lib$Factory");var Shape_1=require("module$node_modules$konva$lib$Shape"),Path_1=require("module$node_modules$konva$lib$shapes$Path"),Text_1=require("module$node_modules$konva$lib$shapes$Text");
module=require("module$node_modules$konva$lib$Validators");require=require("module$node_modules$konva$lib$Global");Shape_1=function(_super){function TextPath(config){var _this=_super.call(this,config)||this;_this.dummyCanvas=Util_1.Util.createCanvasElement();_this.dataArray=[];_this.dataArray=Path_1.Path.parsePathData(_this.attrs.data);_this.on("dataChange.konva",function(){this.dataArray=Path_1.Path.parsePathData(this.attrs.data);this._setTextData()});_this.on("textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva",
_this._setTextData);config&&config.getKerning&&(Util_1.Util.warn('getKerning TextPath API is deprecated. Please use "kerningFunc" instead.'),_this.kerningFunc(config.getKerning));_this._setTextData();return _this}__extends(TextPath,_super);TextPath.prototype._sceneFunc=function(context){context.setAttr("font",this._getContextFont());context.setAttr("textBaseline",this.textBaseline());context.setAttr("textAlign","left");context.save();var textDecoration=this.textDecoration(),fill=this.fill(),fontSize=
this.fontSize(),glyphInfo=this.glyphInfo;"underline"===textDecoration&&context.beginPath();for(var i=0;i<glyphInfo.length;i++){context.save();var p0=glyphInfo[i].p0;context.translate(p0.x,p0.y);context.rotate(glyphInfo[i].rotation);this.partialText=glyphInfo[i].text;context.fillStrokeShape(this);"underline"===textDecoration&&(0===i&&context.moveTo(0,fontSize/2+1),context.lineTo(fontSize,fontSize/2+1));context.restore()}"underline"===textDecoration&&(context.strokeStyle=fill,context.lineWidth=fontSize/
20,context.stroke());context.restore()};TextPath.prototype._hitFunc=function(context){context.beginPath();var glyphInfo=this.glyphInfo;if(1<=glyphInfo.length){var p0=glyphInfo[0].p0;context.moveTo(p0.x,p0.y)}for(p0=0;p0<glyphInfo.length;p0++){var p1=glyphInfo[p0].p1;context.lineTo(p1.x,p1.y)}context.setAttr("lineWidth",this.fontSize());context.setAttr("strokeStyle",this.colorKey);context.stroke()};TextPath.prototype.getTextWidth=function(){return this.textWidth};TextPath.prototype.getTextHeight=function(){Util_1.Util.warn("text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.");
return this.textHeight};TextPath.prototype.setText=function(text){return Text_1.Text.prototype.setText.call(this,text)};TextPath.prototype._getContextFont=function(){return Text_1.Text.prototype._getContextFont.call(this)};TextPath.prototype._getTextSize=function(text){var _context=this.dummyCanvas.getContext("2d");_context.save();_context.font=this._getContextFont();text=_context.measureText(text);_context.restore();return{width:text.width,height:parseInt(this.attrs.fontSize,10)}};TextPath.prototype._setTextData=
function(){var that=this,size=this._getTextSize(this.attrs.text),letterSpacing=this.letterSpacing(),align=this.align(),kerningFunc=this.kerningFunc();this.textWidth=size.width;this.textHeight=size.height;var textFullWidth=Math.max(this.textWidth+((this.attrs.text||"").length-1)*letterSpacing,0);this.glyphInfo=[];var fullPathWidth=0;for(size=0;size<that.dataArray.length;size++)0<that.dataArray[size].pathLength&&(fullPathWidth+=that.dataArray[size].pathLength);var offset=0;"center"===align&&(offset=
Math.max(0,fullPathWidth/2-textFullWidth/2));"right"===align&&(offset=Math.max(0,fullPathWidth-textFullWidth));size=this.text().split("");for(var spacesNumber=this.text().split(" ").length-1,p0,p1,pathCmd,pIndex=-1,currentT=0,findSegmentToFitCharacter=function(c){var glyphWidth=that._getTextSize(c).width+letterSpacing;" "===c&&"justify"===align&&(glyphWidth+=(fullPathWidth-textFullWidth)/spacesNumber);var attempts=c=0;for(p1=void 0;.01<Math.abs(glyphWidth-c)/glyphWidth&&25>attempts;){attempts++;for(var cumulativePathLength=
c;void 0===pathCmd;){a:{currentT=0;for(var pathData=that.dataArray,j=pIndex+1;j<pathData.length;j++)if(0<pathData[j].pathLength){pIndex=j;pathCmd=pathData[j];break a}else"M"===pathData[j].command&&(p0={x:pathData[j].points[0],y:pathData[j].points[1]});pathCmd={}}pathCmd&&cumulativePathLength+pathCmd.pathLength<glyphWidth&&(cumulativePathLength+=pathCmd.pathLength,pathCmd=void 0)}if(pathCmd==={}||void 0===p0)break;cumulativePathLength=!1;switch(pathCmd.command){case "L":Path_1.Path.getLineLength(p0.x,
p0.y,pathCmd.points[0],pathCmd.points[1])>glyphWidth?p1=Path_1.Path.getPointOnLine(glyphWidth,p0.x,p0.y,pathCmd.points[0],pathCmd.points[1],p0.x,p0.y):pathCmd=void 0;break;case "A":pathData=pathCmd.points[4];j=pathCmd.points[5];var end=pathCmd.points[4]+j;currentT=0===currentT?pathData+1E-8:glyphWidth>c?currentT+Math.PI/180*j/Math.abs(j):currentT-Math.PI/360*j/Math.abs(j);if(0>j&&currentT<end||0<=j&&currentT>end)currentT=end,cumulativePathLength=!0;p1=Path_1.Path.getPointOnEllipticalArc(pathCmd.points[0],
pathCmd.points[1],pathCmd.points[2],pathCmd.points[3],currentT,pathCmd.points[6]);break;case "C":currentT=0===currentT?glyphWidth>pathCmd.pathLength?1E-8:glyphWidth/pathCmd.pathLength:glyphWidth>c?currentT+(glyphWidth-c)/pathCmd.pathLength:currentT-(c-glyphWidth)/pathCmd.pathLength;1<currentT&&(currentT=1,cumulativePathLength=!0);p1=Path_1.Path.getPointOnCubicBezier(currentT,pathCmd.start.x,pathCmd.start.y,pathCmd.points[0],pathCmd.points[1],pathCmd.points[2],pathCmd.points[3],pathCmd.points[4],pathCmd.points[5]);
break;case "Q":currentT=0===currentT?glyphWidth/pathCmd.pathLength:glyphWidth>c?currentT+(glyphWidth-c)/pathCmd.pathLength:currentT-(c-glyphWidth)/pathCmd.pathLength,1<currentT&&(currentT=1,cumulativePathLength=!0),p1=Path_1.Path.getPointOnQuadraticBezier(currentT,pathCmd.start.x,pathCmd.start.y,pathCmd.points[0],pathCmd.points[1],pathCmd.points[2],pathCmd.points[3])}void 0!==p1&&(c=Path_1.Path.getLineLength(p0.x,p0.y,p1.x,p1.y));cumulativePathLength&&(pathCmd=void 0)}},glyphWidth=that._getTextSize("C").width+
letterSpacing,k=0;k<offset/glyphWidth;k++){findSegmentToFitCharacter("C");if(void 0===p0||void 0===p1)break;p0=p1}for(offset=0;offset<size.length;offset++){findSegmentToFitCharacter(size[offset]);if(void 0===p0||void 0===p1)break;glyphWidth=Path_1.Path.getLineLength(p0.x,p0.y,p1.x,p1.y);k=0;if(kerningFunc)try{k=kerningFunc(size[offset-1],size[offset])*this.fontSize()}catch(e){k=0}p0.x+=k;p1.x+=k;this.textWidth+=k;glyphWidth=Path_1.Path.getPointOnLine(k+glyphWidth/2,p0.x,p0.y,p1.x,p1.y);this.glyphInfo.push({transposeX:glyphWidth.x,
transposeY:glyphWidth.y,text:size[offset],rotation:Math.atan2(p1.y-p0.y,p1.x-p0.x),p0:p0,p1:p1});p0=p1}};TextPath.prototype.getSelfRect=function(){var points=[];this.glyphInfo.forEach(function(info){points.push(info.p0.x);points.push(info.p0.y);points.push(info.p1.x);points.push(info.p1.y)});for(var minX=points[0],maxX=points[0],minY=points[0],maxY=points[0],x,y,i=0;i<points.length/2;i++)x=points[2*i],y=points[2*i+1],minX=Math.min(minX,x),maxX=Math.max(maxX,x),minY=Math.min(minY,y),maxY=Math.max(maxY,
y);x=this.fontSize();return{x:Math.round(minX)-x/2,y:Math.round(minY)-x/2,width:Math.round(maxX-minX)+x,height:Math.round(maxY-minY)+x}};return TextPath}(Shape_1.Shape);exports.TextPath=Shape_1;Shape_1.prototype._fillFunc=_fillFunc;Shape_1.prototype._strokeFunc=_strokeFunc;Shape_1.prototype._fillFuncHit=_fillFunc;Shape_1.prototype._strokeFuncHit=_strokeFunc;Shape_1.prototype.className="TextPath";Shape_1.prototype._attrsAffectingSize=["text","fontSize","data"];require._registerNode(Shape_1);global.Factory.addGetterSetter(Shape_1,
"data");global.Factory.addGetterSetter(Shape_1,"fontFamily","Arial");global.Factory.addGetterSetter(Shape_1,"fontSize",12,module.getNumberValidator());global.Factory.addGetterSetter(Shape_1,"fontStyle","normal");global.Factory.addGetterSetter(Shape_1,"align","left");global.Factory.addGetterSetter(Shape_1,"letterSpacing",0,module.getNumberValidator());global.Factory.addGetterSetter(Shape_1,"textBaseline","middle");global.Factory.addGetterSetter(Shape_1,"fontVariant","normal");global.Factory.addGetterSetter(Shape_1,
"text","");global.Factory.addGetterSetter(Shape_1,"textDecoration",null);global.Factory.addGetterSetter(Shape_1,"kerningFunc",null);Util_1.Collection.mapMethods(Shape_1)}
//# sourceMappingURL=module$node_modules$konva$lib$shapes$TextPath.js.map
