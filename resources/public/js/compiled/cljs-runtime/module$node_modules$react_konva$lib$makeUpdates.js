shadow$provide.module$node_modules$react_konva$lib$makeUpdates=function(global,require,module,exports){function updatePicture(node){(node=node.getLayer()||node.getStage())&&node.batchDraw()}exports.__esModule=!0;exports.toggleStrictMode=function(value){useStrictMode=value};exports.applyNodeProps=function(instance,props){var oldProps=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};!zIndexWarningShowed&&"zIndex"in props&&(console.warn(Z_INDEX_WARNING),zIndexWarningShowed=!0);if(!dragWarningShowed&&
props.draggable){var hasEvents=props.onDragEnd||props.onDragMove;void 0===props.x&&void 0===props.y||hasEvents||(console.warn(DRAGGABLE_WARNING),dragWarningShowed=!0)}for(var key in oldProps)if(!propsToSkip[key]){hasEvents="on"===key.slice(0,2);var propChanged=oldProps[key]!==props[key];if(hasEvents&&propChanged){var eventName=key.substr(2).toLowerCase();"content"===eventName.substr(0,7)&&(eventName="content"+eventName.substr(7,1).toUpperCase()+eventName.substr(8));instance.off(eventName,oldProps[key])}props.hasOwnProperty(key)||
instance.setAttr(key,void 0)}propChanged=useStrictMode||props._useStrictMode;var updatedProps={},hasUpdates=!1;for(key in props)if(!propsToSkip[key]){hasEvents="on"===key.slice(0,2);eventName=oldProps[key]!==props[key];if(hasEvents&&eventName&&(eventName=key.substr(2).toLowerCase(),"content"===eventName.substr(0,7)&&(eventName="content"+eventName.substr(7,1).toUpperCase()+eventName.substr(8)),props[key]))instance.on(eventName+EVENTS_NAMESPACE,props[key]);!hasEvents&&(props[key]!==oldProps[key]||propChanged&&
props[key]!==instance.getAttr(key))&&(hasUpdates=!0,updatedProps[key]=props[key])}hasUpdates&&(instance.setAttrs(updatedProps),updatePicture(instance))};exports.updatePicture=updatePicture;var propsToSkip={children:!0,ref:!0,key:!0,style:!0,forwardedRef:!0,unstable_applyCache:!0,unstable_applyDrawHitFromCache:!0},zIndexWarningShowed=!1,dragWarningShowed=!1,EVENTS_NAMESPACE=exports.EVENTS_NAMESPACE=".react-konva-event",useStrictMode=!1,DRAGGABLE_WARNING="ReactKonva: You have a Konva node with draggable \x3d true and position defined but no onDragMove or onDragEnd events are handled.\nPosition of a node will be changed during drag\x26drop, so you should update state of the react app as well.\nConsider to add onDragMove or onDragEnd events.\nFor more info see: https://github.com/konvajs/react-konva/issues/256\n",
Z_INDEX_WARNING='ReactKonva: You are using "zIndex" attribute for a Konva node.\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\nFor more info see: https://github.com/konvajs/react-konva/issues/194\n'}
//# sourceMappingURL=module$node_modules$react_konva$lib$makeUpdates.js.map
