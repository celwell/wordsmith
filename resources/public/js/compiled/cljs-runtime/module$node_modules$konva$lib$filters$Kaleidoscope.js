shadow$provide.module$node_modules$konva$lib$filters$Kaleidoscope=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$konva$lib$Factory");module=require("module$node_modules$konva$lib$Node");var Util_1=require("module$node_modules$konva$lib$Util");require=require("module$node_modules$konva$lib$Validators");exports.Kaleidoscope=function(imageData){var xSize=imageData.width,ySize=imageData.height,power=Math.round(this.kaleidoscopePower()),
angle=Math.round(this.kaleidoscopeAngle());var i=Math.floor(angle%360*xSize/360);if(!(1>power)){angle=Util_1.Util.createCanvasElement();angle.width=xSize;angle.height=ySize;angle=angle.getContext("2d").getImageData(0,0,xSize,ySize);var x=imageData.data;var y=angle.data;var xSize$jscomp$0=imageData.width;var xoff=imageData.height;var g=xSize/2||xSize$jscomp$0/2;var b=ySize/2||xoff/2;var rMax=Math.sqrt(g*g+b*b);var i$jscomp$0=xSize$jscomp$0-g;var y$jscomp$0=xoff-b;var rad=Math.sqrt(i$jscomp$0*i$jscomp$0+
y$jscomp$0*y$jscomp$0);rMax=rad>rMax?rad:rMax;var theta,conversion=360/xSize$jscomp$0*Math.PI/180;for(theta=0;theta<xSize$jscomp$0;theta+=1){var a=Math.sin(theta*conversion);var dstPos=Math.cos(theta*conversion);for(rad=0;rad<xoff;rad+=1){i$jscomp$0=Math.floor(g+rMax*rad/xoff*dstPos);y$jscomp$0=Math.floor(b+rMax*rad/xoff*a);i$jscomp$0=4*(y$jscomp$0*xSize$jscomp$0+i$jscomp$0);y$jscomp$0=x[i$jscomp$0+0];var g$jscomp$0=x[i$jscomp$0+1];var b$jscomp$0=x[i$jscomp$0+2];var a$jscomp$0=x[i$jscomp$0+3];i$jscomp$0=
4*(theta+rad*xSize$jscomp$0);y[i$jscomp$0+0]=y$jscomp$0;y[i$jscomp$0+1]=g$jscomp$0;y[i$jscomp$0+2]=b$jscomp$0;y[i$jscomp$0+3]=a$jscomp$0}}for(xSize$jscomp$0=xSize/Math.pow(2,power);8>=xSize$jscomp$0;)xSize$jscomp$0*=2,--power;rMax=xSize$jscomp$0=Math.ceil(xSize$jscomp$0);rad=0;theta=rMax;conversion=1;i+xSize$jscomp$0>xSize&&(rad=rMax,theta=0,conversion=-1);for(y=0;y<ySize;y+=1)for(x=rad;x!==theta;x+=conversion)xoff=Math.round(x+i)%xSize,a=4*(xSize*y+xoff),xoff=angle.data[a+0],g=angle.data[a+1],b=
angle.data[a+2],a=angle.data[a+3],dstPos=4*(xSize*y+x),angle.data[dstPos+0]=xoff,angle.data[dstPos+1]=g,angle.data[dstPos+2]=b,angle.data[dstPos+3]=a;for(y=0;y<ySize;y+=1)for(rMax=Math.floor(xSize$jscomp$0),i=0;i<power;i+=1){for(x=0;x<rMax+1;x+=1)a=4*(xSize*y+x),xoff=angle.data[a+0],g=angle.data[a+1],b=angle.data[a+2],a=angle.data[a+3],dstPos=4*(xSize*y+2*rMax-x-1),angle.data[dstPos+0]=xoff,angle.data[dstPos+1]=g,angle.data[dstPos+2]=b,angle.data[dstPos+3]=a;rMax*=2}xoff={polarRotation:0};xSize=angle.data;
imageData=imageData.data;ySize=angle.width;angle=angle.height;power=xoff.polarCenterX||ySize/2;i=xoff.polarCenterY||angle/2;x=Math.sqrt(power*power+i*i);y=ySize-power;xSize$jscomp$0=angle-i;y=Math.sqrt(y*y+xSize$jscomp$0*xSize$jscomp$0);x=y>x?y:x;xoff=xoff.polarRotation||0;for(y=0;y<ySize;y+=1)for(xSize$jscomp$0=0;xSize$jscomp$0<angle;xSize$jscomp$0+=1)b=y-power,rMax=xSize$jscomp$0-i,g=Math.sqrt(b*b+rMax*rMax)*angle/x,b=(180*Math.atan2(rMax,b)/Math.PI+360+xoff)%360,b=b*ySize/360,b=Math.floor(b),g=
Math.floor(g),g=4*(g*ySize+b),b=xSize[g+0],rMax=xSize[g+1],rad=xSize[g+2],theta=xSize[g+3],g=4*(xSize$jscomp$0*ySize+y),imageData[g+0]=b,imageData[g+1]=rMax,imageData[g+2]=rad,imageData[g+3]=theta}};global.Factory.addGetterSetter(module.Node,"kaleidoscopePower",2,require.getNumberValidator(),global.Factory.afterSetFilter);global.Factory.addGetterSetter(module.Node,"kaleidoscopeAngle",0,require.getNumberValidator(),global.Factory.afterSetFilter)}
//# sourceMappingURL=module$node_modules$konva$lib$filters$Kaleidoscope.js.map
