{
"version":3,
"file":"module$node_modules$konva$lib$filters$Pixelate.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3GC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACIC,OAAAA,CAAYN,OAAA,CAAQ,uCAAR,CAChB,KAAIO,OAASP,OAAA,CAAQ,oCAAR,CACTQ,OAAAA,CAASR,OAAA,CAAQ,oCAAR,CACTS,QAAAA,CAAeT,OAAA,CAAQ,0CAAR,CACnBE,QAAAQ,SAAA,CAAmBC,QAAS,CAACC,SAAD,CAAY,CAAA,IAChCC,UAAYC,IAAAC,KAAA,CAAU,IAAAF,UAAA,EAAV,CADoB,CACSG,MAAQJ,SAAAI,MADjB,CACkCC,OAASL,SAAAK,OAD3C;AACgEC,CADhE,CACsEC,GADtE,CAC2EC,KAD3E,CACkFC,IADlF,CAC+FC,OAASR,IAAAC,KAAA,CAAUC,KAAV,CAAkBH,SAAlB,CADxG,CACsIU,OAAST,IAAAC,KAAA,CAAUE,MAAV,CAAmBJ,SAAnB,CAD/I,CACsNW,IADtN,CAC4NC,IAD5N,CAC+OC,KAAOd,SAAAc,KAC1R,IAAiB,CAAjB,EAAIb,SAAJ,CACIN,MAAAoB,KAAAC,MAAA,CAAkB,uCAAlB,CADJ,KAIA,KAAKJ,IAAL,CAAY,CAAZ,CAAeA,IAAf,CAAsBF,MAAtB,CAA8BE,IAA9B,EAAsC,CAAtC,CACI,IAAKC,IAAL,CAAY,CAAZ,CAAeA,IAAf,CAAsBF,MAAtB,CAA8BE,IAA9B,EAAsC,CAAtC,CAAyC,CAIrC,IAAAI,MADAR,IACAQ,CAFAT,KAEAS,CAHAV,GAGAU,CAHM,CAIN,KAAAC,UAAYN,IAAZM,CAAmBjB,SACnB,KAAAkB,QAAUD,SAAVC,CAAsBlB,SACtB,KAAAmB,UAAYP,IAAZO,CAAmBnB,SACnB,KAAAoB,QAAUD,SAAVC,CAAsBpB,SACtB,KAAAqB,YAAc,CACd,KAAKC,SAAL,CAASL,SAAT,CAAoBK,SAApB,CAAwBJ,OAAxB,CAAiCI,SAAjC,EAAsC,CAAtC,CACI,GAAI,EAAAA,SAAA,EAAKnB,KAAL,CAAJ,CAGA,IAAKE,CAAL;AAASc,SAAT,CAAoBd,CAApB,CAAwBe,OAAxB,CAAiCf,CAAjC,EAAsC,CAAtC,CACI,GAAI,EAAAA,CAAA,EAAKD,MAAL,CAAJ,CAAA,CAGA,IAAAmB,EAAsB,CAAtBA,EAAKpB,KAALoB,CAAalB,CAAbkB,CAAiBD,SAAjBC,CACAjB,IAAA,EAAOO,IAAA,CAAKU,CAAL,CAAS,CAAT,CACPhB,MAAA,EAASM,IAAA,CAAKU,CAAL,CAAS,CAAT,CACTf,KAAA,EAAQK,IAAA,CAAKU,CAAL,CAAS,CAAT,CACRP,MAAA,EAASH,IAAA,CAAKU,CAAL,CAAS,CAAT,CACTF,YAAA,EAAe,CARf,CAWFf,GAAN,EAAYe,WACJd,MAAR,EAAgBc,WACTb,KAAP,EAAca,WACNL,MAAR,EAAgBK,WAChB,KAAKC,SAAL,CAASL,SAAT,CAAoBK,SAApB,CAAwBJ,OAAxB,CAAiCI,SAAjC,EAAsC,CAAtC,CACI,GAAI,EAAAA,SAAA,EAAKnB,KAAL,CAAJ,CAGA,IAAKE,CAAL,CAASc,SAAT,CAAoBd,CAApB,CAAwBe,OAAxB,CAAiCf,CAAjC,EAAsC,CAAtC,CACQA,CAAJ,EAASD,MAAT,GAGAmB,CAIA,CAJsB,CAItB,EAJKpB,KAIL,CAJaE,CAIb,CAJiBiB,SAIjB,EAHAT,IAAA,CAAKU,CAAL,CAAS,CAAT,CAGA,CAHcjB,GAGd,CAFAO,IAAA,CAAKU,CAAL,CAAS,CAAT,CAEA,CAFchB,KAEd,CADAM,IAAA,CAAKU,CAAL,CAAS,CAAT,CACA,CADcf,IACd,CAAAK,IAAA,CAAKU,CAAL,CAAS,CAAT,CAAA,CAAcP,KAPd,CAnC6B,CAPT,CAuDxCvB,OAAA+B,QAAAC,gBAAA,CAAkC9B,MAAA+B,KAAlC,CAA+C,WAA/C,CAA4D,CAA5D,CAA+D9B,OAAA+B,mBAAA,EAA/D;AAAkGlC,MAAA+B,QAAAI,eAAlG,CA9D2G;",
"sources":["node_modules/konva/lib/filters/Pixelate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$filters$Pixelate\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Util_1 = require(\"../Util\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util_1.Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Factory_1","Util_1","Node_1","Validators_1","Pixelate","exports.Pixelate","imageData","pixelSize","Math","ceil","width","height","y","red","green","blue","nBinsX","nBinsY","xBin","yBin","data","Util","error","alpha","xBinStart","xBinEnd","yBinStart","yBinEnd","pixelsInBin","x","i","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"]
}
