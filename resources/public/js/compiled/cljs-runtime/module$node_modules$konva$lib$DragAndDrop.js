shadow$provide.module$node_modules$konva$lib$DragAndDrop=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var Global_1=require("module$node_modules$konva$lib$Global"),Util_1=require("module$node_modules$konva$lib$Util");exports.DD={get isDragging(){var flag=!1;exports.DD._dragElements.forEach(function(elem){"dragging"===elem.dragStatus&&(flag=!0)});return flag},justDragged:!1,get node(){var node;exports.DD._dragElements.forEach(function(elem){node=elem.node});
return node},_dragElements:new Map,_drag:function(evt){exports.DD._dragElements.forEach(function(elem,key){key=elem.node;var stage=key.getStage();stage.setPointersPositions(evt);void 0===elem.pointerId&&(elem.pointerId=Util_1.Util._getFirstPointerId(evt));if(stage=stage._changedPointerPositions.find(function(pos){return pos.id===elem.pointerId})){if("dragging"!==elem.dragStatus){var dragDistance=key.dragDistance();if(Math.max(Math.abs(stage.x-elem.startPointerPos.x),Math.abs(stage.y-elem.startPointerPos.y))<
dragDistance)return;key.startDrag({evt:evt});if(!key.isDragging())return}key._setDragPosition(evt,elem);key.fire("dragmove",{type:"dragmove",target:key,evt:evt},!0)}})},_endDragBefore:function(evt){exports.DD._dragElements.forEach(function(elem,key){key=elem.node.getStage();evt&&key.setPointersPositions(evt);key._changedPointerPositions.find(function(pos){return pos.id===elem.pointerId})&&("dragging"===elem.dragStatus&&(exports.DD.justDragged=!0,Global_1.Konva.listenClickTap=!1,elem.dragStatus="stopped"),
(key=elem.node.getLayer()||elem.node instanceof Global_1.Konva.Stage&&elem.node)&&key.draw())})},_endDragAfter:function(evt){exports.DD._dragElements.forEach(function(elem,key){"stopped"===elem.dragStatus&&elem.node.fire("dragend",{type:"dragend",target:elem.node,evt:evt},!0);"dragging"!==elem.dragStatus&&exports.DD._dragElements.delete(key)})}};Global_1.Konva.isBrowser&&(window.addEventListener("mouseup",exports.DD._endDragBefore,!0),window.addEventListener("touchend",exports.DD._endDragBefore,!0),
window.addEventListener("mousemove",exports.DD._drag),window.addEventListener("touchmove",exports.DD._drag),window.addEventListener("mouseup",exports.DD._endDragAfter,!1),window.addEventListener("touchend",exports.DD._endDragAfter,!1))}
//# sourceMappingURL=module$node_modules$konva$lib$DragAndDrop.js.map
