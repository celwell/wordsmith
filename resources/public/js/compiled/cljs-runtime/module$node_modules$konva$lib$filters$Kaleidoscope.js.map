{
"version":3,
"file":"module$node_modules$konva$lib$filters$Kaleidoscope.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/konva/lib/filters/Kaleidoscope.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$filters$Kaleidoscope\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Util_1 = require(\"../Util\");\nvar Validators_1 = require(\"../Validators\");\nvar ToPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar FromPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nexports.Kaleidoscope = function (imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    var tempCanvas = Util_1.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n        .getContext('2d')\n        .getImageData(0, 0, xSize, ySize);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Factory_1","Node_1","Util_1","Validators_1","Kaleidoscope","exports.Kaleidoscope","imageData","xSize","width","ySize","height","power","Math","round","kaleidoscopePower","angle","kaleidoscopeAngle","offset","floor","tempCanvas","Util","createCanvasElement","scratchData","getContext","getImageData","srcPixels","data","dstPixels","xMid","yMid","rMax","sqrt","x","y","rad","theta","conversion","PI","sin","cos","radius","i","r","g","b","a","minSectionSize","pow","sectionSize","ceil","xStart","xEnd","xDelta","xoff","srcPos","dstPos","polarRotation","opt","polarCenterX","polarCenterY","phaseShift","dx","dy","atan2","x1","y1","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"]
}
