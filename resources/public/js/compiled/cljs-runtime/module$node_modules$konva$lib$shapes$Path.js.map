{
"version":3,
"file":"module$node_modules$konva$lib$shapes$Path.js",
"lineCount":23,
"mappings":"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",
"sources":["node_modules/konva/lib/shapes/Path.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$konva$lib$shapes$Path\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Global_1 = require(\"../Global\");\nvar Path = (function (_super) {\n    __extends(Path, _super);\n    function Path(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataArray = [];\n        _this.pathLength = 0;\n        _this.dataArray = Path.parsePathData(_this.data());\n        _this.pathLength = 0;\n        for (var i = 0; i < _this.dataArray.length; ++i) {\n            _this.pathLength += _this.dataArray[i].pathLength;\n        }\n        _this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n        return _this;\n    }\n    Path.prototype._sceneFunc = function (context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    context.closePath();\n                    break;\n            }\n        }\n        context.fillStrokeShape(this);\n    };\n    Path.prototype.getSelfRect = function () {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            points = points.concat(data.points);\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY)\n        };\n    };\n    Path.prototype.getLength = function () {\n        return this.pathLength;\n    };\n    Path.prototype.getPointAtLength = function (length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    };\n    Path.getLineLength = function (x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    };\n    Path.getPointOnLine = function (dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            if (len < 0.00000001) {\n                return undefined;\n            }\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise\n            };\n        }\n        return pt;\n    };\n    Path.getPointOnCubicBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Path.getPointOnQuadraticBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Path.getPointOnEllipticalArc = function (cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta)\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n        };\n    };\n    Path.parsePathData = function (data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A'\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points)\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0\n                });\n            }\n        }\n        return ca;\n    };\n    Path.calcLength = function (x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    };\n    Path.convertEndpointToCenterParameterization = function (x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    };\n    return Path;\n}(Shape_1.Shape));\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\nGlobal_1._registerNode(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\nUtil_1.Collection.mapMethods(Path);\n\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","Util_1","Factory_1","Shape_1","Global_1","Path","_super","config","_this","call","dataArray","pathLength","parsePathData","data","i","length","on","_sceneFunc","Path.prototype._sceneFunc","context","ca","beginPath","n","points","command","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","fillStrokeShape","getSelfRect","Path.prototype.getSelfRect","forEach","concat","minX","maxX","minY","maxY","x","y","isNaN","Math","min","max","round","width","height","getLength","Path.prototype.getLength","getPointAtLength","Path.prototype.getPointAtLength","ii","point","slice","cp","getPointOnLine","start","getPointOnCubicBezier","getPointOnQuadraticBezier","getPointOnEllipticalArc","getLineLength","Path.getLineLength","x1","y1","x2","y2","sqrt","Path.getPointOnLine","dist","P1x","P1y","P2x","P2y","fromX","fromY","undefined","m","run","rise","pt","len","u","ix","pRise","iy","pRun","Path.getPointOnCubicBezier","pct","P3x","P3y","P4x","P4y","Path.getPointOnQuadraticBezier","Path.getPointOnEllipticalArc","cosPsi","cos","sinPsi","sin","Path.parsePathData","cc","cs","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","c","charAt","exec","push","j","jlen","parsed","parseFloat","cmd","startX","startY","ctlPty","shift","dx","dy","idx","ctlPtx","prevCmd","fa","convertEndpointToCenterParameterization","calcLength","Path.calcLength","t","p1","p2","end","inc","PI","abs","Path.convertEndpointToCenterParameterization","psiDeg","xp","yp","lambda","f","cxp","cyp","vRatio","v","vAngle","acos","Shape","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","Collection","mapMethods"]
}
